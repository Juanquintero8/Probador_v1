

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 04 19:49:32 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0009                     _PORTE	set	9
   171  0008                     _PORTD	set	8
   172  0007                     _PORTC	set	7
   173  0006                     _PORTB	set	6
   174  0005                     _PORTA	set	5
   175  0049                     _RE1	set	73
   176  0048                     _RE0	set	72
   177  0089                     _TRISE	set	137
   178  009F                     _ADCON1	set	159
   179  0088                     _TRISD	set	136
   180  0087                     _TRISC	set	135
   181  0086                     _TRISB	set	134
   182  0085                     _TRISA	set	133
   183                           
   184                           	psect	cinit
   185  07FA                     start_initialization:	
   186                           ; #config settings
   187                           
   188  07FA                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   192  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   193  07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  07FC                     __end_of__initialization:
   197  07FC  0183               	clrf	3
   198  07FD  120A  118A  2E93   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0078                     __pbssCOMMON:
   202  0078                     _xx:
   203  0078                     	ds	1
   204  0079                     _puerto:
   205  0079                     	ds	1
   206                           
   207                           	psect	cstackCOMMON
   208  0070                     __pcstackCOMMON:
   209  0070                     ?_port_conf:
   210  0070                     ??_port_conf:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_porte_ent:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ??_porte_ent:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_porte_sal:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ??_porte_sal:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ??_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233  0070                     	ds	3
   234  0073                     main@i:
   235                           
   236                           ; 1 bytes @ 0x3
   237  0073                     	ds	1
   238  0074                     main@i_61:
   239                           
   240                           ; 1 bytes @ 0x4
   241  0074                     	ds	1
   242  0075                     main@i_62:
   243                           
   244                           ; 1 bytes @ 0x5
   245  0075                     	ds	1
   246  0076                     main@i_63:
   247                           
   248                           ; 1 bytes @ 0x6
   249  0076                     	ds	1
   250  0077                     main@i_64:
   251                           
   252                           ; 1 bytes @ 0x7
   253  0077                     	ds	1
   254                           
   255                           	psect	maintext
   256  0693                     __pmaintext:	
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 36 in file "Probador1.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  i               1    7[COMMON] unsigned char 
   267 ;;  i               1    6[COMMON] unsigned char 
   268 ;;  i               1    5[COMMON] unsigned char 
   269 ;;  i               1    4[COMMON] unsigned char 
   270 ;;  i               1    3[COMMON] unsigned char 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         5       0       0       0       0
   282 ;;      Temps:          3       0       0       0       0
   283 ;;      Totals:         8       0       0       0       0
   284 ;;Total ram usage:        8 bytes
   285 ;; Hardware stack levels required when called: 1
   286 ;; This function calls:
   287 ;;		_port_conf
   288 ;;		_porte_ent
   289 ;;		_porte_sal
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295  0693                     _main:	
   296                           ;psect for function _main
   297                           
   298  0693                     l709:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   301                           
   302                           
   303                           ;Probador1.c: 37:     port_conf();
   304  0693  120A  118A  2683  120A  118A  	fcall	_port_conf
   305                           
   306                           ;Probador1.c: 38:     porte_ent();
   307  0698  120A  118A  267E  120A  118A  	fcall	_porte_ent
   308  069D  2EA4               	goto	l44
   309  069E                     l711:
   310                           
   311                           ;Probador1.c: 43:             if (xx == 1) {
   312  069E  0378               	decf	_xx,w
   313  069F  1D03               	btfss	3,2
   314  06A0  2EA2               	goto	u11
   315  06A1  2EA3               	goto	u10
   316  06A2                     u11:
   317  06A2  2EA4               	goto	l44
   318  06A3                     u10:
   319  06A3  2EAA               	goto	l47
   320  06A4                     l44:	
   321                           ;Probador1.c: 47:         }
   322                           
   323                           
   324                           ;Probador1.c: 42:         while (RE0 == 0) {
   325  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   326  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   327  06A6  1C09               	btfss	9,0	;volatile
   328  06A7  2EA9               	goto	u21
   329  06A8  2EAA               	goto	u20
   330  06A9                     u21:
   331  06A9  2E9E               	goto	l711
   332  06AA                     u20:
   333  06AA                     l47:
   334                           
   335                           ;Probador1.c: 48:         xx = 1;
   336  06AA  01F8               	clrf	_xx
   337  06AB  0AF8               	incf	_xx,f
   338                           
   339                           ;Probador1.c: 50:         switch (puerto) {
   340  06AC  2FDE               	goto	l805
   341  06AD                     l715:
   342                           
   343                           ;Probador1.c: 52:                 for (char i = 0; i < 7; i++) {
   344  06AD  01F3               	clrf	main@i
   345  06AE                     l717:
   346  06AE  3007               	movlw	7
   347  06AF  0273               	subwf	main@i,w
   348  06B0  1C03               	skipc
   349  06B1  2EB3               	goto	u31
   350  06B2  2EB4               	goto	u30
   351  06B3                     u31:
   352  06B3  2EB5               	goto	l721
   353  06B4                     u30:
   354  06B4  2ED9               	goto	l52
   355  06B5                     l721:
   356                           
   357                           ;Probador1.c: 53:                     PORTA = (1 << i);
   358  06B5  3001               	movlw	1
   359  06B6  00F0               	movwf	??_main
   360  06B7  0A73               	incf	main@i,w
   361  06B8  2EBB               	goto	u44
   362  06B9                     u45:
   363  06B9  1003               	clrc
   364  06BA  0DF0               	rlf	??_main,f
   365  06BB                     u44:
   366  06BB  3EFF               	addlw	-1
   367  06BC  1D03               	skipz
   368  06BD  2EB9               	goto	u45
   369  06BE  0870               	movf	??_main,w
   370  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   371  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   372  06C1  0085               	movwf	5	;volatile
   373  06C2                     l723:
   374                           
   375                           ;Probador1.c: 54:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   376  06C2  3003               	movlw	3
   377  06C3  00F2               	movwf	??_main+2
   378  06C4  308A               	movlw	138
   379  06C5  00F1               	movwf	??_main+1
   380  06C6  3055               	movlw	85
   381  06C7  00F0               	movwf	??_main
   382  06C8                     u287:
   383  06C8  0BF0               	decfsz	??_main,f
   384  06C9  2EC8               	goto	u287
   385  06CA  0BF1               	decfsz	??_main+1,f
   386  06CB  2EC8               	goto	u287
   387  06CC  0BF2               	decfsz	??_main+2,f
   388  06CD  2EC8               	goto	u287
   389  06CE  2ECF               	nop2
   390  06CF                     l725:
   391                           
   392                           ;Probador1.c: 55:                 }
   393  06CF  3001               	movlw	1
   394  06D0  00F0               	movwf	??_main
   395  06D1  0870               	movf	??_main,w
   396  06D2  07F3               	addwf	main@i,f
   397  06D3  3007               	movlw	7
   398  06D4  0273               	subwf	main@i,w
   399  06D5  1C03               	skipc
   400  06D6  2ED8               	goto	u51
   401  06D7  2ED9               	goto	u50
   402  06D8                     u51:
   403  06D8  2EB5               	goto	l721
   404  06D9                     u50:
   405  06D9                     l52:	
   406                           ;Probador1.c: 56:                 while (1) {
   407                           
   408                           
   409                           ;Probador1.c: 57:                     if (RE1 == 1) {
   410  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   411  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   412  06DB  1C89               	btfss	9,1	;volatile
   413  06DC  2EDE               	goto	u61
   414  06DD  2EDF               	goto	u60
   415  06DE                     u61:
   416  06DE  2EE1               	goto	l53
   417  06DF                     u60:
   418  06DF                     l727:
   419                           
   420                           ;Probador1.c: 58:                         puerto = 0;
   421  06DF  01F9               	clrf	_puerto
   422                           
   423                           ;Probador1.c: 59:                         break;
   424  06E0  2EA4               	goto	l44
   425  06E1                     l53:	
   426                           ;Probador1.c: 60:                     }
   427                           
   428                           
   429                           ;Probador1.c: 61:                     if (RE0 == 1) {
   430  06E1  1C09               	btfss	9,0	;volatile
   431  06E2  2EE4               	goto	u71
   432  06E3  2EE5               	goto	u70
   433  06E4                     u71:
   434  06E4  2ED9               	goto	l52
   435  06E5                     u70:
   436  06E5                     l729:
   437                           
   438                           ;Probador1.c: 62:                         puerto = 1;
   439  06E5  01F9               	clrf	_puerto
   440  06E6  0AF9               	incf	_puerto,f
   441                           
   442                           ;Probador1.c: 63:                         break;
   443  06E7  2EA4               	goto	l44
   444  06E8                     l731:
   445                           
   446                           ;Probador1.c: 69:                 for (char i = 0; i < 9; i++) {
   447  06E8  01F4               	clrf	main@i_61
   448  06E9                     l733:
   449  06E9  3009               	movlw	9
   450  06EA  0274               	subwf	main@i_61,w
   451  06EB  1C03               	skipc
   452  06EC  2EEE               	goto	u81
   453  06ED  2EEF               	goto	u80
   454  06EE                     u81:
   455  06EE  2EF0               	goto	l737
   456  06EF                     u80:
   457  06EF  2F14               	goto	l61
   458  06F0                     l737:
   459                           
   460                           ;Probador1.c: 70:                     PORTB = (1 << i);
   461  06F0  3001               	movlw	1
   462  06F1  00F0               	movwf	??_main
   463  06F2  0A74               	incf	main@i_61,w
   464  06F3  2EF6               	goto	u94
   465  06F4                     u95:
   466  06F4  1003               	clrc
   467  06F5  0DF0               	rlf	??_main,f
   468  06F6                     u94:
   469  06F6  3EFF               	addlw	-1
   470  06F7  1D03               	skipz
   471  06F8  2EF4               	goto	u95
   472  06F9  0870               	movf	??_main,w
   473  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   474  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   475  06FC  0086               	movwf	6	;volatile
   476  06FD                     l739:
   477                           
   478                           ;Probador1.c: 71:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   479  06FD  3003               	movlw	3
   480  06FE  00F2               	movwf	??_main+2
   481  06FF  308A               	movlw	138
   482  0700  00F1               	movwf	??_main+1
   483  0701  3055               	movlw	85
   484  0702  00F0               	movwf	??_main
   485  0703                     u297:
   486  0703  0BF0               	decfsz	??_main,f
   487  0704  2F03               	goto	u297
   488  0705  0BF1               	decfsz	??_main+1,f
   489  0706  2F03               	goto	u297
   490  0707  0BF2               	decfsz	??_main+2,f
   491  0708  2F03               	goto	u297
   492  0709  2F0A               	nop2
   493  070A                     l741:
   494                           
   495                           ;Probador1.c: 72:                 }
   496  070A  3001               	movlw	1
   497  070B  00F0               	movwf	??_main
   498  070C  0870               	movf	??_main,w
   499  070D  07F4               	addwf	main@i_61,f
   500  070E  3009               	movlw	9
   501  070F  0274               	subwf	main@i_61,w
   502  0710  1C03               	skipc
   503  0711  2F13               	goto	u101
   504  0712  2F14               	goto	u100
   505  0713                     u101:
   506  0713  2EF0               	goto	l737
   507  0714                     u100:
   508  0714                     l61:	
   509                           ;Probador1.c: 73:                 while (1) {
   510                           
   511                           
   512                           ;Probador1.c: 74:                     if (RE1 == 1) {
   513  0714  1283               	bcf	3,5	;RP0=0, select bank0
   514  0715  1303               	bcf	3,6	;RP1=0, select bank0
   515  0716  1C89               	btfss	9,1	;volatile
   516  0717  2F19               	goto	u111
   517  0718  2F1A               	goto	u110
   518  0719                     u111:
   519  0719  2F1B               	goto	l62
   520  071A                     u110:
   521  071A  2EE5               	goto	l729
   522  071B                     l62:	
   523                           ;Probador1.c: 77:                     }
   524                           
   525                           
   526                           ;Probador1.c: 78:                     if (RE0 == 1) {
   527  071B  1C09               	btfss	9,0	;volatile
   528  071C  2F1E               	goto	u121
   529  071D  2F1F               	goto	u120
   530  071E                     u121:
   531  071E  2F14               	goto	l61
   532  071F                     u120:
   533  071F                     l745:
   534                           
   535                           ;Probador1.c: 79:                         puerto = 2;
   536  071F  3002               	movlw	2
   537  0720  00F0               	movwf	??_main
   538  0721  0870               	movf	??_main,w
   539  0722  00F9               	movwf	_puerto
   540                           
   541                           ;Probador1.c: 80:                         break;
   542  0723  2EA4               	goto	l44
   543  0724                     l747:
   544                           
   545                           ;Probador1.c: 86:                 for (char i = 0; i < 9; i++) {
   546  0724  01F5               	clrf	main@i_62
   547  0725                     l749:
   548  0725  3009               	movlw	9
   549  0726  0275               	subwf	main@i_62,w
   550  0727  1C03               	skipc
   551  0728  2F2A               	goto	u131
   552  0729  2F2B               	goto	u130
   553  072A                     u131:
   554  072A  2F2C               	goto	l753
   555  072B                     u130:
   556  072B  2F50               	goto	l69
   557  072C                     l753:
   558                           
   559                           ;Probador1.c: 87:                     PORTC = (1 << i);
   560  072C  3001               	movlw	1
   561  072D  00F0               	movwf	??_main
   562  072E  0A75               	incf	main@i_62,w
   563  072F  2F32               	goto	u144
   564  0730                     u145:
   565  0730  1003               	clrc
   566  0731  0DF0               	rlf	??_main,f
   567  0732                     u144:
   568  0732  3EFF               	addlw	-1
   569  0733  1D03               	skipz
   570  0734  2F30               	goto	u145
   571  0735  0870               	movf	??_main,w
   572  0736  1283               	bcf	3,5	;RP0=0, select bank0
   573  0737  1303               	bcf	3,6	;RP1=0, select bank0
   574  0738  0087               	movwf	7	;volatile
   575  0739                     l755:
   576                           
   577                           ;Probador1.c: 88:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   578  0739  3003               	movlw	3
   579  073A  00F2               	movwf	??_main+2
   580  073B  308A               	movlw	138
   581  073C  00F1               	movwf	??_main+1
   582  073D  3055               	movlw	85
   583  073E  00F0               	movwf	??_main
   584  073F                     u307:
   585  073F  0BF0               	decfsz	??_main,f
   586  0740  2F3F               	goto	u307
   587  0741  0BF1               	decfsz	??_main+1,f
   588  0742  2F3F               	goto	u307
   589  0743  0BF2               	decfsz	??_main+2,f
   590  0744  2F3F               	goto	u307
   591  0745  2F46               	nop2
   592  0746                     l757:
   593                           
   594                           ;Probador1.c: 89:                 }
   595  0746  3001               	movlw	1
   596  0747  00F0               	movwf	??_main
   597  0748  0870               	movf	??_main,w
   598  0749  07F5               	addwf	main@i_62,f
   599  074A  3009               	movlw	9
   600  074B  0275               	subwf	main@i_62,w
   601  074C  1C03               	skipc
   602  074D  2F4F               	goto	u151
   603  074E  2F50               	goto	u150
   604  074F                     u151:
   605  074F  2F2C               	goto	l753
   606  0750                     u150:
   607  0750                     l69:	
   608                           ;Probador1.c: 90:                 while (1) {
   609                           
   610                           
   611                           ;Probador1.c: 91:                     if (RE1 == 1) {
   612  0750  1283               	bcf	3,5	;RP0=0, select bank0
   613  0751  1303               	bcf	3,6	;RP1=0, select bank0
   614  0752  1C89               	btfss	9,1	;volatile
   615  0753  2F55               	goto	u161
   616  0754  2F56               	goto	u160
   617  0755                     u161:
   618  0755  2F57               	goto	l70
   619  0756                     u160:
   620  0756  2F1F               	goto	l745
   621  0757                     l70:	
   622                           ;Probador1.c: 94:                     }
   623                           
   624                           
   625                           ;Probador1.c: 95:                     if (RE0 == 1) {
   626  0757  1C09               	btfss	9,0	;volatile
   627  0758  2F5A               	goto	u171
   628  0759  2F5B               	goto	u170
   629  075A                     u171:
   630  075A  2F50               	goto	l69
   631  075B                     u170:
   632  075B                     l761:
   633                           
   634                           ;Probador1.c: 96:                         puerto = 3;
   635  075B  3003               	movlw	3
   636  075C  00F0               	movwf	??_main
   637  075D  0870               	movf	??_main,w
   638  075E  00F9               	movwf	_puerto
   639                           
   640                           ;Probador1.c: 97:                         break;
   641  075F  2EA4               	goto	l44
   642  0760                     l763:
   643                           
   644                           ;Probador1.c: 103:                 for (char i = 0; i < 9; i++) {
   645  0760  01F6               	clrf	main@i_63
   646  0761                     l765:
   647  0761  3009               	movlw	9
   648  0762  0276               	subwf	main@i_63,w
   649  0763  1C03               	skipc
   650  0764  2F66               	goto	u181
   651  0765  2F67               	goto	u180
   652  0766                     u181:
   653  0766  2F68               	goto	l769
   654  0767                     u180:
   655  0767  2F8C               	goto	l77
   656  0768                     l769:
   657                           
   658                           ;Probador1.c: 104:                     PORTD = (1 << i);
   659  0768  3001               	movlw	1
   660  0769  00F0               	movwf	??_main
   661  076A  0A76               	incf	main@i_63,w
   662  076B  2F6E               	goto	u194
   663  076C                     u195:
   664  076C  1003               	clrc
   665  076D  0DF0               	rlf	??_main,f
   666  076E                     u194:
   667  076E  3EFF               	addlw	-1
   668  076F  1D03               	skipz
   669  0770  2F6C               	goto	u195
   670  0771  0870               	movf	??_main,w
   671  0772  1283               	bcf	3,5	;RP0=0, select bank0
   672  0773  1303               	bcf	3,6	;RP1=0, select bank0
   673  0774  0088               	movwf	8	;volatile
   674  0775                     l771:
   675                           
   676                           ;Probador1.c: 105:                     _delay((unsigned long)((500)*(4000000UL/4000.0)))
      +                          ;
   677  0775  3003               	movlw	3
   678  0776  00F2               	movwf	??_main+2
   679  0777  308A               	movlw	138
   680  0778  00F1               	movwf	??_main+1
   681  0779  3055               	movlw	85
   682  077A  00F0               	movwf	??_main
   683  077B                     u317:
   684  077B  0BF0               	decfsz	??_main,f
   685  077C  2F7B               	goto	u317
   686  077D  0BF1               	decfsz	??_main+1,f
   687  077E  2F7B               	goto	u317
   688  077F  0BF2               	decfsz	??_main+2,f
   689  0780  2F7B               	goto	u317
   690  0781  2F82               	nop2
   691  0782                     l773:
   692                           
   693                           ;Probador1.c: 106:                 }
   694  0782  3001               	movlw	1
   695  0783  00F0               	movwf	??_main
   696  0784  0870               	movf	??_main,w
   697  0785  07F6               	addwf	main@i_63,f
   698  0786  3009               	movlw	9
   699  0787  0276               	subwf	main@i_63,w
   700  0788  1C03               	skipc
   701  0789  2F8B               	goto	u201
   702  078A  2F8C               	goto	u200
   703  078B                     u201:
   704  078B  2F68               	goto	l769
   705  078C                     u200:
   706  078C                     l77:	
   707                           ;Probador1.c: 107:                 while (1) {
   708                           
   709                           
   710                           ;Probador1.c: 108:                     if (RE1 == 1) {
   711  078C  1283               	bcf	3,5	;RP0=0, select bank0
   712  078D  1303               	bcf	3,6	;RP1=0, select bank0
   713  078E  1C89               	btfss	9,1	;volatile
   714  078F  2F91               	goto	u211
   715  0790  2F92               	goto	u210
   716  0791                     u211:
   717  0791  2F93               	goto	l78
   718  0792                     u210:
   719  0792  2F5B               	goto	l761
   720  0793                     l78:	
   721                           ;Probador1.c: 111:                     }
   722                           
   723                           
   724                           ;Probador1.c: 112:                     if (RE0 == 1) {
   725  0793  1C09               	btfss	9,0	;volatile
   726  0794  2F96               	goto	u221
   727  0795  2F97               	goto	u220
   728  0796                     u221:
   729  0796  2F8C               	goto	l77
   730  0797                     u220:
   731  0797                     l777:
   732                           
   733                           ;Probador1.c: 113:                         puerto = 4;
   734  0797  3004               	movlw	4
   735  0798  00F0               	movwf	??_main
   736  0799  0870               	movf	??_main,w
   737  079A  00F9               	movwf	_puerto
   738  079B                     l779:
   739                           
   740                           ;Probador1.c: 114:                         porte_sal();
   741  079B  120A  118A  267A  120A  118A  	fcall	_porte_sal
   742                           
   743                           ;Probador1.c: 115:                         break;
   744  07A0  2EA4               	goto	l44
   745  07A1                     l781:
   746                           
   747                           ;Probador1.c: 121:                 for (char i = 0; i < 4; i++) {
   748  07A1  01F7               	clrf	main@i_64
   749  07A2                     l783:
   750  07A2  3004               	movlw	4
   751  07A3  0277               	subwf	main@i_64,w
   752  07A4  1C03               	skipc
   753  07A5  2FA7               	goto	u231
   754  07A6  2FA8               	goto	u230
   755  07A7                     u231:
   756  07A7  2FA9               	goto	l787
   757  07A8                     u230:
   758  07A8  2FCD               	goto	l793
   759  07A9                     l787:
   760                           
   761                           ;Probador1.c: 122:                     PORTE = (1 << i);
   762  07A9  3001               	movlw	1
   763  07AA  00F0               	movwf	??_main
   764  07AB  0A77               	incf	main@i_64,w
   765  07AC  2FAF               	goto	u244
   766  07AD                     u245:
   767  07AD  1003               	clrc
   768  07AE  0DF0               	rlf	??_main,f
   769  07AF                     u244:
   770  07AF  3EFF               	addlw	-1
   771  07B0  1D03               	skipz
   772  07B1  2FAD               	goto	u245
   773  07B2  0870               	movf	??_main,w
   774  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   775  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   776  07B5  0089               	movwf	9	;volatile
   777  07B6                     l789:
   778                           
   779                           ;Probador1.c: 123:                     _delay((unsigned long)((500)*(4000000UL/4000.0)))
      +                          ;
   780  07B6  3003               	movlw	3
   781  07B7  00F2               	movwf	??_main+2
   782  07B8  308A               	movlw	138
   783  07B9  00F1               	movwf	??_main+1
   784  07BA  3055               	movlw	85
   785  07BB  00F0               	movwf	??_main
   786  07BC                     u327:
   787  07BC  0BF0               	decfsz	??_main,f
   788  07BD  2FBC               	goto	u327
   789  07BE  0BF1               	decfsz	??_main+1,f
   790  07BF  2FBC               	goto	u327
   791  07C0  0BF2               	decfsz	??_main+2,f
   792  07C1  2FBC               	goto	u327
   793  07C2  2FC3               	nop2
   794  07C3                     l791:
   795                           
   796                           ;Probador1.c: 124:                 }
   797  07C3  3001               	movlw	1
   798  07C4  00F0               	movwf	??_main
   799  07C5  0870               	movf	??_main,w
   800  07C6  07F7               	addwf	main@i_64,f
   801  07C7  3004               	movlw	4
   802  07C8  0277               	subwf	main@i_64,w
   803  07C9  1C03               	skipc
   804  07CA  2FCC               	goto	u251
   805  07CB  2FCD               	goto	u250
   806  07CC                     u251:
   807  07CC  2FA9               	goto	l787
   808  07CD                     u250:
   809  07CD                     l793:
   810                           
   811                           ;Probador1.c: 125:                 porte_ent();
   812  07CD  120A  118A  267E  120A  118A  	fcall	_porte_ent
   813  07D2                     l795:
   814                           
   815                           ;Probador1.c: 127:                     if (RE1 == 1) {
   816  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   817  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   818  07D4  1C89               	btfss	9,1	;volatile
   819  07D5  2FD7               	goto	u261
   820  07D6  2FD8               	goto	u260
   821  07D7                     u261:
   822  07D7  2FD9               	goto	l86
   823  07D8                     u260:
   824  07D8  2F97               	goto	l777
   825  07D9                     l86:	
   826                           ;Probador1.c: 131:                     }
   827                           
   828                           
   829                           ;Probador1.c: 132:                     if (RE0 == 1) {
   830  07D9  1C09               	btfss	9,0	;volatile
   831  07DA  2FDC               	goto	u271
   832  07DB  2FDD               	goto	u270
   833  07DC                     u271:
   834  07DC  2FD2               	goto	l795
   835  07DD                     u270:
   836  07DD  2EDF               	goto	l727
   837  07DE                     l805:
   838  07DE  0879               	movf	_puerto,w
   839  07DF  00F0               	movwf	??_main
   840  07E0  01F1               	clrf	??_main+1
   841                           
   842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 1, Range of values is 0 to 0
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ; direct_byte           11     8 (fixed)
   849                           ; jumptable            260     6 (fixed)
   850                           ;	Chosen strategy is simple_byte
   851  07E1  0871               	movf	??_main+1,w
   852  07E2  3A00               	xorlw	0	; case 0
   853  07E3  1903               	skipnz
   854  07E4  2FE6               	goto	l857
   855  07E5  2EA4               	goto	l44
   856  07E6                     l857:
   857                           
   858                           ; Switch size 1, requested type "simple"
   859                           ; Number of cases is 5, Range of values is 0 to 4
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte           16     9 (average)
   863                           ; direct_byte           23     8 (fixed)
   864                           ; jumptable            260     6 (fixed)
   865                           ;	Chosen strategy is simple_byte
   866  07E6  0870               	movf	??_main,w
   867  07E7  3A00               	xorlw	0	; case 0
   868  07E8  1903               	skipnz
   869  07E9  2EAD               	goto	l715
   870  07EA  3A01               	xorlw	1	; case 1
   871  07EB  1903               	skipnz
   872  07EC  2EE8               	goto	l731
   873  07ED  3A03               	xorlw	3	; case 2
   874  07EE  1903               	skipnz
   875  07EF  2F24               	goto	l747
   876  07F0  3A01               	xorlw	1	; case 3
   877  07F1  1903               	skipnz
   878  07F2  2F60               	goto	l763
   879  07F3  3A07               	xorlw	7	; case 4
   880  07F4  1903               	skipnz
   881  07F5  2FA1               	goto	l781
   882  07F6  2EA4               	goto	l44
   883  07F7  120A  118A  2800   	ljmp	start
   884  07FA                     __end_of_main:
   885                           
   886                           	psect	text1
   887  067A                     __ptext1:	
   888 ;; *************** function _porte_sal *****************
   889 ;; Defined at:
   890 ;;		line 160 in file "Probador1.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917  067A                     _porte_sal:	
   918                           ;psect for function _porte_sal
   919                           
   920  067A                     l707:	
   921                           ;incstack = 0
   922                           ; Regs used in _porte_sal: [status,2]
   923                           
   924                           
   925                           ;Probador1.c: 161:     TRISE = 0b00000000;
   926  067A  1683               	bsf	3,5	;RP0=1, select bank1
   927  067B  1303               	bcf	3,6	;RP1=0, select bank1
   928  067C  0189               	clrf	9	;volatile
   929  067D                     l101:
   930  067D  0008               	return
   931  067E                     __end_of_porte_sal:
   932                           
   933                           	psect	text2
   934  067E                     __ptext2:	
   935 ;; *************** function _porte_ent *****************
   936 ;; Defined at:
   937 ;;		line 156 in file "Probador1.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964  067E                     _porte_ent:	
   965                           ;psect for function _porte_ent
   966                           
   967  067E                     l705:	
   968                           ;incstack = 0
   969                           ; Regs used in _porte_ent: [wreg]
   970                           
   971                           
   972                           ;Probador1.c: 157:     TRISE = 0b00000011;
   973  067E  3003               	movlw	3
   974  067F  1683               	bsf	3,5	;RP0=1, select bank1
   975  0680  1303               	bcf	3,6	;RP1=0, select bank1
   976  0681  0089               	movwf	9	;volatile
   977  0682                     l98:
   978  0682  0008               	return
   979  0683                     __end_of_porte_ent:
   980                           
   981                           	psect	text3
   982  0683                     __ptext3:	
   983 ;; *************** function _port_conf *****************
   984 ;; Defined at:
   985 ;;		line 143 in file "Probador1.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012  0683                     _port_conf:	
  1013                           ;psect for function _port_conf
  1014                           
  1015  0683                     l693:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _port_conf: [wreg+status,2]
  1018                           
  1019                           
  1020                           ;Probador1.c: 144:     puerto = 0;
  1021  0683  01F9               	clrf	_puerto
  1022                           
  1023                           ;Probador1.c: 145:     TRISA = 0b00000000;
  1024  0684  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0685  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0686  0185               	clrf	5	;volatile
  1027                           
  1028                           ;Probador1.c: 146:     TRISB = 0b00000000;
  1029  0687  0186               	clrf	6	;volatile
  1030                           
  1031                           ;Probador1.c: 147:     TRISC = 0b00000000;
  1032  0688  0187               	clrf	7	;volatile
  1033                           
  1034                           ;Probador1.c: 148:     TRISD = 0b00000000;
  1035  0689  0188               	clrf	8	;volatile
  1036  068A                     l695:
  1037                           
  1038                           ;Probador1.c: 149:     ADCON1 = 0b00000111;
  1039  068A  3007               	movlw	7
  1040  068B  009F               	movwf	31	;volatile
  1041  068C                     l697:
  1042                           
  1043                           ;Probador1.c: 150:     PORTB = 0;
  1044  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1045  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1046  068E  0186               	clrf	6	;volatile
  1047  068F                     l699:
  1048                           
  1049                           ;Probador1.c: 151:     PORTC = 0;
  1050  068F  0187               	clrf	7	;volatile
  1051  0690                     l701:
  1052                           
  1053                           ;Probador1.c: 152:     PORTD = 0;
  1054  0690  0188               	clrf	8	;volatile
  1055  0691                     l703:
  1056                           
  1057                           ;Probador1.c: 153:     PORTE = 0;
  1058  0691  0189               	clrf	9	;volatile
  1059  0692                     l95:
  1060  0692  0008               	return
  1061  0693                     __end_of_port_conf:
  1062  007E                     btemp	set	126	;btemp
  1063  007E                     wtemp0	set	126
  1064                           
  1065                           	psect	idloc
  1066                           
  1067                           ;Config register IDLOC0 @ 0x2000
  1068                           ;	unspecified, using default values
  1069  2000                     	org	8192
  1070  2000  3FFF               	dw	16383
  1071                           
  1072                           ;Config register IDLOC1 @ 0x2001
  1073                           ;	unspecified, using default values
  1074  2001                     	org	8193
  1075  2001  3FFF               	dw	16383
  1076                           
  1077                           ;Config register IDLOC2 @ 0x2002
  1078                           ;	unspecified, using default values
  1079  2002                     	org	8194
  1080  2002  3FFF               	dw	16383
  1081                           
  1082                           ;Config register IDLOC3 @ 0x2003
  1083                           ;	unspecified, using default values
  1084  2003                     	org	8195
  1085  2003  3FFF               	dw	16383
  1086                           
  1087                           	psect	config
  1088                           
  1089                           ;Config register CONFIG @ 0x2007
  1090                           ;	Oscillator Selection bits
  1091                           ;	FOSC = XT, XT oscillator
  1092                           ;	Watchdog Timer Enable bit
  1093                           ;	WDTE = OFF, WDT disabled
  1094                           ;	Power-up Timer Enable bit
  1095                           ;	PWRTE = ON, PWRT enabled
  1096                           ;	Brown-out Reset Enable bit
  1097                           ;	BOREN = ON, BOR enabled
  1098                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1099                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1100                           ;	Data EEPROM Memory Code Protection bit
  1101                           ;	CPD = OFF, Data EEPROM code protection off
  1102                           ;	Flash Program Memory Write Enable bits
  1103                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1104                           ;	In-Circuit Debugger Mode bit
  1105                           ;	DEBUG = 0x1, unprogrammed default
  1106                           ;	Flash Program Memory Code Protection bit
  1107                           ;	CP = OFF, Code protection off
  1108  2007                     	org	8199
  1109  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     225
                                              0 COMMON     8     8      0
                          _port_conf
                          _porte_ent
                          _porte_sal
 ---------------------------------------------------------------------------------
 (1) _porte_sal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _porte_ent                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _port_conf
   _porte_ent
   _porte_sal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 04 19:49:32 2025

                     l52 06D9                       l44 06A4                       l61 0714  
                     l53 06E1                       l70 0757                       l62 071B  
                     l47 06AA                       l77 078C                       l69 0750  
                     l86 07D9                       l78 0793                       l95 0692  
                     l98 0682                       u10 06A3                       u11 06A2  
                     u20 06AA                       u21 06A9                       u30 06B4  
                     u31 06B3                       u50 06D9                       u51 06D8  
                     u60 06DF                       u44 06BB                       u61 06DE  
                     u45 06B9                       u70 06E5                       u71 06E4  
                     u80 06EF                       u81 06EE                       u94 06F6  
                     u95 06F4                       _xx 0078                      l101 067D  
                    l701 0690                      l703 0691                      l711 069E  
                    l705 067E                      l721 06B5                      l707 067A  
                    l731 06E8                      l723 06C2                      l715 06AD  
                    l741 070A                      l733 06E9                      l725 06CF  
                    l717 06AE                      l805 07DE                      l709 0693  
                    l727 06DF                      l761 075B                      l753 072C  
                    l745 071F                      l737 06F0                      l729 06E5  
                    l771 0775                      l763 0760                      l755 0739  
                    l747 0724                      l739 06FD                      l693 0683  
                    l781 07A1                      l773 0782                      l765 0761  
                    l757 0746                      l749 0725                      l695 068A  
                    l791 07C3                      l783 07A2                      l697 068C  
                    l857 07E6                      l793 07CD                      l777 0797  
                    l769 0768                      l699 068F                      l795 07D2  
                    l787 07A9                      l779 079B                      l789 07B6  
                    _RE0 0048                      _RE1 0049                      u100 0714  
                    u101 0713                      u110 071A                      u111 0719  
                    u200 078C                      u120 071F                      u201 078B  
                    u121 071E                      u210 0792                      u130 072B  
                    u211 0791                      u131 072A                      u220 0797  
                    u221 0796                      u230 07A8                      u150 0750  
                    u231 07A7                      u151 074F                      u160 0756  
                    u144 0732                      u161 0755                      u145 0730  
                    u250 07CD                      u170 075B                      u251 07CC  
                    u171 075A                      u307 073F                      u260 07D8  
                    u244 07AF                      u180 0767                      u261 07D7  
                    u245 07AD                      u317 077B                      u181 0766  
                    u270 07DD                      u271 07DC                      u327 07BC  
                    u194 076E                      u195 076C                      u287 06C8  
                    u297 0703                     _main 0693                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  main@i 0073                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0070  
                 _ADCON1 009F                   _puerto 0079  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0693                  __ptext1 067A  
                __ptext2 067E                  __ptext3 0683     end_of_initialization 07FC  
      __end_of_port_conf 0693        __end_of_porte_ent 0683        __end_of_porte_sal 067E  
    start_initialization 07FA              __pbssCOMMON 0078                ___latbits 0002  
              _port_conf 0683                _porte_ent 067E                _porte_sal 067A  
             ?_port_conf 0070               ?_porte_ent 0070               ?_porte_sal 0070  
               main@i_61 0074                 main@i_62 0075                 main@i_63 0076  
               main@i_64 0077              ??_port_conf 0070              ??_porte_ent 0070  
            ??_porte_sal 0070  
