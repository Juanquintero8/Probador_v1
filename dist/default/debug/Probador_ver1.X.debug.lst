

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 07 16:21:58 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	idataCOMMON
   174  0776                     __pidataCOMMON:
   175                           
   176                           ;initializer for _prueba
   177  0776  3401               	retlw	1
   178  0009                     _PORTE	set	9
   179  0008                     _PORTD	set	8
   180  0007                     _PORTC	set	7
   181  0006                     _PORTB	set	6
   182  0005                     _PORTA	set	5
   183  0040                     _RD0	set	64
   184  0049                     _RE1	set	73
   185  0048                     _RE0	set	72
   186  0089                     _TRISE	set	137
   187  009F                     _ADCON1	set	159
   188  0088                     _TRISD	set	136
   189  0087                     _TRISC	set	135
   190  0086                     _TRISB	set	134
   191  0085                     _TRISA	set	133
   192                           
   193                           	psect	cinit
   194  07F3                     start_initialization:	
   195                           ; #config settings
   196                           
   197  07F3                     __initialization:
   198                           
   199                           ; Initialize objects allocated to COMMON
   200  07F3  120A  118A  2776  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   201  07F8  00F7               	movwf	__pdataCOMMON& (0+127)
   202                           
   203                           ; Clear objects allocated to COMMON
   204  07F9  01F4               	clrf	__pbssCOMMON& (0+127)
   205  07FA  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   206  07FB  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   207  07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210  07FC                     __end_of__initialization:
   211  07FC  0183               	clrf	3
   212  07FD  120A  118A  2F90   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMMON
   215  0074                     __pbssCOMMON:
   216  0074                     _xx:
   217  0074                     	ds	1
   218  0075                     _mask:
   219  0075                     	ds	1
   220  0076                     _puerto:
   221  0076                     	ds	1
   222                           
   223                           	psect	dataCOMMON
   224  0077                     __pdataCOMMON:
   225  0077                     _prueba:
   226  0077                     	ds	1
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:
   230  0070                     ?_port_conf_r1:
   231  0070                     ??_port_conf_r1:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_porte_ent:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_porte_ent:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_porte_sal:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??_porte_sal:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252                           
   253                           ; 1 bytes @ 0x0
   254  0070                     	ds	3
   255  0073                     main@i_68:
   256                           
   257                           ; 1 bytes @ 0x3
   258  0073                     	ds	1
   259                           
   260                           	psect	maintext
   261  0790                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 38 in file "Probador1.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  i               1    0        unsigned char 
   272 ;;  i               1    0        unsigned char 
   273 ;;  i               1    0        unsigned char 
   274 ;;  i               1    0        unsigned char 
   275 ;;  i               1    0        unsigned char 
   276 ;;  i               1    3[COMMON] unsigned char 
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         1       0       0       0       0
   288 ;;      Temps:          3       0       0       0       0
   289 ;;      Totals:         4       0       0       0       0
   290 ;;Total ram usage:        4 bytes
   291 ;; Hardware stack levels required when called: 1
   292 ;; This function calls:
   293 ;;		_port_conf_r1
   294 ;;		_porte_ent
   295 ;;		_porte_sal
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301  0790                     _main:	
   302                           ;psect for function _main
   303                           
   304  0790                     l721:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;Probador1.c: 39:     port_conf_r1();
   310  0790  120A  118A  2780  120A  118A  	fcall	_port_conf_r1
   311                           
   312                           ;Probador1.c: 40:     porte_ent();
   313  0795  120A  118A  277B  120A  118A  	fcall	_porte_ent
   314  079A  2FA1               	goto	l50
   315  079B                     l723:
   316                           
   317                           ;Probador1.c: 45:             if (xx == 1) {
   318  079B  0374               	decf	_xx,w
   319  079C  1D03               	btfss	3,2
   320  079D  2F9F               	goto	u11
   321  079E  2FA0               	goto	u10
   322  079F                     u11:
   323  079F  2FA1               	goto	l50
   324  07A0                     u10:
   325  07A0  2FA7               	goto	l53
   326  07A1                     l50:	
   327                           ;Probador1.c: 49:         }
   328                           
   329                           
   330                           ;Probador1.c: 44:         while (RE0 == 0) {
   331  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   332  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   333  07A3  1C09               	btfss	9,0	;volatile
   334  07A4  2FA6               	goto	u21
   335  07A5  2FA7               	goto	u20
   336  07A6                     u21:
   337  07A6  2F9B               	goto	l723
   338  07A7                     u20:
   339  07A7                     l53:
   340                           
   341                           ;Probador1.c: 50:         xx = 1;
   342  07A7  01F4               	clrf	_xx
   343  07A8  0AF4               	incf	_xx,f
   344  07A9                     l823:	
   345                           ;Probador1.c: 51:         if (prueba == 0) {
   346                           
   347                           
   348                           ;Probador1.c: 143:             TRISA = 0b11111111;
   349  07A9  30FF               	movlw	255
   350  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   351  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   352  07AC  0085               	movwf	5	;volatile
   353  07AD                     l825:
   354                           
   355                           ;Probador1.c: 144:             PORTD = 0x00;
   356  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   357  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   358  07AF  0188               	clrf	8	;volatile
   359  07B0                     l827:
   360                           
   361                           ;Probador1.c: 146:             for (unsigned char i = 0; i < 6; i++) {
   362  07B0  01F3               	clrf	main@i_68
   363  07B1  3006               	movlw	6
   364  07B2  0273               	subwf	main@i_68,w
   365  07B3  1C03               	skipc
   366  07B4  2FB6               	goto	u31
   367  07B5  2FB7               	goto	u30
   368  07B6                     u31:
   369  07B6  2FB8               	goto	l831
   370  07B7                     u30:
   371  07B7  2FA1               	goto	l50
   372  07B8                     l831:
   373                           
   374                           ;Probador1.c: 147:                 mask = (1 << i);
   375  07B8  3001               	movlw	1
   376  07B9  00F0               	movwf	??_main
   377  07BA  0A73               	incf	main@i_68,w
   378  07BB  2FBE               	goto	u44
   379  07BC                     u45:
   380  07BC  1003               	clrc
   381  07BD  0DF0               	rlf	??_main,f
   382  07BE                     u44:
   383  07BE  3EFF               	addlw	-1
   384  07BF  1D03               	skipz
   385  07C0  2FBC               	goto	u45
   386  07C1  0870               	movf	??_main,w
   387  07C2  00F1               	movwf	??_main+1
   388  07C3  0871               	movf	??_main+1,w
   389  07C4  00F5               	movwf	_mask
   390                           
   391                           ;Probador1.c: 149:                 if (PORTA & mask) {
   392  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   393  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   394  07C7  0805               	movf	5,w	;volatile
   395  07C8  0575               	andwf	_mask,w
   396  07C9  1903               	btfsc	3,2
   397  07CA  2FCC               	goto	u51
   398  07CB  2FCD               	goto	u50
   399  07CC                     u51:
   400  07CC  2FDC               	goto	l100
   401  07CD                     u50:
   402  07CD                     l833:
   403                           
   404                           ;Probador1.c: 150:                     RD0 = 1;
   405  07CD  1408               	bsf	8,0	;volatile
   406  07CE                     l835:
   407                           
   408                           ;Probador1.c: 151:                     _delay((unsigned long)((500)*(4000000UL/4000.0)))
      +                          ;
   409  07CE  3003               	movlw	3
   410  07CF  00F2               	movwf	??_main+2
   411  07D0  308A               	movlw	138
   412  07D1  00F1               	movwf	??_main+1
   413  07D2  3055               	movlw	85
   414  07D3  00F0               	movwf	??_main
   415  07D4                     u77:
   416  07D4  0BF0               	decfsz	??_main,f
   417  07D5  2FD4               	goto	u77
   418  07D6  0BF1               	decfsz	??_main+1,f
   419  07D7  2FD4               	goto	u77
   420  07D8  0BF2               	decfsz	??_main+2,f
   421  07D9  2FD4               	goto	u77
   422  07DA  2FDB               	nop2
   423                           
   424                           ;Probador1.c: 152:                 } else {
   425  07DB  2FDD               	goto	l837
   426  07DC                     l100:
   427                           
   428                           ;Probador1.c: 153:                     RD0 = 0;
   429  07DC  1008               	bcf	8,0	;volatile
   430  07DD                     l837:
   431                           
   432                           ;Probador1.c: 156:                 _delay((unsigned long)((150)*(4000000UL/4000.0)));
   433  07DD  30C3               	movlw	195
   434  07DE  00F1               	movwf	??_main+1
   435  07DF  30CD               	movlw	205
   436  07E0  00F0               	movwf	??_main
   437  07E1                     u87:
   438  07E1  0BF0               	decfsz	??_main,f
   439  07E2  2FE1               	goto	u87
   440  07E3  0BF1               	decfsz	??_main+1,f
   441  07E4  2FE1               	goto	u87
   442  07E5                     l839:
   443                           
   444                           ;Probador1.c: 157:             }
   445  07E5  3001               	movlw	1
   446  07E6  00F0               	movwf	??_main
   447  07E7  0870               	movf	??_main,w
   448  07E8  07F3               	addwf	main@i_68,f
   449  07E9                     l841:
   450  07E9  3006               	movlw	6
   451  07EA  0273               	subwf	main@i_68,w
   452  07EB  1C03               	skipc
   453  07EC  2FEE               	goto	u61
   454  07ED  2FEF               	goto	u60
   455  07EE                     u61:
   456  07EE  2FB8               	goto	l831
   457  07EF                     u60:
   458  07EF  2FA1               	goto	l50
   459  07F0  120A  118A  2800   	ljmp	start
   460  07F3                     __end_of_main:
   461                           
   462                           	psect	text1
   463  0777                     __ptext1:	
   464 ;; *************** function _porte_sal *****************
   465 ;; Defined at:
   466 ;;		line 180 in file "Probador1.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		status,2
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493  0777                     _porte_sal:	
   494                           ;psect for function _porte_sal
   495                           
   496  0777                     l719:	
   497                           ;incstack = 0
   498                           ; Regs used in _porte_sal: [status,2]
   499                           
   500                           
   501                           ;Probador1.c: 181:     TRISE = 0b00000000;
   502  0777  1683               	bsf	3,5	;RP0=1, select bank1
   503  0778  1303               	bcf	3,6	;RP1=0, select bank1
   504  0779  0189               	clrf	9	;volatile
   505  077A                     l113:
   506  077A  0008               	return
   507  077B                     __end_of_porte_sal:
   508                           
   509                           	psect	text2
   510  077B                     __ptext2:	
   511 ;; *************** function _porte_ent *****************
   512 ;; Defined at:
   513 ;;		line 176 in file "Probador1.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540  077B                     _porte_ent:	
   541                           ;psect for function _porte_ent
   542                           
   543  077B                     l717:	
   544                           ;incstack = 0
   545                           ; Regs used in _porte_ent: [wreg]
   546                           
   547                           
   548                           ;Probador1.c: 177:     TRISE = 0b00000011;
   549  077B  3003               	movlw	3
   550  077C  1683               	bsf	3,5	;RP0=1, select bank1
   551  077D  1303               	bcf	3,6	;RP1=0, select bank1
   552  077E  0089               	movwf	9	;volatile
   553  077F                     l110:
   554  077F  0008               	return
   555  0780                     __end_of_porte_ent:
   556                           
   557                           	psect	text3
   558  0780                     __ptext3:	
   559 ;; *************** function _port_conf_r1 *****************
   560 ;; Defined at:
   561 ;;		line 163 in file "Probador1.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  0780                     _port_conf_r1:	
   589                           ;psect for function _port_conf_r1
   590                           
   591  0780                     l705:	
   592                           ;incstack = 0
   593                           ; Regs used in _port_conf_r1: [wreg+status,2]
   594                           
   595                           
   596                           ;Probador1.c: 164:     puerto = 0;
   597  0780  01F6               	clrf	_puerto
   598                           
   599                           ;Probador1.c: 165:     TRISA = 0b00000000;
   600  0781  1683               	bsf	3,5	;RP0=1, select bank1
   601  0782  1303               	bcf	3,6	;RP1=0, select bank1
   602  0783  0185               	clrf	5	;volatile
   603                           
   604                           ;Probador1.c: 166:     TRISB = 0b00000000;
   605  0784  0186               	clrf	6	;volatile
   606                           
   607                           ;Probador1.c: 167:     TRISC = 0b00000000;
   608  0785  0187               	clrf	7	;volatile
   609                           
   610                           ;Probador1.c: 168:     TRISD = 0b00000000;
   611  0786  0188               	clrf	8	;volatile
   612  0787                     l707:
   613                           
   614                           ;Probador1.c: 169:     ADCON1 = 0b00000111;
   615  0787  3007               	movlw	7
   616  0788  009F               	movwf	31	;volatile
   617  0789                     l709:
   618                           
   619                           ;Probador1.c: 170:     PORTB = 0;
   620  0789  1283               	bcf	3,5	;RP0=0, select bank0
   621  078A  1303               	bcf	3,6	;RP1=0, select bank0
   622  078B  0186               	clrf	6	;volatile
   623  078C                     l711:
   624                           
   625                           ;Probador1.c: 171:     PORTC = 0;
   626  078C  0187               	clrf	7	;volatile
   627  078D                     l713:
   628                           
   629                           ;Probador1.c: 172:     PORTD = 0;
   630  078D  0188               	clrf	8	;volatile
   631  078E                     l715:
   632                           
   633                           ;Probador1.c: 173:     PORTE = 0;
   634  078E  0189               	clrf	9	;volatile
   635  078F                     l107:
   636  078F  0008               	return
   637  0790                     __end_of_port_conf_r1:
   638  007E                     btemp	set	126	;btemp
   639  007E                     wtemp0	set	126
   640                           
   641                           	psect	idloc
   642                           
   643                           ;Config register IDLOC0 @ 0x2000
   644                           ;	unspecified, using default values
   645  2000                     	org	8192
   646  2000  3FFF               	dw	16383
   647                           
   648                           ;Config register IDLOC1 @ 0x2001
   649                           ;	unspecified, using default values
   650  2001                     	org	8193
   651  2001  3FFF               	dw	16383
   652                           
   653                           ;Config register IDLOC2 @ 0x2002
   654                           ;	unspecified, using default values
   655  2002                     	org	8194
   656  2002  3FFF               	dw	16383
   657                           
   658                           ;Config register IDLOC3 @ 0x2003
   659                           ;	unspecified, using default values
   660  2003                     	org	8195
   661  2003  3FFF               	dw	16383
   662                           
   663                           	psect	config
   664                           
   665                           ;Config register CONFIG @ 0x2007
   666                           ;	Oscillator Selection bits
   667                           ;	FOSC = XT, XT oscillator
   668                           ;	Watchdog Timer Enable bit
   669                           ;	WDTE = OFF, WDT disabled
   670                           ;	Power-up Timer Enable bit
   671                           ;	PWRTE = ON, PWRT enabled
   672                           ;	Brown-out Reset Enable bit
   673                           ;	BOREN = ON, BOR enabled
   674                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   675                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   676                           ;	Data EEPROM Memory Code Protection bit
   677                           ;	CPD = OFF, Data EEPROM code protection off
   678                           ;	Flash Program Memory Write Enable bits
   679                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   680                           ;	In-Circuit Debugger Mode bit
   681                           ;	DEBUG = 0x1, unprogrammed default
   682                           ;	Flash Program Memory Code Protection bit
   683                           ;	CP = OFF, Code protection off
   684  2007                     	org	8199
   685  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     270
                                              0 COMMON     4     4      0
                       _port_conf_r1
                          _porte_ent
                          _porte_sal
 ---------------------------------------------------------------------------------
 (1) _porte_sal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _porte_ent                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _port_conf_r1
   _porte_ent
   _porte_sal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 07 16:21:58 2025

                     l50 07A1                       l53 07A7                       u10 07A0  
                     u11 079F                       u20 07A7                       u21 07A6  
                     u30 07B7                       u31 07B6                       u50 07CD  
                     u51 07CC                       u60 07EF                       u44 07BE  
                     u61 07EE                       u45 07BC                       u77 07D4  
                     u87 07E1                       _xx 0074                      l100 07DC  
                    l110 077F                      l113 077A                      l107 078F  
                    l711 078C                      l713 078D                      l705 0780  
                    l721 0790                      l715 078E                      l707 0787  
                    l723 079B                      l709 0789                      l717 077B  
                    l719 0777                      l831 07B8                      l823 07A9  
                    l841 07E9                      l833 07CD                      l825 07AD  
                    l835 07CE                      l827 07B0                      l837 07DD  
                    l839 07E5                      _RD0 0040                      _RE0 0048  
                    _RE1 0049                     _main 0790                     _mask 0075  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    status 0003                    wtemp0 007E  
        __initialization 07F3             __end_of_main 07F3                   ??_main 0070  
                 _ADCON1 009F                   _prueba 0077                   _puerto 0076  
           __pdataCOMMON 0077  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0790                  __ptext1 0777                  __ptext2 077B  
                __ptext3 0780     end_of_initialization 07FC        __end_of_porte_ent 0780  
      __end_of_porte_sal 077B            ?_port_conf_r1 0070            __pidataCOMMON 0776  
    start_initialization 07F3           ??_port_conf_r1 0070              __pbssCOMMON 0074  
              ___latbits 0002     __end_of_port_conf_r1 0790                _porte_ent 077B  
              _porte_sal 0777               ?_porte_ent 0070               ?_porte_sal 0070  
               main@i_68 0073              ??_porte_ent 0070              ??_porte_sal 0070  
           _port_conf_r1 0780  
