

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 02 22:53:23 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0005                     _PORTA	set	5
   168  0007                     _PORTC	set	7
   169  0006                     _PORTB	set	6
   170  0049                     _RE1	set	73
   171  0048                     _RE0	set	72
   172  009F                     _ADCON1	set	159
   173  0089                     _TRISE	set	137
   174  0087                     _TRISC	set	135
   175  0086                     _TRISB	set	134
   176  0085                     _TRISA	set	133
   177                           
   178                           	psect	cinit
   179  07FA                     start_initialization:	
   180                           ; #config settings
   181                           
   182  07FA                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   186  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   187  07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190  07FC                     __end_of__initialization:
   191  07FC  0183               	clrf	3
   192  07FD  120A  118A  2F19   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMMON
   195  0076                     __pbssCOMMON:
   196  0076                     _xx:
   197  0076                     	ds	1
   198  0077                     _puerto:
   199  0077                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202  0070                     __pcstackCOMMON:
   203  0070                     ?_main:
   204  0070                     ??_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209  0070                     	ds	3
   210  0073                     main@i:
   211                           
   212                           ; 1 bytes @ 0x3
   213  0073                     	ds	1
   214  0074                     main@i_46:
   215                           
   216                           ; 1 bytes @ 0x4
   217  0074                     	ds	1
   218  0075                     main@i_47:
   219                           
   220                           ; 1 bytes @ 0x5
   221  0075                     	ds	1
   222                           
   223                           	psect	maintext
   224  0719                     __pmaintext:	
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 32 in file "Probador1.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  i               1    5[COMMON] unsigned char 
   235 ;;  i               1    4[COMMON] unsigned char 
   236 ;;  i               1    3[COMMON] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         0       0       0       0       0
   247 ;;      Locals:         3       0       0       0       0
   248 ;;      Temps:          3       0       0       0       0
   249 ;;      Totals:         6       0       0       0       0
   250 ;;Total ram usage:        6 bytes
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258  0719                     _main:	
   259                           ;psect for function _main
   260                           
   261  0719                     l656:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   264                           
   265                           
   266                           ;Probador1.c: 33:     puerto = 0;
   267  0719  01F7               	clrf	_puerto
   268                           
   269                           ;Probador1.c: 34:     TRISA = 0b0000000;
   270  071A  1683               	bsf	3,5	;RP0=1, select bank1
   271  071B  1303               	bcf	3,6	;RP1=0, select bank1
   272  071C  0185               	clrf	5	;volatile
   273                           
   274                           ;Probador1.c: 35:     TRISB = 0b0000000;
   275  071D  0186               	clrf	6	;volatile
   276                           
   277                           ;Probador1.c: 36:     TRISC = 0b0000000;
   278  071E  0187               	clrf	7	;volatile
   279  071F                     l658:
   280                           
   281                           ;Probador1.c: 37:     TRISE = 0b00000111;
   282  071F  3007               	movlw	7
   283  0720  0089               	movwf	9	;volatile
   284  0721                     l660:
   285                           
   286                           ;Probador1.c: 38:     ADCON1 = 0b00000111;
   287  0721  3007               	movlw	7
   288  0722  009F               	movwf	31	;volatile
   289                           
   290                           ;Probador1.c: 39:     PORTB = 0;
   291  0723  1283               	bcf	3,5	;RP0=0, select bank0
   292  0724  1303               	bcf	3,6	;RP1=0, select bank0
   293  0725  0186               	clrf	6	;volatile
   294                           
   295                           ;Probador1.c: 40:     PORTC = 0;
   296  0726  0187               	clrf	7	;volatile
   297  0727  2F2E               	goto	l32
   298  0728                     l662:
   299                           
   300                           ;Probador1.c: 46:             if (xx == 1) {
   301  0728  0376               	decf	_xx,w
   302  0729  1D03               	btfss	3,2
   303  072A  2F2C               	goto	u11
   304  072B  2F2D               	goto	u10
   305  072C                     u11:
   306  072C  2F2E               	goto	l32
   307  072D                     u10:
   308  072D  2F32               	goto	l35
   309  072E                     l32:	
   310                           ;Probador1.c: 50:         }
   311                           
   312                           
   313                           ;Probador1.c: 45:         while (RE0 == 0) {
   314  072E  1C09               	btfss	9,0	;volatile
   315  072F  2F31               	goto	u21
   316  0730  2F32               	goto	u20
   317  0731                     u21:
   318  0731  2F28               	goto	l662
   319  0732                     u20:
   320  0732                     l35:
   321                           
   322                           ;Probador1.c: 51:         xx = 1;
   323  0732  01F6               	clrf	_xx
   324  0733  0AF6               	incf	_xx,f
   325                           
   326                           ;Probador1.c: 53:         switch (puerto) {
   327  0734  2FE4               	goto	l716
   328  0735                     l666:
   329                           
   330                           ;Probador1.c: 55:                 for (char i = 0; i < 7; i++) {
   331  0735  01F3               	clrf	main@i
   332  0736                     l668:
   333  0736  3007               	movlw	7
   334  0737  0273               	subwf	main@i,w
   335  0738  1C03               	skipc
   336  0739  2F3B               	goto	u31
   337  073A  2F3C               	goto	u30
   338  073B                     u31:
   339  073B  2F3D               	goto	l672
   340  073C                     u30:
   341  073C  2F61               	goto	l40
   342  073D                     l672:
   343                           
   344                           ;Probador1.c: 56:                     PORTA = (1 << i);
   345  073D  3001               	movlw	1
   346  073E  00F0               	movwf	??_main
   347  073F  0A73               	incf	main@i,w
   348  0740  2F43               	goto	u44
   349  0741                     u45:
   350  0741  1003               	clrc
   351  0742  0DF0               	rlf	??_main,f
   352  0743                     u44:
   353  0743  3EFF               	addlw	-1
   354  0744  1D03               	skipz
   355  0745  2F41               	goto	u45
   356  0746  0870               	movf	??_main,w
   357  0747  1283               	bcf	3,5	;RP0=0, select bank0
   358  0748  1303               	bcf	3,6	;RP1=0, select bank0
   359  0749  0085               	movwf	5	;volatile
   360  074A                     l674:
   361                           
   362                           ;Probador1.c: 57:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   363  074A  3003               	movlw	3
   364  074B  00F2               	movwf	??_main+2
   365  074C  308A               	movlw	138
   366  074D  00F1               	movwf	??_main+1
   367  074E  3055               	movlw	85
   368  074F  00F0               	movwf	??_main
   369  0750                     u187:
   370  0750  0BF0               	decfsz	??_main,f
   371  0751  2F50               	goto	u187
   372  0752  0BF1               	decfsz	??_main+1,f
   373  0753  2F50               	goto	u187
   374  0754  0BF2               	decfsz	??_main+2,f
   375  0755  2F50               	goto	u187
   376  0756  2F57               	nop2
   377  0757                     l676:
   378                           
   379                           ;Probador1.c: 58:                 }
   380  0757  3001               	movlw	1
   381  0758  00F0               	movwf	??_main
   382  0759  0870               	movf	??_main,w
   383  075A  07F3               	addwf	main@i,f
   384  075B  3007               	movlw	7
   385  075C  0273               	subwf	main@i,w
   386  075D  1C03               	skipc
   387  075E  2F60               	goto	u51
   388  075F  2F61               	goto	u50
   389  0760                     u51:
   390  0760  2F3D               	goto	l672
   391  0761                     u50:
   392  0761                     l40:	
   393                           ;Probador1.c: 59:                 while (1) {
   394                           
   395                           
   396                           ;Probador1.c: 60:                     if (RE1 == 1) {
   397  0761  1283               	bcf	3,5	;RP0=0, select bank0
   398  0762  1303               	bcf	3,6	;RP1=0, select bank0
   399  0763  1C89               	btfss	9,1	;volatile
   400  0764  2F66               	goto	u61
   401  0765  2F67               	goto	u60
   402  0766                     u61:
   403  0766  2F69               	goto	l41
   404  0767                     u60:
   405  0767                     l678:
   406                           
   407                           ;Probador1.c: 61:                         puerto = 0;
   408  0767  01F7               	clrf	_puerto
   409                           
   410                           ;Probador1.c: 62:                         break;
   411  0768  2F2E               	goto	l32
   412  0769                     l41:	
   413                           ;Probador1.c: 63:                     }
   414                           
   415                           
   416                           ;Probador1.c: 64:                     if (RE0 == 1) {
   417  0769  1C09               	btfss	9,0	;volatile
   418  076A  2F6C               	goto	u71
   419  076B  2F6D               	goto	u70
   420  076C                     u71:
   421  076C  2F61               	goto	l40
   422  076D                     u70:
   423  076D                     l680:
   424                           
   425                           ;Probador1.c: 65:                         puerto = 1;
   426  076D  01F7               	clrf	_puerto
   427  076E  0AF7               	incf	_puerto,f
   428                           
   429                           ;Probador1.c: 66:                         break;
   430  076F  2F2E               	goto	l32
   431  0770                     l682:
   432                           
   433                           ;Probador1.c: 72:                 for (char i = 0; i < 9; i++) {
   434  0770  01F4               	clrf	main@i_46
   435  0771                     l684:
   436  0771  3009               	movlw	9
   437  0772  0274               	subwf	main@i_46,w
   438  0773  1C03               	skipc
   439  0774  2F76               	goto	u81
   440  0775  2F77               	goto	u80
   441  0776                     u81:
   442  0776  2F78               	goto	l688
   443  0777                     u80:
   444  0777  2F9C               	goto	l49
   445  0778                     l688:
   446                           
   447                           ;Probador1.c: 73:                     PORTB = (1 << i);
   448  0778  3001               	movlw	1
   449  0779  00F0               	movwf	??_main
   450  077A  0A74               	incf	main@i_46,w
   451  077B  2F7E               	goto	u94
   452  077C                     u95:
   453  077C  1003               	clrc
   454  077D  0DF0               	rlf	??_main,f
   455  077E                     u94:
   456  077E  3EFF               	addlw	-1
   457  077F  1D03               	skipz
   458  0780  2F7C               	goto	u95
   459  0781  0870               	movf	??_main,w
   460  0782  1283               	bcf	3,5	;RP0=0, select bank0
   461  0783  1303               	bcf	3,6	;RP1=0, select bank0
   462  0784  0086               	movwf	6	;volatile
   463  0785                     l690:
   464                           
   465                           ;Probador1.c: 74:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   466  0785  3003               	movlw	3
   467  0786  00F2               	movwf	??_main+2
   468  0787  308A               	movlw	138
   469  0788  00F1               	movwf	??_main+1
   470  0789  3055               	movlw	85
   471  078A  00F0               	movwf	??_main
   472  078B                     u197:
   473  078B  0BF0               	decfsz	??_main,f
   474  078C  2F8B               	goto	u197
   475  078D  0BF1               	decfsz	??_main+1,f
   476  078E  2F8B               	goto	u197
   477  078F  0BF2               	decfsz	??_main+2,f
   478  0790  2F8B               	goto	u197
   479  0791  2F92               	nop2
   480  0792                     l692:
   481                           
   482                           ;Probador1.c: 75:                 }
   483  0792  3001               	movlw	1
   484  0793  00F0               	movwf	??_main
   485  0794  0870               	movf	??_main,w
   486  0795  07F4               	addwf	main@i_46,f
   487  0796  3009               	movlw	9
   488  0797  0274               	subwf	main@i_46,w
   489  0798  1C03               	skipc
   490  0799  2F9B               	goto	u101
   491  079A  2F9C               	goto	u100
   492  079B                     u101:
   493  079B  2F78               	goto	l688
   494  079C                     u100:
   495  079C                     l49:	
   496                           ;Probador1.c: 76:                 while (1) {
   497                           
   498                           
   499                           ;Probador1.c: 77:                     if (RE1 == 1) {
   500  079C  1283               	bcf	3,5	;RP0=0, select bank0
   501  079D  1303               	bcf	3,6	;RP1=0, select bank0
   502  079E  1C89               	btfss	9,1	;volatile
   503  079F  2FA1               	goto	u111
   504  07A0  2FA2               	goto	u110
   505  07A1                     u111:
   506  07A1  2FA3               	goto	l50
   507  07A2                     u110:
   508  07A2  2F6D               	goto	l680
   509  07A3                     l50:	
   510                           ;Probador1.c: 80:                     }
   511                           
   512                           
   513                           ;Probador1.c: 81:                     if (RE0 == 1) {
   514  07A3  1C09               	btfss	9,0	;volatile
   515  07A4  2FA6               	goto	u121
   516  07A5  2FA7               	goto	u120
   517  07A6                     u121:
   518  07A6  2F9C               	goto	l49
   519  07A7                     u120:
   520  07A7                     l696:
   521                           
   522                           ;Probador1.c: 82:                         puerto = 2;
   523  07A7  3002               	movlw	2
   524  07A8  00F0               	movwf	??_main
   525  07A9  0870               	movf	??_main,w
   526  07AA  00F7               	movwf	_puerto
   527                           
   528                           ;Probador1.c: 83:                         break;
   529  07AB  2F2E               	goto	l32
   530  07AC                     l698:
   531                           
   532                           ;Probador1.c: 89:                 for (char i = 0; i < 9; i++) {
   533  07AC  01F5               	clrf	main@i_47
   534  07AD                     l700:
   535  07AD  3009               	movlw	9
   536  07AE  0275               	subwf	main@i_47,w
   537  07AF  1C03               	skipc
   538  07B0  2FB2               	goto	u131
   539  07B1  2FB3               	goto	u130
   540  07B2                     u131:
   541  07B2  2FB4               	goto	l704
   542  07B3                     u130:
   543  07B3  2FD8               	goto	l57
   544  07B4                     l704:
   545                           
   546                           ;Probador1.c: 90:                     PORTC = (1 << i);
   547  07B4  3001               	movlw	1
   548  07B5  00F0               	movwf	??_main
   549  07B6  0A75               	incf	main@i_47,w
   550  07B7  2FBA               	goto	u144
   551  07B8                     u145:
   552  07B8  1003               	clrc
   553  07B9  0DF0               	rlf	??_main,f
   554  07BA                     u144:
   555  07BA  3EFF               	addlw	-1
   556  07BB  1D03               	skipz
   557  07BC  2FB8               	goto	u145
   558  07BD  0870               	movf	??_main,w
   559  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   560  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   561  07C0  0087               	movwf	7	;volatile
   562  07C1                     l706:
   563                           
   564                           ;Probador1.c: 91:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   565  07C1  3003               	movlw	3
   566  07C2  00F2               	movwf	??_main+2
   567  07C3  308A               	movlw	138
   568  07C4  00F1               	movwf	??_main+1
   569  07C5  3055               	movlw	85
   570  07C6  00F0               	movwf	??_main
   571  07C7                     u207:
   572  07C7  0BF0               	decfsz	??_main,f
   573  07C8  2FC7               	goto	u207
   574  07C9  0BF1               	decfsz	??_main+1,f
   575  07CA  2FC7               	goto	u207
   576  07CB  0BF2               	decfsz	??_main+2,f
   577  07CC  2FC7               	goto	u207
   578  07CD  2FCE               	nop2
   579  07CE                     l708:
   580                           
   581                           ;Probador1.c: 92:                 }
   582  07CE  3001               	movlw	1
   583  07CF  00F0               	movwf	??_main
   584  07D0  0870               	movf	??_main,w
   585  07D1  07F5               	addwf	main@i_47,f
   586  07D2  3009               	movlw	9
   587  07D3  0275               	subwf	main@i_47,w
   588  07D4  1C03               	skipc
   589  07D5  2FD7               	goto	u151
   590  07D6  2FD8               	goto	u150
   591  07D7                     u151:
   592  07D7  2FB4               	goto	l704
   593  07D8                     u150:
   594  07D8                     l57:	
   595                           ;Probador1.c: 93:                 while (1) {
   596                           
   597                           
   598                           ;Probador1.c: 94:                     if (RE1 == 1) {
   599  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   600  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   601  07DA  1C89               	btfss	9,1	;volatile
   602  07DB  2FDD               	goto	u161
   603  07DC  2FDE               	goto	u160
   604  07DD                     u161:
   605  07DD  2FDF               	goto	l58
   606  07DE                     u160:
   607  07DE  2FA7               	goto	l696
   608  07DF                     l58:	
   609                           ;Probador1.c: 97:                     }
   610                           
   611                           
   612                           ;Probador1.c: 98:                     if (RE0 == 1) {
   613  07DF  1C09               	btfss	9,0	;volatile
   614  07E0  2FE2               	goto	u171
   615  07E1  2FE3               	goto	u170
   616  07E2                     u171:
   617  07E2  2FD8               	goto	l57
   618  07E3                     u170:
   619  07E3  2FA7               	goto	l696
   620  07E4                     l716:
   621  07E4  0877               	movf	_puerto,w
   622  07E5  00F0               	movwf	??_main
   623  07E6  01F1               	clrf	??_main+1
   624                           
   625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   626                           ; Switch size 1, requested type "simple"
   627                           ; Number of cases is 1, Range of values is 0 to 0
   628                           ; switch strategies available:
   629                           ; Name         Instructions Cycles
   630                           ; simple_byte            4     3 (average)
   631                           ; direct_byte           11     8 (fixed)
   632                           ; jumptable            260     6 (fixed)
   633                           ;	Chosen strategy is simple_byte
   634  07E7  0871               	movf	??_main+1,w
   635  07E8  3A00               	xorlw	0	; case 0
   636  07E9  1903               	skipnz
   637  07EA  2FEC               	goto	l768
   638  07EB  2F2E               	goto	l32
   639  07EC                     l768:
   640                           
   641                           ; Switch size 1, requested type "simple"
   642                           ; Number of cases is 3, Range of values is 0 to 2
   643                           ; switch strategies available:
   644                           ; Name         Instructions Cycles
   645                           ; simple_byte           10     6 (average)
   646                           ; direct_byte           17     8 (fixed)
   647                           ; jumptable            260     6 (fixed)
   648                           ;	Chosen strategy is simple_byte
   649  07EC  0870               	movf	??_main,w
   650  07ED  3A00               	xorlw	0	; case 0
   651  07EE  1903               	skipnz
   652  07EF  2F35               	goto	l666
   653  07F0  3A01               	xorlw	1	; case 1
   654  07F1  1903               	skipnz
   655  07F2  2F70               	goto	l682
   656  07F3  3A03               	xorlw	3	; case 2
   657  07F4  1903               	skipnz
   658  07F5  2FAC               	goto	l698
   659  07F6  2F2E               	goto	l32
   660  07F7  120A  118A  2800   	ljmp	start
   661  07FA                     __end_of_main:
   662  007E                     btemp	set	126	;btemp
   663  007E                     wtemp0	set	126
   664                           
   665                           	psect	idloc
   666                           
   667                           ;Config register IDLOC0 @ 0x2000
   668                           ;	unspecified, using default values
   669  2000                     	org	8192
   670  2000  3FFF               	dw	16383
   671                           
   672                           ;Config register IDLOC1 @ 0x2001
   673                           ;	unspecified, using default values
   674  2001                     	org	8193
   675  2001  3FFF               	dw	16383
   676                           
   677                           ;Config register IDLOC2 @ 0x2002
   678                           ;	unspecified, using default values
   679  2002                     	org	8194
   680  2002  3FFF               	dw	16383
   681                           
   682                           ;Config register IDLOC3 @ 0x2003
   683                           ;	unspecified, using default values
   684  2003                     	org	8195
   685  2003  3FFF               	dw	16383
   686                           
   687                           	psect	config
   688                           
   689                           ;Config register CONFIG @ 0x2007
   690                           ;	Oscillator Selection bits
   691                           ;	FOSC = XT, XT oscillator
   692                           ;	Watchdog Timer Enable bit
   693                           ;	WDTE = OFF, WDT disabled
   694                           ;	Power-up Timer Enable bit
   695                           ;	PWRTE = ON, PWRT enabled
   696                           ;	Brown-out Reset Enable bit
   697                           ;	BOREN = ON, BOR enabled
   698                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   699                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   700                           ;	Data EEPROM Memory Code Protection bit
   701                           ;	CPD = OFF, Data EEPROM code protection off
   702                           ;	Flash Program Memory Write Enable bits
   703                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   704                           ;	In-Circuit Debugger Mode bit
   705                           ;	DEBUG = 0x1, unprogrammed default
   706                           ;	Flash Program Memory Code Protection bit
   707                           ;	CP = OFF, Code protection off
   708  2007                     	org	8199
   709  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     135
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 02 22:53:23 2025

                     l40 0761                       l32 072E                       l41 0769  
                     l50 07A3                       l35 0732                       l57 07D8  
                     l49 079C                       l58 07DF                       u10 072D  
                     u11 072C                       u20 0732                       u21 0731  
                     u30 073C                       u31 073B                       u50 0761  
                     u51 0760                       u60 0767                       u44 0743  
                     u61 0766                       u45 0741                       u70 076D  
                     u71 076C                       u80 0777                       u81 0776  
                     u94 077E                       u95 077C                       _xx 0076  
                    l700 07AD                      l704 07B4                      l706 07C1  
                    l708 07CE                      l716 07E4                      l660 0721  
                    l662 0728                      l680 076D                      l672 073D  
                    l656 0719                      l690 0785                      l682 0770  
                    l674 074A                      l666 0735                      l658 071F  
                    l692 0792                      l684 0771                      l676 0757  
                    l668 0736                      l678 0767                      l768 07EC  
                    l696 07A7                      l688 0778                      l698 07AC  
                    _RE0 0048                      _RE1 0049                      u100 079C  
                    u101 079B                      u110 07A2                      u111 07A1  
                    u120 07A7                      u121 07A6                      u130 07B3  
                    u131 07B2                      u150 07D8                      u151 07D7  
                    u207 07C7                      u160 07DE                      u144 07BA  
                    u161 07DD                      u145 07B8                      u170 07E3  
                    u171 07E2                      u187 0750                      u197 078B  
                   _main 0719                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISE 0089                    main@i 0073  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0070                   _ADCON1 009F  
                 _puerto 0077  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0719     end_of_initialization 07FC      start_initialization 07FA  
            __pbssCOMMON 0076                ___latbits 0002                 main@i_46 0074  
               main@i_47 0075  
