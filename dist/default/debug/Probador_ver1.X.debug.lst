

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 01 22:17:08 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0005                     _PORTA	set	5
   168  0006                     _PORTB	set	6
   169  0041                     _RD1	set	65
   170  0040                     _RD0	set	64
   171  0086                     _TRISB	set	134
   172  0085                     _TRISA	set	133
   173  0441                     _TRISD1	set	1089
   174  0440                     _TRISD0	set	1088
   175                           
   176                           	psect	cinit
   177  07FA                     start_initialization:	
   178                           ; #config settings
   179                           
   180  07FA                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183  07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   184  07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   185  07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  07FC                     __end_of__initialization:
   189  07FC  0183               	clrf	3
   190  07FD  120A  118A  2F65   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193  0075                     __pbssCOMMON:
   194  0075                     _xx:
   195  0075                     	ds	1
   196  0076                     _puerto:
   197  0076                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_main:
   202  0070                     ??_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	3
   208  0073                     main@i:
   209                           
   210                           ; 1 bytes @ 0x3
   211  0073                     	ds	1
   212  0074                     main@i_44:
   213                           
   214                           ; 1 bytes @ 0x4
   215  0074                     	ds	1
   216                           
   217                           	psect	maintext
   218  0765                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 33 in file "Probador1.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  i               1    4[COMMON] unsigned char 
   229 ;;  i               1    3[COMMON] unsigned char 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         2       0       0       0       0
   241 ;;      Temps:          3       0       0       0       0
   242 ;;      Totals:         5       0       0       0       0
   243 ;;Total ram usage:        5 bytes
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251  0765                     _main:	
   252                           ;psect for function _main
   253                           
   254  0765                     l639:	
   255                           ;incstack = 0
   256                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   257                           
   258                           
   259                           ;Probador1.c: 34:     puerto = 0;
   260  0765  01F6               	clrf	_puerto
   261                           
   262                           ;Probador1.c: 35:     TRISA = 0b0000000;
   263  0766  1683               	bsf	3,5	;RP0=1, select bank1
   264  0767  1303               	bcf	3,6	;RP1=0, select bank1
   265  0768  0185               	clrf	5	;volatile
   266                           
   267                           ;Probador1.c: 36:     TRISB = 0b0000000;
   268  0769  0186               	clrf	6	;volatile
   269  076A                     l641:
   270                           
   271                           ;Probador1.c: 37:     TRISD0 = 1;
   272  076A  1408               	bsf	8,0	;volatile
   273  076B                     l643:
   274                           
   275                           ;Probador1.c: 38:     TRISD1 = 1;
   276  076B  1488               	bsf	8,1	;volatile
   277                           
   278                           ;Probador1.c: 39:     PORTB = 0;
   279  076C  1283               	bcf	3,5	;RP0=0, select bank0
   280  076D  1303               	bcf	3,6	;RP1=0, select bank0
   281  076E  0186               	clrf	6	;volatile
   282  076F  2F76               	goto	l28
   283  0770                     l645:
   284                           
   285                           ;Probador1.c: 45:             if (xx ==1){
   286  0770  0375               	decf	_xx,w
   287  0771  1D03               	btfss	3,2
   288  0772  2F74               	goto	u11
   289  0773  2F75               	goto	u10
   290  0774                     u11:
   291  0774  2F76               	goto	l28
   292  0775                     u10:
   293  0775  2F7C               	goto	l31
   294  0776                     l28:	
   295                           ;Probador1.c: 49:             }
   296                           
   297                           
   298                           ;Probador1.c: 44:         while(RD0 == 0){
   299  0776  1283               	bcf	3,5	;RP0=0, select bank0
   300  0777  1303               	bcf	3,6	;RP1=0, select bank0
   301  0778  1C08               	btfss	8,0	;volatile
   302  0779  2F7B               	goto	u21
   303  077A  2F7C               	goto	u20
   304  077B                     u21:
   305  077B  2F70               	goto	l645
   306  077C                     u20:
   307  077C                     l31:
   308                           
   309                           ;Probador1.c: 50:         xx = 1;
   310  077C  01F5               	clrf	_xx
   311  077D  0AF5               	incf	_xx,f
   312                           
   313                           ;Probador1.c: 52:         switch (puerto) {
   314  077E  2FE7               	goto	l679
   315  077F                     l649:
   316                           
   317                           ;Probador1.c: 54:                 for (char i = 0; i < 7;i++){
   318  077F  01F3               	clrf	main@i
   319  0780                     l651:
   320  0780  3007               	movlw	7
   321  0781  0273               	subwf	main@i,w
   322  0782  1C03               	skipc
   323  0783  2F85               	goto	u31
   324  0784  2F86               	goto	u30
   325  0785                     u31:
   326  0785  2F87               	goto	l655
   327  0786                     u30:
   328  0786  2FAB               	goto	l36
   329  0787                     l655:
   330                           
   331                           ;Probador1.c: 55:                     PORTA = (1 << i);
   332  0787  3001               	movlw	1
   333  0788  00F0               	movwf	??_main
   334  0789  0A73               	incf	main@i,w
   335  078A  2F8D               	goto	u44
   336  078B                     u45:
   337  078B  1003               	clrc
   338  078C  0DF0               	rlf	??_main,f
   339  078D                     u44:
   340  078D  3EFF               	addlw	-1
   341  078E  1D03               	skipz
   342  078F  2F8B               	goto	u45
   343  0790  0870               	movf	??_main,w
   344  0791  1283               	bcf	3,5	;RP0=0, select bank0
   345  0792  1303               	bcf	3,6	;RP1=0, select bank0
   346  0793  0085               	movwf	5	;volatile
   347  0794                     l657:
   348                           
   349                           ;Probador1.c: 56:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   350  0794  3003               	movlw	3
   351  0795  00F2               	movwf	??_main+2
   352  0796  308A               	movlw	138
   353  0797  00F1               	movwf	??_main+1
   354  0798  3055               	movlw	85
   355  0799  00F0               	movwf	??_main
   356  079A                     u117:
   357  079A  0BF0               	decfsz	??_main,f
   358  079B  2F9A               	goto	u117
   359  079C  0BF1               	decfsz	??_main+1,f
   360  079D  2F9A               	goto	u117
   361  079E  0BF2               	decfsz	??_main+2,f
   362  079F  2F9A               	goto	u117
   363  07A0  2FA1               	nop2
   364  07A1                     l659:
   365                           
   366                           ;Probador1.c: 57:                     }
   367  07A1  3001               	movlw	1
   368  07A2  00F0               	movwf	??_main
   369  07A3  0870               	movf	??_main,w
   370  07A4  07F3               	addwf	main@i,f
   371  07A5  3007               	movlw	7
   372  07A6  0273               	subwf	main@i,w
   373  07A7  1C03               	skipc
   374  07A8  2FAA               	goto	u51
   375  07A9  2FAB               	goto	u50
   376  07AA                     u51:
   377  07AA  2F87               	goto	l655
   378  07AB                     u50:
   379  07AB                     l36:	
   380                           ;Probador1.c: 58:                 while(1){
   381                           
   382                           
   383                           ;Probador1.c: 59:                     if (RD1 == 1){
   384  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   385  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   386  07AD  1C88               	btfss	8,1	;volatile
   387  07AE  2FB0               	goto	u61
   388  07AF  2FB1               	goto	u60
   389  07B0                     u61:
   390  07B0  2FB3               	goto	l37
   391  07B1                     u60:
   392  07B1                     l661:
   393                           
   394                           ;Probador1.c: 60:                         puerto = 0;
   395  07B1  01F6               	clrf	_puerto
   396                           
   397                           ;Probador1.c: 61:                         break;
   398  07B2  2F76               	goto	l28
   399  07B3                     l37:	
   400                           ;Probador1.c: 62:                         }
   401                           
   402                           
   403                           ;Probador1.c: 63:                         if (RD0 == 1){
   404  07B3  1C08               	btfss	8,0	;volatile
   405  07B4  2FB6               	goto	u71
   406  07B5  2FB7               	goto	u70
   407  07B6                     u71:
   408  07B6  2FAB               	goto	l36
   409  07B7                     u70:
   410  07B7                     l663:
   411                           
   412                           ;Probador1.c: 64:                             puerto = 1;
   413  07B7  01F6               	clrf	_puerto
   414  07B8  0AF6               	incf	_puerto,f
   415                           
   416                           ;Probador1.c: 65:                             break;
   417  07B9  2F76               	goto	l28
   418  07BA                     l665:
   419                           
   420                           ;Probador1.c: 74:                 for (char i = 0; i < 8;i++){
   421  07BA  01F4               	clrf	main@i_44
   422  07BB                     l667:
   423  07BB  3008               	movlw	8
   424  07BC  0274               	subwf	main@i_44,w
   425  07BD  1C03               	skipc
   426  07BE  2FC0               	goto	u81
   427  07BF  2FC1               	goto	u80
   428  07C0                     u81:
   429  07C0  2FC2               	goto	l671
   430  07C1                     u80:
   431  07C1  2F76               	goto	l28
   432  07C2                     l671:
   433                           
   434                           ;Probador1.c: 75:                     PORTB = (1 << i);
   435  07C2  3001               	movlw	1
   436  07C3  00F0               	movwf	??_main
   437  07C4  0A74               	incf	main@i_44,w
   438  07C5  2FC8               	goto	u94
   439  07C6                     u95:
   440  07C6  1003               	clrc
   441  07C7  0DF0               	rlf	??_main,f
   442  07C8                     u94:
   443  07C8  3EFF               	addlw	-1
   444  07C9  1D03               	skipz
   445  07CA  2FC6               	goto	u95
   446  07CB  0870               	movf	??_main,w
   447  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   448  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   449  07CE  0086               	movwf	6	;volatile
   450  07CF                     l673:
   451                           
   452                           ;Probador1.c: 76:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   453  07CF  3003               	movlw	3
   454  07D0  00F2               	movwf	??_main+2
   455  07D1  308A               	movlw	138
   456  07D2  00F1               	movwf	??_main+1
   457  07D3  3055               	movlw	85
   458  07D4  00F0               	movwf	??_main
   459  07D5                     u127:
   460  07D5  0BF0               	decfsz	??_main,f
   461  07D6  2FD5               	goto	u127
   462  07D7  0BF1               	decfsz	??_main+1,f
   463  07D8  2FD5               	goto	u127
   464  07D9  0BF2               	decfsz	??_main+2,f
   465  07DA  2FD5               	goto	u127
   466  07DB  2FDC               	nop2
   467  07DC                     l675:
   468                           
   469                           ;Probador1.c: 77:                     }
   470  07DC  3001               	movlw	1
   471  07DD  00F0               	movwf	??_main
   472  07DE  0870               	movf	??_main,w
   473  07DF  07F4               	addwf	main@i_44,f
   474  07E0  3008               	movlw	8
   475  07E1  0274               	subwf	main@i_44,w
   476  07E2  1C03               	skipc
   477  07E3  2FE5               	goto	u101
   478  07E4  2FE6               	goto	u100
   479  07E5                     u101:
   480  07E5  2FC2               	goto	l671
   481  07E6                     u100:
   482  07E6  2F76               	goto	l28
   483  07E7                     l679:
   484  07E7  0876               	movf	_puerto,w
   485  07E8  00F0               	movwf	??_main
   486  07E9  01F1               	clrf	??_main+1
   487                           
   488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   489                           ; Switch size 1, requested type "simple"
   490                           ; Number of cases is 1, Range of values is 0 to 0
   491                           ; switch strategies available:
   492                           ; Name         Instructions Cycles
   493                           ; simple_byte            4     3 (average)
   494                           ; direct_byte           11     8 (fixed)
   495                           ; jumptable            260     6 (fixed)
   496                           ;	Chosen strategy is simple_byte
   497  07EA  0871               	movf	??_main+1,w
   498  07EB  3A00               	xorlw	0	; case 0
   499  07EC  1903               	skipnz
   500  07ED  2FEF               	goto	l731
   501  07EE  2F76               	goto	l28
   502  07EF                     l731:
   503                           
   504                           ; Switch size 1, requested type "simple"
   505                           ; Number of cases is 2, Range of values is 0 to 1
   506                           ; switch strategies available:
   507                           ; Name         Instructions Cycles
   508                           ; simple_byte            7     4 (average)
   509                           ; direct_byte           14     8 (fixed)
   510                           ; jumptable            260     6 (fixed)
   511                           ;	Chosen strategy is simple_byte
   512  07EF  0870               	movf	??_main,w
   513  07F0  3A00               	xorlw	0	; case 0
   514  07F1  1903               	skipnz
   515  07F2  2F7F               	goto	l649
   516  07F3  3A01               	xorlw	1	; case 1
   517  07F4  1903               	skipnz
   518  07F5  2FBA               	goto	l665
   519  07F6  2F76               	goto	l28
   520  07F7  120A  118A  2800   	ljmp	start
   521  07FA                     __end_of_main:
   522  007E                     btemp	set	126	;btemp
   523  007E                     wtemp0	set	126
   524                           
   525                           	psect	idloc
   526                           
   527                           ;Config register IDLOC0 @ 0x2000
   528                           ;	unspecified, using default values
   529  2000                     	org	8192
   530  2000  3FFF               	dw	16383
   531                           
   532                           ;Config register IDLOC1 @ 0x2001
   533                           ;	unspecified, using default values
   534  2001                     	org	8193
   535  2001  3FFF               	dw	16383
   536                           
   537                           ;Config register IDLOC2 @ 0x2002
   538                           ;	unspecified, using default values
   539  2002                     	org	8194
   540  2002  3FFF               	dw	16383
   541                           
   542                           ;Config register IDLOC3 @ 0x2003
   543                           ;	unspecified, using default values
   544  2003                     	org	8195
   545  2003  3FFF               	dw	16383
   546                           
   547                           	psect	config
   548                           
   549                           ;Config register CONFIG @ 0x2007
   550                           ;	Oscillator Selection bits
   551                           ;	FOSC = XT, XT oscillator
   552                           ;	Watchdog Timer Enable bit
   553                           ;	WDTE = OFF, WDT disabled
   554                           ;	Power-up Timer Enable bit
   555                           ;	PWRTE = ON, PWRT enabled
   556                           ;	Brown-out Reset Enable bit
   557                           ;	BOREN = ON, BOR enabled
   558                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   559                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   560                           ;	Data EEPROM Memory Code Protection bit
   561                           ;	CPD = OFF, Data EEPROM code protection off
   562                           ;	Flash Program Memory Write Enable bits
   563                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   564                           ;	In-Circuit Debugger Mode bit
   565                           ;	DEBUG = 0x1, unprogrammed default
   566                           ;	Flash Program Memory Code Protection bit
   567                           ;	CP = OFF, Code protection off
   568  2007                     	org	8199
   569  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 01 22:17:08 2025

                     l31 077C                       l36 07AB                       l28 0776  
                     l37 07B3                       u10 0775                       u11 0774  
                     u20 077C                       u21 077B                       u30 0786  
                     u31 0785                       u50 07AB                       u51 07AA  
                     u60 07B1                       u44 078D                       u61 07B0  
                     u45 078B                       u70 07B7                       u71 07B6  
                     u80 07C1                       u81 07C0                       u94 07C8  
                     u95 07C6                       _xx 0075                      l641 076A  
                    l731 07EF                      l651 0780                      l643 076B  
                    l661 07B1                      l645 0770                      l671 07C2  
                    l663 07B7                      l655 0787                      l639 0765  
                    l673 07CF                      l665 07BA                      l657 0794  
                    l649 077F                      l675 07DC                      l667 07BB  
                    l659 07A1                      l679 07E7                      _RD0 0040  
                    _RD1 0041                      u100 07E6                      u101 07E5  
                    u117 079A                      u127 07D5                     _main 0765  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    main@i 0073                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0070                   _TRISD0 0440                   _TRISD1 0441  
                 _puerto 0076  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0765     end_of_initialization 07FC      start_initialization 07FA  
            __pbssCOMMON 0075                ___latbits 0002                 main@i_44 0074  
