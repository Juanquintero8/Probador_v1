

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Apr 11 15:59:31 2025

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79                           
    80                           	psect	idataBANK0
    81  051A                     __pidataBANK0:	
    82                           
    83                           ;initializer for _nro_pin
    84  051A  3407               	retlw	7
    85                           
    86                           	psect	nvBANK0
    87  0025                     __pnvBANK0:	
    88  0025                     _port_act:	
    89  0025                     	ds	1
    90  0005                     _PORTA	set	5
    91  0006                     _PORTB	set	6
    92  0007                     _PORTC	set	7
    93  0008                     _PORTD	set	8
    94  0009                     _PORTE	set	9
    95  0048                     _RE0	set	72
    96  0049                     _RE1	set	73
    97  004A                     _RE2	set	74
    98  009F                     _ADCON1	set	159
    99  0085                     _TRISA	set	133
   100  0086                     _TRISB	set	134
   101  0087                     _TRISC	set	135
   102  0088                     _TRISD	set	136
   103  0089                     _TRISE	set	137
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  07F2                     start_initialization:	
   109  07F2                     __initialization:	
   110                           
   111                           ; Clear objects allocated to COMMON
   112  07F2  01FD               	clrf	__pbssCOMMON& (0+127)
   113                           
   114                           ; Clear objects allocated to BANK0
   115  07F3  01A0               	clrf	__pbssBANK0& (0+127)
   116  07F4  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   117  07F5  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   118  07F6  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   119  07F7  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   120                           
   121                           ; Initialize objects allocated to BANK0
   122  07F8  120A  118A  251A   	fcall	__pidataBANK0	;fetch initializer
   123  07FB  00A6               	movwf	__pdataBANK0& (0+127)
   124  07FC                     end_of_initialization:	
   125                           ;End of C runtime variable initialization code
   126                           
   127  07FC                     __end_of__initialization:	
   128  07FC  0183               	clrf	3
   129  07FD  120A  118A  2DD7   	ljmp	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMMON
   132  007D                     __pbssCOMMON:	
   133  007D                     _incremento:	
   134  007D                     	ds	1
   135                           
   136                           	psect	bssBANK0
   137  0020                     __pbssBANK0:	
   138  0020                     _caso:	
   139  0020                     	ds	1
   140  0021                     _mask:	
   141  0021                     	ds	1
   142  0022                     _prueba:	
   143  0022                     	ds	1
   144  0023                     _puerto:	
   145  0023                     	ds	1
   146  0024                     _xx:	
   147  0024                     	ds	1
   148                           
   149                           	psect	dataBANK0
   150  0026                     __pdataBANK0:	
   151  0026                     _nro_pin:	
   152  0026                     	ds	1
   153                           
   154                           	psect	cstackCOMMON
   155  0070                     __pcstackCOMMON:	
   156  0070                     ?_port_conf_r1:	
   157  0070                     ??_port_conf_r1:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  0070                     ?_porte_ent:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ??_porte_ent:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_Prueba_sal:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_port_conf_r2:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ??_port_conf_r2:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ?_porte_sal:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ??_porte_sal:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_salidas:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ??_salidas:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?_main:	
   188                           ; 1 bytes @ 0x0
   189                           
   190                           
   191                           ; 1 bytes @ 0x0
   192  0070                     	ds	2
   193  0072                     salidas@i:	
   194                           
   195                           ; 1 bytes @ 0x2
   196  0072                     	ds	1
   197  0073                     ??_Prueba_sal:	
   198                           
   199                           ; 1 bytes @ 0x3
   200  0073                     	ds	1
   201  0074                     Prueba_sal@i:	
   202                           
   203                           ; 1 bytes @ 0x4
   204  0074                     	ds	1
   205  0075                     ??_main:	
   206                           
   207                           ; 1 bytes @ 0x5
   208  0075                     	ds	3
   209  0078                     main@i:	
   210                           
   211                           ; 1 bytes @ 0x8
   212  0078                     	ds	1
   213  0079                     main@i_74:	
   214                           
   215                           ; 1 bytes @ 0x9
   216  0079                     	ds	1
   217  007A                     main@i_75:	
   218                           
   219                           ; 1 bytes @ 0xA
   220  007A                     	ds	1
   221  007B                     main@i_76:	
   222                           
   223                           ; 1 bytes @ 0xB
   224  007B                     	ds	1
   225  007C                     main@i_77:	
   226                           
   227                           ; 1 bytes @ 0xC
   228  007C                     	ds	1
   229                           
   230                           	psect	maintext
   231  05D7                     __pmaintext:	
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 41 in file "Probador1.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  i               1   12[COMMON] unsigned char 
   242 ;;  i               1   11[COMMON] unsigned char 
   243 ;;  i               1   10[COMMON] unsigned char 
   244 ;;  i               1    9[COMMON] unsigned char 
   245 ;;  i               1    8[COMMON] unsigned char 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : B00/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   255 ;;      Params:         0       0       0       0       0
   256 ;;      Locals:         5       0       0       0       0
   257 ;;      Temps:          3       0       0       0       0
   258 ;;      Totals:         8       0       0       0       0
   259 ;;Total ram usage:        8 bytes
   260 ;; Hardware stack levels required when called:    2
   261 ;; This function calls:
   262 ;;		_Prueba_sal
   263 ;;		_port_conf_r1
   264 ;;		_port_conf_r2
   265 ;;		_porte_ent
   266 ;;		_porte_sal
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           
   273                           ;psect for function _main
   274  05D7                     _main:	
   275                           
   276                           ;Probador1.c: 42: port_conf_r1();
   277                           
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   280  05D7  120A  118A  2532  120A  118A  	fcall	_port_conf_r1
   281                           
   282                           ;Probador1.c: 43: porte_ent();
   283  05DC  120A  118A  251F  120A  118A  	fcall	_porte_ent
   284                           
   285                           ;Probador1.c: 44: port_act = PORTA;
   286  05E1  1283               	bcf	3,5	;RP0=0, select bank0
   287  05E2  1303               	bcf	3,6	;RP1=0, select bank0
   288  05E3  0805               	movf	5,w	;volatile
   289  05E4  00F5               	movwf	??_main
   290  05E5  0875               	movf	??_main,w
   291  05E6  00A5               	movwf	_port_act
   292  05E7  2E08               	goto	l994
   293  05E8                     l982:	
   294                           ;Probador1.c: 49: while (RE0 == 0) {
   295                           
   296                           ;Probador1.c: 47: while (1) {
   297                           
   298                           ;Probador1.c: 45: puerto = 0;
   299                           
   300                           
   301                           ;Probador1.c: 50: if (xx == 1) {
   302  05E8  0324               	decf	_xx,w
   303  05E9  1903               	btfsc	3,2
   304  05EA  2DEF               	goto	l65
   305  05EB                     l62:	
   306                           ;Probador1.c: 52: }
   307                           ;Probador1.c: 53: continue;
   308                           
   309                           ;Probador1.c: 51: break;
   310                           
   311  05EB  1283               	bcf	3,5	;RP0=0, select bank0
   312  05EC  1303               	bcf	3,6	;RP1=0, select bank0
   313  05ED  1C09               	btfss	9,0	;volatile
   314  05EE  2DE8               	goto	l982
   315  05EF                     l65:	
   316                           
   317                           ;Probador1.c: 54: }
   318                           ;Probador1.c: 55: xx = 1;
   319  05EF  01A4               	clrf	_xx
   320  05F0  0AA4               	incf	_xx,f
   321                           
   322                           ;Probador1.c: 56: switch (puerto) {
   323  05F1  2FD0               	goto	l1180
   324  05F2                     l986:	
   325                           ;Probador1.c: 57: case 0:
   326                           
   327                           
   328                           ;Probador1.c: 58: if (prueba == 0) {
   329  05F2  0822               	movf	_prueba,w
   330  05F3  1D03               	btfss	3,2
   331  05F4  2E10               	goto	l1002
   332                           
   333                           ;Probador1.c: 59: port_conf_r1();
   334  05F5  120A  118A  2532  120A  118A  	fcall	_port_conf_r1
   335                           
   336                           ;Probador1.c: 60: porte_ent();
   337  05FA  120A  118A  251F  120A  118A  	fcall	_porte_ent
   338                           
   339                           ;Probador1.c: 61: Prueba_sal();
   340  05FF  120A  118A  2541  120A  118A  	fcall	_Prueba_sal
   341  0604                     l992:	
   342                           ;Probador1.c: 62: while (1) {
   343                           
   344                           
   345                           ;Probador1.c: 63: if (RE1 == 1) {
   346  0604  1283               	bcf	3,5	;RP0=0, select bank0
   347  0605  1303               	bcf	3,6	;RP1=0, select bank0
   348  0606  1C89               	btfss	9,1	;volatile
   349  0607  2E0A               	goto	l70
   350  0608                     l994:	
   351                           
   352                           ;Probador1.c: 64: puerto = 0;
   353  0608  01A3               	clrf	_puerto
   354                           
   355                           ;Probador1.c: 65: break;
   356  0609  2DEB               	goto	l62
   357  060A                     l70:	
   358                           
   359                           ;Probador1.c: 66: }
   360                           ;Probador1.c: 67: if (RE0 == 1) {
   361  060A  1C09               	btfss	9,0	;volatile
   362  060B  2E04               	goto	l992
   363                           
   364                           ;Probador1.c: 68: puerto = 1;
   365  060C  01A3               	clrf	_puerto
   366  060D  0AA3               	incf	_puerto,f
   367                           
   368                           ;Probador1.c: 69: nro_pin = 9;
   369  060E  3009               	movlw	9
   370  060F  2F89               	goto	L1
   371  0610                     l1002:	
   372                           ;Probador1.c: 74: } else {
   373                           
   374                           ;Probador1.c: 71: }
   375                           ;Probador1.c: 72: }
   376                           ;Probador1.c: 73: break;
   377                           
   378                           ;Probador1.c: 70: break;
   379                           
   380                           
   381                           ;Probador1.c: 75: port_conf_r2();
   382  0610  120A  118A  2524  120A  118A  	fcall	_port_conf_r2
   383                           
   384                           ;Probador1.c: 76: mask = 1;
   385  0615  1283               	bcf	3,5	;RP0=0, select bank0
   386  0616  1303               	bcf	3,6	;RP1=0, select bank0
   387  0617  01A1               	clrf	_mask
   388  0618  0AA1               	incf	_mask,f
   389                           
   390                           ;Probador1.c: 77: incremento = 1;
   391  0619  01FD               	clrf	_incremento
   392  061A  0AFD               	incf	_incremento,f
   393                           
   394                           ;Probador1.c: 78: for (unsigned char i = 0; i < nro_pin; i = incremento) {
   395  061B  01F8               	clrf	main@i
   396  061C  0826               	movf	_nro_pin,w
   397  061D  0278               	subwf	main@i,w
   398  061E  1803               	btfsc	3,0
   399  061F  2E52               	goto	l1028
   400  0620                     l1010:	
   401                           ;Probador1.c: 79: while (1) {
   402                           
   403                           
   404                           ;Probador1.c: 80: if (PORTA & mask) {
   405  0620  0805               	movf	5,w	;volatile
   406  0621  0521               	andwf	_mask,w
   407  0622  1903               	btfsc	3,2
   408  0623  2E4C               	goto	l1022
   409                           
   410                           ;Probador1.c: 81: RE2 = 1;
   411  0624  1509               	bsf	9,2	;volatile
   412                           
   413                           ;Probador1.c: 82: _delay((unsigned long)((150)*(4000000UL/4000.0)));
   414  0625  30C3               	movlw	195
   415  0626  00F6               	movwf	??_main+1
   416  0627  30CD               	movlw	205
   417  0628  00F5               	movwf	??_main
   418  0629                     u877:	
   419  0629  0BF5               	decfsz	??_main,f
   420  062A  2E29               	goto	u877
   421  062B  0BF6               	decfsz	??_main+1,f
   422  062C  2E29               	goto	u877
   423                           
   424                           ;Probador1.c: 83: RE2 = 0;
   425  062D  1283               	bcf	3,5	;RP0=0, select bank0
   426  062E  1303               	bcf	3,6	;RP1=0, select bank0
   427  062F  1109               	bcf	9,2	;volatile
   428                           
   429                           ;Probador1.c: 84: _delay((unsigned long)((50)*(4000000UL/4000.0)));
   430  0630  3041               	movlw	65
   431  0631  00F6               	movwf	??_main+1
   432  0632  30EE               	movlw	238
   433  0633  00F5               	movwf	??_main
   434  0634                     u887:	
   435  0634  0BF5               	decfsz	??_main,f
   436  0635  2E34               	goto	u887
   437  0636  0BF6               	decfsz	??_main+1,f
   438  0637  2E34               	goto	u887
   439  0638  0000               	nop
   440                           
   441                           ;Probador1.c: 85: mask = (1 << incremento);
   442  0639  3001               	movlw	1
   443  063A  00F5               	movwf	??_main
   444  063B  0A7D               	incf	_incremento,w
   445  063C  2E3F               	goto	u564
   446  063D                     u565:	
   447  063D  1003               	clrc
   448  063E  0DF5               	rlf	??_main,f
   449  063F                     u564:	
   450  063F  3EFF               	addlw	-1
   451  0640  1D03               	skipz
   452  0641  2E3D               	goto	u565
   453  0642  0875               	movf	??_main,w
   454  0643  00F6               	movwf	??_main+1
   455  0644  0876               	movf	??_main+1,w
   456  0645  1283               	bcf	3,5	;RP0=0, select bank0
   457  0646  1303               	bcf	3,6	;RP1=0, select bank0
   458  0647  00A1               	movwf	_mask
   459                           
   460                           ;Probador1.c: 86: incremento++;
   461  0648  3001               	movlw	1
   462  0649  00F5               	movwf	??_main
   463  064A  0875               	movf	??_main,w
   464  064B  07FD               	addwf	_incremento,f
   465  064C                     l1022:	
   466                           
   467                           ;Probador1.c: 87: }
   468                           ;Probador1.c: 88: if (incremento == 7) {
   469  064C  3007               	movlw	7
   470  064D  067D               	xorwf	_incremento,w
   471  064E  1D03               	btfss	3,2
   472  064F  2E20               	goto	l1010
   473                           
   474                           ;Probador1.c: 89: puerto = 1;
   475  0650  01A3               	clrf	_puerto
   476  0651  0AA3               	incf	_puerto,f
   477  0652                     l1028:	
   478                           ;Probador1.c: 94: }
   479                           ;Probador1.c: 95: }
   480                           ;Probador1.c: 98: case 1:
   481                           
   482                           ;Probador1.c: 91: }
   483                           ;Probador1.c: 92: }
   484                           ;Probador1.c: 93: break;
   485                           
   486                           ;Probador1.c: 90: break;
   487                           
   488                           
   489                           ;Probador1.c: 99: if (prueba == 0) {
   490  0652  0822               	movf	_prueba,w
   491  0653  1D03               	btfss	3,2
   492  0654  2E64               	goto	l85
   493                           
   494                           ;Probador1.c: 100: Prueba_sal();
   495  0655  120A  118A  2541  120A  118A  	fcall	_Prueba_sal
   496  065A                     l1032:	
   497                           ;Probador1.c: 101: while (1) {
   498                           
   499                           
   500                           ;Probador1.c: 102: if (RE1 == 1) {
   501  065A  1283               	bcf	3,5	;RP0=0, select bank0
   502  065B  1303               	bcf	3,6	;RP1=0, select bank0
   503  065C  1C89               	btfss	9,1	;volatile
   504  065D  2E61               	goto	l87
   505                           
   506                           ;Probador1.c: 103: puerto = 1;
   507  065E  01A3               	clrf	_puerto
   508  065F  0AA3               	incf	_puerto,f
   509                           
   510                           ;Probador1.c: 104: break;
   511  0660  2DEB               	goto	l62
   512  0661                     l87:	
   513                           
   514                           ;Probador1.c: 105: }
   515                           ;Probador1.c: 106: if (RE0 == 1) {
   516  0661  1C09               	btfss	9,0	;volatile
   517  0662  2E5A               	goto	l1032
   518  0663  2EB6               	goto	l1070
   519  0664                     l85:	
   520                           ;Probador1.c: 112: } else {
   521                           
   522                           ;Probador1.c: 109: }
   523                           ;Probador1.c: 110: }
   524                           ;Probador1.c: 111: break;
   525                           
   526                           ;Probador1.c: 108: break;
   527                           
   528                           ;Probador1.c: 107: puerto = 2;
   529                           
   530                           
   531                           ;Probador1.c: 113: incremento = 1;
   532  0664  01FD               	clrf	_incremento
   533  0665  0AFD               	incf	_incremento,f
   534                           
   535                           ;Probador1.c: 114: nro_pin = 9;
   536  0666  3009               	movlw	9
   537  0667  00F5               	movwf	??_main
   538  0668  0875               	movf	??_main,w
   539  0669  00A6               	movwf	_nro_pin
   540                           
   541                           ;Probador1.c: 115: mask = 1;
   542  066A  01A1               	clrf	_mask
   543  066B  0AA1               	incf	_mask,f
   544                           
   545                           ;Probador1.c: 116: for (unsigned char i = 0; i < nro_pin; i = incremento) {
   546  066C  01F9               	clrf	main@i_74
   547  066D                     l92:	
   548  066D  0826               	movf	_nro_pin,w
   549  066E  0279               	subwf	main@i_74,w
   550  066F  1803               	btfsc	3,0
   551  0670  2DEB               	goto	l62
   552  0671                     l1046:	
   553                           ;Probador1.c: 117: while (1) {
   554                           
   555                           
   556                           ;Probador1.c: 118: if (PORTB & mask) {
   557  0671  0806               	movf	6,w	;volatile
   558  0672  0521               	andwf	_mask,w
   559  0673  1903               	btfsc	3,2
   560  0674  2E9D               	goto	l1058
   561                           
   562                           ;Probador1.c: 119: RE2 = 1;
   563  0675  1509               	bsf	9,2	;volatile
   564                           
   565                           ;Probador1.c: 120: _delay((unsigned long)((150)*(4000000UL/4000.0)));
   566  0676  30C3               	movlw	195
   567  0677  00F6               	movwf	??_main+1
   568  0678  30CD               	movlw	205
   569  0679  00F5               	movwf	??_main
   570  067A                     u897:	
   571  067A  0BF5               	decfsz	??_main,f
   572  067B  2E7A               	goto	u897
   573  067C  0BF6               	decfsz	??_main+1,f
   574  067D  2E7A               	goto	u897
   575                           
   576                           ;Probador1.c: 121: RE2 = 0;
   577  067E  1283               	bcf	3,5	;RP0=0, select bank0
   578  067F  1303               	bcf	3,6	;RP1=0, select bank0
   579  0680  1109               	bcf	9,2	;volatile
   580                           
   581                           ;Probador1.c: 122: _delay((unsigned long)((50)*(4000000UL/4000.0)));
   582  0681  3041               	movlw	65
   583  0682  00F6               	movwf	??_main+1
   584  0683  30EE               	movlw	238
   585  0684  00F5               	movwf	??_main
   586  0685                     u907:	
   587  0685  0BF5               	decfsz	??_main,f
   588  0686  2E85               	goto	u907
   589  0687  0BF6               	decfsz	??_main+1,f
   590  0688  2E85               	goto	u907
   591  0689  0000               	nop
   592                           
   593                           ;Probador1.c: 123: mask = (1 << incremento);
   594  068A  3001               	movlw	1
   595  068B  00F5               	movwf	??_main
   596  068C  0A7D               	incf	_incremento,w
   597  068D  2E90               	goto	u634
   598  068E                     u635:	
   599  068E  1003               	clrc
   600  068F  0DF5               	rlf	??_main,f
   601  0690                     u634:	
   602  0690  3EFF               	addlw	-1
   603  0691  1D03               	skipz
   604  0692  2E8E               	goto	u635
   605  0693  0875               	movf	??_main,w
   606  0694  00F6               	movwf	??_main+1
   607  0695  0876               	movf	??_main+1,w
   608  0696  1283               	bcf	3,5	;RP0=0, select bank0
   609  0697  1303               	bcf	3,6	;RP1=0, select bank0
   610  0698  00A1               	movwf	_mask
   611                           
   612                           ;Probador1.c: 124: incremento++;
   613  0699  3001               	movlw	1
   614  069A  00F5               	movwf	??_main
   615  069B  0875               	movf	??_main,w
   616  069C  07FD               	addwf	_incremento,f
   617  069D                     l1058:	
   618                           
   619                           ;Probador1.c: 125: }
   620                           ;Probador1.c: 126: if (incremento == 9) {
   621  069D  3009               	movlw	9
   622  069E  067D               	xorwf	_incremento,w
   623  069F  1D03               	btfss	3,2
   624  06A0  2E71               	goto	l1046
   625                           
   626                           ;Probador1.c: 127: puerto = 2;
   627  06A1  3002               	movlw	2
   628  06A2  00F5               	movwf	??_main
   629  06A3  0875               	movf	??_main,w
   630  06A4  00A3               	movwf	_puerto
   631                           
   632                           ;Probador1.c: 128: break;
   633  06A5  087D               	movf	_incremento,w
   634  06A6  00F5               	movwf	??_main
   635  06A7  0875               	movf	??_main,w
   636  06A8  00F9               	movwf	main@i_74
   637  06A9  2E6D               	goto	l92
   638  06AA                     l1064:	
   639                           ;Probador1.c: 134: }
   640                           ;Probador1.c: 137: case 2:
   641                           
   642                           ;Probador1.c: 129: }
   643                           ;Probador1.c: 130: }
   644                           ;Probador1.c: 132: }
   645                           ;Probador1.c: 133: break;
   646                           
   647                           
   648                           ;Probador1.c: 138: if (prueba == 0) {
   649  06AA  0822               	movf	_prueba,w
   650  06AB  1D03               	btfss	3,2
   651  06AC  2EBB               	goto	l101
   652                           
   653                           ;Probador1.c: 139: Prueba_sal();
   654  06AD  120A  118A  2541  120A  118A  	fcall	_Prueba_sal
   655  06B2                     l1068:	
   656                           ;Probador1.c: 140: while (1) {
   657                           
   658                           
   659                           ;Probador1.c: 141: if (RE1 == 1) {
   660  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   661  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   662  06B4  1C89               	btfss	9,1	;volatile
   663  06B5  2EB8               	goto	l103
   664  06B6                     l1070:	
   665                           
   666                           ;Probador1.c: 142: puerto = 2;
   667  06B6  3002               	movlw	2
   668  06B7  2F0E               	goto	L3
   669  06B8                     l103:	
   670                           ;Probador1.c: 143: break;
   671                           
   672                           
   673                           ;Probador1.c: 144: }
   674                           ;Probador1.c: 145: if (RE0 == 1) {
   675  06B8  1C09               	btfss	9,0	;volatile
   676  06B9  2EB2               	goto	l1068
   677  06BA  2F0D               	goto	l1106
   678  06BB                     l101:	
   679                           ;Probador1.c: 151: } else {
   680                           
   681                           ;Probador1.c: 148: }
   682                           ;Probador1.c: 149: }
   683                           ;Probador1.c: 150: break;
   684                           
   685                           ;Probador1.c: 147: break;
   686                           
   687                           ;Probador1.c: 146: puerto = 3;
   688                           
   689                           
   690                           ;Probador1.c: 152: incremento = 1;
   691  06BB  01FD               	clrf	_incremento
   692  06BC  0AFD               	incf	_incremento,f
   693                           
   694                           ;Probador1.c: 153: nro_pin = 9;
   695  06BD  3009               	movlw	9
   696  06BE  00F5               	movwf	??_main
   697  06BF  0875               	movf	??_main,w
   698  06C0  00A6               	movwf	_nro_pin
   699                           
   700                           ;Probador1.c: 154: mask = 1;
   701  06C1  01A1               	clrf	_mask
   702  06C2  0AA1               	incf	_mask,f
   703                           
   704                           ;Probador1.c: 155: for (unsigned char i = 0; i < nro_pin; i = incremento) {
   705  06C3  01FA               	clrf	main@i_75
   706  06C4                     l108:	
   707  06C4  0826               	movf	_nro_pin,w
   708  06C5  027A               	subwf	main@i_75,w
   709  06C6  1803               	btfsc	3,0
   710  06C7  2DEB               	goto	l62
   711  06C8                     l1082:	
   712                           ;Probador1.c: 156: while (1) {
   713                           
   714                           
   715                           ;Probador1.c: 157: if (PORTC & mask) {
   716  06C8  0807               	movf	7,w	;volatile
   717  06C9  0521               	andwf	_mask,w
   718  06CA  1903               	btfsc	3,2
   719  06CB  2EF4               	goto	l1094
   720                           
   721                           ;Probador1.c: 158: RE2 = 1;
   722  06CC  1509               	bsf	9,2	;volatile
   723                           
   724                           ;Probador1.c: 159: _delay((unsigned long)((150)*(4000000UL/4000.0)));
   725  06CD  30C3               	movlw	195
   726  06CE  00F6               	movwf	??_main+1
   727  06CF  30CD               	movlw	205
   728  06D0  00F5               	movwf	??_main
   729  06D1                     u917:	
   730  06D1  0BF5               	decfsz	??_main,f
   731  06D2  2ED1               	goto	u917
   732  06D3  0BF6               	decfsz	??_main+1,f
   733  06D4  2ED1               	goto	u917
   734                           
   735                           ;Probador1.c: 160: RE2 = 0;
   736  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   737  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   738  06D7  1109               	bcf	9,2	;volatile
   739                           
   740                           ;Probador1.c: 161: _delay((unsigned long)((50)*(4000000UL/4000.0)));
   741  06D8  3041               	movlw	65
   742  06D9  00F6               	movwf	??_main+1
   743  06DA  30EE               	movlw	238
   744  06DB  00F5               	movwf	??_main
   745  06DC                     u927:	
   746  06DC  0BF5               	decfsz	??_main,f
   747  06DD  2EDC               	goto	u927
   748  06DE  0BF6               	decfsz	??_main+1,f
   749  06DF  2EDC               	goto	u927
   750  06E0  0000               	nop
   751                           
   752                           ;Probador1.c: 162: mask = (1 << incremento);
   753  06E1  3001               	movlw	1
   754  06E2  00F5               	movwf	??_main
   755  06E3  0A7D               	incf	_incremento,w
   756  06E4  2EE7               	goto	u704
   757  06E5                     u705:	
   758  06E5  1003               	clrc
   759  06E6  0DF5               	rlf	??_main,f
   760  06E7                     u704:	
   761  06E7  3EFF               	addlw	-1
   762  06E8  1D03               	skipz
   763  06E9  2EE5               	goto	u705
   764  06EA  0875               	movf	??_main,w
   765  06EB  00F6               	movwf	??_main+1
   766  06EC  0876               	movf	??_main+1,w
   767  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   768  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   769  06EF  00A1               	movwf	_mask
   770                           
   771                           ;Probador1.c: 163: incremento++;
   772  06F0  3001               	movlw	1
   773  06F1  00F5               	movwf	??_main
   774  06F2  0875               	movf	??_main,w
   775  06F3  07FD               	addwf	_incremento,f
   776  06F4                     l1094:	
   777                           
   778                           ;Probador1.c: 164: }
   779                           ;Probador1.c: 165: if (incremento == 9) {
   780  06F4  3009               	movlw	9
   781  06F5  067D               	xorwf	_incremento,w
   782  06F6  1D03               	btfss	3,2
   783  06F7  2EC8               	goto	l1082
   784                           
   785                           ;Probador1.c: 166: puerto = 3;
   786  06F8  3003               	movlw	3
   787  06F9  00F5               	movwf	??_main
   788  06FA  0875               	movf	??_main,w
   789  06FB  00A3               	movwf	_puerto
   790                           
   791                           ;Probador1.c: 167: break;
   792  06FC  087D               	movf	_incremento,w
   793  06FD  00F5               	movwf	??_main
   794  06FE  0875               	movf	??_main,w
   795  06FF  00FA               	movwf	main@i_75
   796  0700  2EC4               	goto	l108
   797  0701                     l1100:	
   798                           ;Probador1.c: 173: }
   799                           ;Probador1.c: 175: case 3:
   800                           
   801                           ;Probador1.c: 168: }
   802                           ;Probador1.c: 169: }
   803                           ;Probador1.c: 171: }
   804                           ;Probador1.c: 172: break;
   805                           
   806                           
   807                           ;Probador1.c: 176: if (prueba == 0) {
   808  0701  0822               	movf	_prueba,w
   809  0702  1D03               	btfss	3,2
   810  0703  2F22               	goto	l117
   811                           
   812                           ;Probador1.c: 177: Prueba_sal();
   813  0704  120A  118A  2541  120A  118A  	fcall	_Prueba_sal
   814  0709                     l1104:	
   815                           ;Probador1.c: 178: while (1) {
   816                           
   817                           
   818                           ;Probador1.c: 179: if (RE1 == 1) {
   819  0709  1283               	bcf	3,5	;RP0=0, select bank0
   820  070A  1303               	bcf	3,6	;RP1=0, select bank0
   821  070B  1C89               	btfss	9,1	;volatile
   822  070C  2F12               	goto	l119
   823  070D                     l1106:	
   824                           
   825                           ;Probador1.c: 180: puerto = 3;
   826  070D  3003               	movlw	3
   827  070E                     L3:	
   828  070E  00F5               	movwf	??_main
   829  070F  0875               	movf	??_main,w
   830  0710  00A3               	movwf	_puerto
   831                           
   832                           ;Probador1.c: 181: break;
   833  0711  2DEB               	goto	l62
   834  0712                     l119:	
   835                           
   836                           ;Probador1.c: 182: }
   837                           ;Probador1.c: 183: if (RE0 == 1) {
   838  0712  1C09               	btfss	9,0	;volatile
   839  0713  2F09               	goto	l1104
   840                           
   841                           ;Probador1.c: 184: puerto = 4;
   842  0714  3004               	movlw	4
   843  0715  00F5               	movwf	??_main
   844  0716  0875               	movf	??_main,w
   845  0717  00A3               	movwf	_puerto
   846                           
   847                           ;Probador1.c: 185: nro_pin = 4;
   848  0718  3004               	movlw	4
   849  0719  00F5               	movwf	??_main
   850  071A  0875               	movf	??_main,w
   851  071B  00A6               	movwf	_nro_pin
   852                           
   853                           ;Probador1.c: 186: porte_sal();
   854  071C  120A  118A  251B  120A  118A  	fcall	_porte_sal
   855                           
   856                           ;Probador1.c: 187: break;
   857  0721  2DEB               	goto	l62
   858  0722                     l117:	
   859                           ;Probador1.c: 191: } else {
   860                           
   861                           ;Probador1.c: 188: }
   862                           ;Probador1.c: 189: }
   863                           ;Probador1.c: 190: break;
   864                           
   865                           
   866                           ;Probador1.c: 192: incremento = 1;
   867  0722  01FD               	clrf	_incremento
   868  0723  0AFD               	incf	_incremento,f
   869                           
   870                           ;Probador1.c: 193: nro_pin = 9;
   871  0724  3009               	movlw	9
   872  0725  00F5               	movwf	??_main
   873  0726  0875               	movf	??_main,w
   874  0727  00A6               	movwf	_nro_pin
   875                           
   876                           ;Probador1.c: 194: mask = 1;
   877  0728  01A1               	clrf	_mask
   878  0729  0AA1               	incf	_mask,f
   879                           
   880                           ;Probador1.c: 195: for (unsigned char i = 0; i < nro_pin; i = incremento) {
   881  072A  01FB               	clrf	main@i_76
   882  072B                     l124:	
   883  072B  0826               	movf	_nro_pin,w
   884  072C  027B               	subwf	main@i_76,w
   885  072D  1803               	btfsc	3,0
   886  072E  2DEB               	goto	l62
   887  072F                     l1120:	
   888                           ;Probador1.c: 196: while (1) {
   889                           
   890                           
   891                           ;Probador1.c: 197: if (PORTD & mask) {
   892  072F  0808               	movf	8,w	;volatile
   893  0730  0521               	andwf	_mask,w
   894  0731  1903               	btfsc	3,2
   895  0732  2F5B               	goto	l1132
   896                           
   897                           ;Probador1.c: 198: RE2 = 1;
   898  0733  1509               	bsf	9,2	;volatile
   899                           
   900                           ;Probador1.c: 199: _delay((unsigned long)((150)*(4000000UL/4000.0)));
   901  0734  30C3               	movlw	195
   902  0735  00F6               	movwf	??_main+1
   903  0736  30CD               	movlw	205
   904  0737  00F5               	movwf	??_main
   905  0738                     u937:	
   906  0738  0BF5               	decfsz	??_main,f
   907  0739  2F38               	goto	u937
   908  073A  0BF6               	decfsz	??_main+1,f
   909  073B  2F38               	goto	u937
   910                           
   911                           ;Probador1.c: 200: RE2 = 0;
   912  073C  1283               	bcf	3,5	;RP0=0, select bank0
   913  073D  1303               	bcf	3,6	;RP1=0, select bank0
   914  073E  1109               	bcf	9,2	;volatile
   915                           
   916                           ;Probador1.c: 201: _delay((unsigned long)((50)*(4000000UL/4000.0)));
   917  073F  3041               	movlw	65
   918  0740  00F6               	movwf	??_main+1
   919  0741  30EE               	movlw	238
   920  0742  00F5               	movwf	??_main
   921  0743                     u947:	
   922  0743  0BF5               	decfsz	??_main,f
   923  0744  2F43               	goto	u947
   924  0745  0BF6               	decfsz	??_main+1,f
   925  0746  2F43               	goto	u947
   926  0747  0000               	nop
   927                           
   928                           ;Probador1.c: 202: mask = (1 << incremento);
   929  0748  3001               	movlw	1
   930  0749  00F5               	movwf	??_main
   931  074A  0A7D               	incf	_incremento,w
   932  074B  2F4E               	goto	u774
   933  074C                     u775:	
   934  074C  1003               	clrc
   935  074D  0DF5               	rlf	??_main,f
   936  074E                     u774:	
   937  074E  3EFF               	addlw	-1
   938  074F  1D03               	skipz
   939  0750  2F4C               	goto	u775
   940  0751  0875               	movf	??_main,w
   941  0752  00F6               	movwf	??_main+1
   942  0753  0876               	movf	??_main+1,w
   943  0754  1283               	bcf	3,5	;RP0=0, select bank0
   944  0755  1303               	bcf	3,6	;RP1=0, select bank0
   945  0756  00A1               	movwf	_mask
   946                           
   947                           ;Probador1.c: 203: incremento++;
   948  0757  3001               	movlw	1
   949  0758  00F5               	movwf	??_main
   950  0759  0875               	movf	??_main,w
   951  075A  07FD               	addwf	_incremento,f
   952  075B                     l1132:	
   953                           
   954                           ;Probador1.c: 204: }
   955                           ;Probador1.c: 205: if (incremento == 9) {
   956  075B  3009               	movlw	9
   957  075C  067D               	xorwf	_incremento,w
   958  075D  1D03               	btfss	3,2
   959  075E  2F2F               	goto	l1120
   960                           
   961                           ;Probador1.c: 206: puerto = 4;
   962  075F  3004               	movlw	4
   963  0760  00F5               	movwf	??_main
   964  0761  0875               	movf	??_main,w
   965  0762  00A3               	movwf	_puerto
   966                           
   967                           ;Probador1.c: 207: break;
   968  0763  087D               	movf	_incremento,w
   969  0764  00F5               	movwf	??_main
   970  0765  0875               	movf	??_main,w
   971  0766  00FB               	movwf	main@i_76
   972  0767  2F2B               	goto	l124
   973  0768                     l1138:	
   974                           ;Probador1.c: 213: }
   975                           ;Probador1.c: 215: case 4:
   976                           
   977                           ;Probador1.c: 208: }
   978                           ;Probador1.c: 209: }
   979                           ;Probador1.c: 211: }
   980                           ;Probador1.c: 212: break;
   981                           
   982                           
   983                           ;Probador1.c: 216: if (prueba == 0) {
   984  0768  1283               	bcf	3,5	;RP0=0, select bank0
   985  0769  1303               	bcf	3,6	;RP1=0, select bank0
   986  076A  0822               	movf	_prueba,w
   987  076B  1D03               	btfss	3,2
   988  076C  2F8D               	goto	l133
   989                           
   990                           ;Probador1.c: 217: Prueba_sal();
   991  076D  120A  118A  2541  120A  118A  	fcall	_Prueba_sal
   992                           
   993                           ;Probador1.c: 218: porte_ent();
   994  0772  120A  118A  251F  120A  118A  	fcall	_porte_ent
   995  0777                     l1144:	
   996                           ;Probador1.c: 219: while (1) {
   997                           
   998                           
   999                           ;Probador1.c: 220: if (RE1 == 1) {
  1000  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0779  1C89               	btfss	9,1	;volatile
  1003  077A  2F85               	goto	l135
  1004                           
  1005                           ;Probador1.c: 221: puerto = 4;
  1006  077B  3004               	movlw	4
  1007  077C  00F5               	movwf	??_main
  1008  077D  0875               	movf	??_main,w
  1009  077E  00A3               	movwf	_puerto
  1010                           
  1011                           ;Probador1.c: 222: porte_sal();
  1012  077F  120A  118A  251B  120A  118A  	fcall	_porte_sal
  1013                           
  1014                           ;Probador1.c: 223: break;
  1015  0784  2DEB               	goto	l62
  1016  0785                     l135:	
  1017                           
  1018                           ;Probador1.c: 224: }
  1019                           ;Probador1.c: 225: if (RE0 == 1) {
  1020  0785  1C09               	btfss	9,0	;volatile
  1021  0786  2F77               	goto	l1144
  1022                           
  1023                           ;Probador1.c: 226: puerto = 0;
  1024  0787  01A3               	clrf	_puerto
  1025                           
  1026                           ;Probador1.c: 227: nro_pin = 7;
  1027  0788  3007               	movlw	7
  1028  0789                     L1:	
  1029  0789  00F5               	movwf	??_main
  1030  078A  0875               	movf	??_main,w
  1031  078B  00A6               	movwf	_nro_pin
  1032                           
  1033                           ;Probador1.c: 228: break;
  1034  078C  2DEB               	goto	l62
  1035  078D                     l133:	
  1036                           ;Probador1.c: 232: } else {
  1037                           
  1038                           ;Probador1.c: 229: }
  1039                           ;Probador1.c: 230: }
  1040                           ;Probador1.c: 231: break;
  1041                           
  1042                           
  1043                           ;Probador1.c: 233: incremento = 1;
  1044  078D  01FD               	clrf	_incremento
  1045  078E  0AFD               	incf	_incremento,f
  1046                           
  1047                           ;Probador1.c: 234: nro_pin = 3;
  1048  078F  3003               	movlw	3
  1049  0790  00F5               	movwf	??_main
  1050  0791  0875               	movf	??_main,w
  1051  0792  00A6               	movwf	_nro_pin
  1052                           
  1053                           ;Probador1.c: 235: mask = 1;
  1054  0793  01A1               	clrf	_mask
  1055  0794  0AA1               	incf	_mask,f
  1056                           
  1057                           ;Probador1.c: 236: for (unsigned char i = 0; i < nro_pin; i = incremento) {
  1058  0795  01FC               	clrf	main@i_77
  1059  0796                     l140:	
  1060  0796  0826               	movf	_nro_pin,w
  1061  0797  027C               	subwf	main@i_77,w
  1062  0798  1803               	btfsc	3,0
  1063  0799  2DEB               	goto	l62
  1064  079A                     l1162:	
  1065                           ;Probador1.c: 237: while (1) {
  1066                           
  1067                           
  1068                           ;Probador1.c: 238: if (PORTE & mask) {
  1069  079A  0809               	movf	9,w	;volatile
  1070  079B  0521               	andwf	_mask,w
  1071  079C  1903               	btfsc	3,2
  1072  079D  2FC6               	goto	l1174
  1073                           
  1074                           ;Probador1.c: 239: RE2 = 1;
  1075  079E  1509               	bsf	9,2	;volatile
  1076                           
  1077                           ;Probador1.c: 240: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1078  079F  30C3               	movlw	195
  1079  07A0  00F6               	movwf	??_main+1
  1080  07A1  30CD               	movlw	205
  1081  07A2  00F5               	movwf	??_main
  1082  07A3                     u957:	
  1083  07A3  0BF5               	decfsz	??_main,f
  1084  07A4  2FA3               	goto	u957
  1085  07A5  0BF6               	decfsz	??_main+1,f
  1086  07A6  2FA3               	goto	u957
  1087                           
  1088                           ;Probador1.c: 241: RE2 = 0;
  1089  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1090  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1091  07A9  1109               	bcf	9,2	;volatile
  1092                           
  1093                           ;Probador1.c: 242: _delay((unsigned long)((50)*(4000000UL/4000.0)));
  1094  07AA  3041               	movlw	65
  1095  07AB  00F6               	movwf	??_main+1
  1096  07AC  30EE               	movlw	238
  1097  07AD  00F5               	movwf	??_main
  1098  07AE                     u967:	
  1099  07AE  0BF5               	decfsz	??_main,f
  1100  07AF  2FAE               	goto	u967
  1101  07B0  0BF6               	decfsz	??_main+1,f
  1102  07B1  2FAE               	goto	u967
  1103  07B2  0000               	nop
  1104                           
  1105                           ;Probador1.c: 243: mask = (1 << incremento);
  1106  07B3  3001               	movlw	1
  1107  07B4  00F5               	movwf	??_main
  1108  07B5  0A7D               	incf	_incremento,w
  1109  07B6  2FB9               	goto	u844
  1110  07B7                     u845:	
  1111  07B7  1003               	clrc
  1112  07B8  0DF5               	rlf	??_main,f
  1113  07B9                     u844:	
  1114  07B9  3EFF               	addlw	-1
  1115  07BA  1D03               	skipz
  1116  07BB  2FB7               	goto	u845
  1117  07BC  0875               	movf	??_main,w
  1118  07BD  00F6               	movwf	??_main+1
  1119  07BE  0876               	movf	??_main+1,w
  1120  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1121  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1122  07C1  00A1               	movwf	_mask
  1123                           
  1124                           ;Probador1.c: 244: incremento++;
  1125  07C2  3001               	movlw	1
  1126  07C3  00F5               	movwf	??_main
  1127  07C4  0875               	movf	??_main,w
  1128  07C5  07FD               	addwf	_incremento,f
  1129  07C6                     l1174:	
  1130                           
  1131                           ;Probador1.c: 245: }
  1132                           ;Probador1.c: 246: if (incremento == 3) {
  1133  07C6  3003               	movlw	3
  1134  07C7  067D               	xorwf	_incremento,w
  1135  07C8  1D03               	btfss	3,2
  1136  07C9  2F9A               	goto	l1162
  1137                           
  1138                           ;Probador1.c: 247: puerto = 0;
  1139  07CA  01A3               	clrf	_puerto
  1140                           
  1141                           ;Probador1.c: 248: break;
  1142  07CB  087D               	movf	_incremento,w
  1143  07CC  00F5               	movwf	??_main
  1144  07CD  0875               	movf	??_main,w
  1145  07CE  00FC               	movwf	main@i_77
  1146  07CF  2F96               	goto	l140
  1147  07D0                     l1180:	
  1148                           ;Probador1.c: 254: }
  1149                           ;Probador1.c: 255: }
  1150                           
  1151                           ;Probador1.c: 249: }
  1152                           ;Probador1.c: 250: }
  1153                           ;Probador1.c: 252: }
  1154                           ;Probador1.c: 253: break;
  1155                           
  1156  07D0  0823               	movf	_puerto,w
  1157                           
  1158                           ; Switch size 1, requested type "space"
  1159                           ; Number of cases is 5, Range of values is 0 to 4
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           16     9 (average)
  1163                           ; direct_byte           23     8 (fixed)
  1164                           ; jumptable            260     6 (fixed)
  1165                           ;	Chosen strategy is simple_byte
  1166  07D1  3A00               	xorlw	0	; case 0
  1167  07D2  1903               	skipnz
  1168  07D3  2DF2               	goto	l986
  1169  07D4  3A01               	xorlw	1	; case 1
  1170  07D5  1903               	skipnz
  1171  07D6  2E52               	goto	l1028
  1172  07D7  3A03               	xorlw	3	; case 2
  1173  07D8  1903               	skipnz
  1174  07D9  2EAA               	goto	l1064
  1175  07DA  3A01               	xorlw	1	; case 3
  1176  07DB  1903               	skipnz
  1177  07DC  2F01               	goto	l1100
  1178  07DD  3A07               	xorlw	7	; case 4
  1179  07DE  1903               	skipnz
  1180  07DF  2F68               	goto	l1138
  1181  07E0  2DEB               	goto	l62
  1182  07E1  2DEB               	goto	l62
  1183                           
  1184                           ;Probador1.c: 256: }
  1185                           ;Probador1.c: 257: _delay((unsigned long)((250)*(4000000UL/4000.0)));
  1186  07E2  3002               	movlw	2
  1187  07E3  00F7               	movwf	??_main+2
  1188  07E4  3045               	movlw	69
  1189  07E5  00F6               	movwf	??_main+1
  1190  07E6  30A9               	movlw	169
  1191  07E7  00F5               	movwf	??_main
  1192  07E8                     u977:	
  1193  07E8  0BF5               	decfsz	??_main,f
  1194  07E9  2FE8               	goto	u977
  1195  07EA  0BF6               	decfsz	??_main+1,f
  1196  07EB  2FE8               	goto	u977
  1197  07EC  0BF7               	decfsz	??_main+2,f
  1198  07ED  2FE8               	goto	u977
  1199  07EE  2FEF               	nop2
  1200  07EF  120A  118A  2800   	ljmp	start
  1201  07F2                     __end_of_main:	
  1202                           
  1203                           	psect	text1
  1204  051B                     __ptext1:	
  1205 ;; *************** function _porte_sal *****************
  1206 ;; Defined at:
  1207 ;;		line 301 in file "Probador1.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		status,2
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _porte_sal
  1236  051B                     _porte_sal:	
  1237                           
  1238                           ;Probador1.c: 302: TRISE = 0b00000000;
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _porte_sal: [status,2]
  1242  051B  1683               	bsf	3,5	;RP0=1, select bank1
  1243  051C  1303               	bcf	3,6	;RP1=0, select bank1
  1244  051D  0189               	clrf	9	;volatile
  1245  051E  0008               	return
  1246  051F                     __end_of_porte_sal:	
  1247                           
  1248                           	psect	text2
  1249  051F                     __ptext2:	
  1250 ;; *************** function _porte_ent *****************
  1251 ;; Defined at:
  1252 ;;		line 297 in file "Probador1.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _porte_ent
  1281  051F                     _porte_ent:	
  1282                           
  1283                           ;Probador1.c: 298: TRISE = 0b00000011;
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in _porte_ent: [wreg]
  1287  051F  3003               	movlw	3
  1288  0520  1683               	bsf	3,5	;RP0=1, select bank1
  1289  0521  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0522  0089               	movwf	9	;volatile
  1291  0523  0008               	return
  1292  0524                     __end_of_porte_ent:	
  1293                           
  1294                           	psect	text3
  1295  0524                     __ptext3:	
  1296 ;; *************** function _port_conf_r2 *****************
  1297 ;; Defined at:
  1298 ;;		line 276 in file "Probador1.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _port_conf_r2
  1327  0524                     _port_conf_r2:	
  1328                           
  1329                           ;Probador1.c: 277: TRISA = 0xFF;
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _port_conf_r2: [wreg+status,2]
  1333  0524  30FF               	movlw	255
  1334  0525  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0526  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0527  0085               	movwf	5	;volatile
  1337                           
  1338                           ;Probador1.c: 278: TRISB = 0xFF;
  1339  0528  30FF               	movlw	255
  1340  0529  0086               	movwf	6	;volatile
  1341                           
  1342                           ;Probador1.c: 279: TRISC = 0xFF;
  1343  052A  30FF               	movlw	255
  1344  052B  0087               	movwf	7	;volatile
  1345                           
  1346                           ;Probador1.c: 280: TRISD = 0xFF;
  1347  052C  30FF               	movlw	255
  1348  052D  0088               	movwf	8	;volatile
  1349                           
  1350                           ;Probador1.c: 281: PORTE = 0x00;
  1351  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1352  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0530  0189               	clrf	9	;volatile
  1354  0531  0008               	return
  1355  0532                     __end_of_port_conf_r2:	
  1356                           
  1357                           	psect	text4
  1358  0532                     __ptext4:	
  1359 ;; *************** function _port_conf_r1 *****************
  1360 ;; Defined at:
  1361 ;;		line 284 in file "Probador1.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _port_conf_r1
  1390  0532                     _port_conf_r1:	
  1391                           
  1392                           ;Probador1.c: 286: TRISA = 0b00000000;
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in _port_conf_r1: [wreg+status,2]
  1396  0532  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0533  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0534  0185               	clrf	5	;volatile
  1399                           
  1400                           ;Probador1.c: 287: TRISB = 0b00000000;
  1401  0535  0186               	clrf	6	;volatile
  1402                           
  1403                           ;Probador1.c: 288: TRISC = 0b00000000;
  1404  0536  0187               	clrf	7	;volatile
  1405                           
  1406                           ;Probador1.c: 289: TRISD = 0b00000000;
  1407  0537  0188               	clrf	8	;volatile
  1408                           
  1409                           ;Probador1.c: 290: ADCON1 = 0b00000111;
  1410  0538  3007               	movlw	7
  1411  0539  009F               	movwf	31	;volatile
  1412                           
  1413                           ;Probador1.c: 291: PORTB = 0;
  1414  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1415  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1416  053C  0186               	clrf	6	;volatile
  1417                           
  1418                           ;Probador1.c: 292: PORTC = 0;
  1419  053D  0187               	clrf	7	;volatile
  1420                           
  1421                           ;Probador1.c: 293: PORTD = 0;
  1422  053E  0188               	clrf	8	;volatile
  1423                           
  1424                           ;Probador1.c: 294: PORTE = 0;
  1425  053F  0189               	clrf	9	;volatile
  1426  0540  0008               	return
  1427  0541                     __end_of_port_conf_r1:	
  1428                           
  1429                           	psect	text5
  1430  0541                     __ptext5:	
  1431 ;; *************** function _Prueba_sal *****************
  1432 ;; Defined at:
  1433 ;;		line 305 in file "Probador1.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  i               1    4[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         1       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0
  1450 ;;      Totals:         2       0       0       0       0
  1451 ;;Total ram usage:        2 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    1
  1454 ;; This function calls:
  1455 ;;		_salidas
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _Prueba_sal
  1463  0541                     _Prueba_sal:	
  1464                           
  1465                           ;Probador1.c: 306: for (unsigned char i = 0; i < nro_pin; i++) {
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _Prueba_sal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1469  0541  01F4               	clrf	Prueba_sal@i
  1470  0542                     l968:	
  1471  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0544  0826               	movf	_nro_pin,w
  1474  0545  0274               	subwf	Prueba_sal@i,w
  1475  0546  1803               	btfsc	3,0
  1476  0547  0008               	return
  1477                           
  1478                           ;Probador1.c: 307: salidas(i);
  1479  0548  0874               	movf	Prueba_sal@i,w
  1480  0549  120A  118A  2553  120A  118A  	fcall	_salidas
  1481  054E  3001               	movlw	1
  1482  054F  00F3               	movwf	??_Prueba_sal
  1483  0550  0873               	movf	??_Prueba_sal,w
  1484  0551  07F4               	addwf	Prueba_sal@i,f
  1485  0552  2D42               	goto	l968
  1486  0553                     __end_of_Prueba_sal:	
  1487                           
  1488                           	psect	text6
  1489  0553                     __ptext6:	
  1490 ;; *************** function _salidas *****************
  1491 ;; Defined at:
  1492 ;;		line 311 in file "Probador1.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  i               1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  i               1    2[COMMON] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0
  1508 ;;      Temps:          2       0       0       0       0
  1509 ;;      Totals:         3       0       0       0       0
  1510 ;;Total ram usage:        3 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_Prueba_sal
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _salidas
  1521  0553                     _salidas:	
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _salidas: [wreg-fsr0h+status,2+status,0]
  1525                           ;salidas@i stored from wreg
  1526  0553  00F2               	movwf	salidas@i
  1527                           
  1528                           ;Probador1.c: 312: switch (puerto) {
  1529  0554  2DC3               	goto	l946
  1530  0555                     l924:	
  1531                           ;Probador1.c: 313: case 0:
  1532                           
  1533                           
  1534                           ;Probador1.c: 314: PORTA = (1 << i);
  1535  0555  3001               	movlw	1
  1536  0556  00F0               	movwf	??_salidas
  1537  0557  0A72               	incf	salidas@i,w
  1538  0558  2D5B               	goto	u444
  1539  0559                     u445:	
  1540  0559  1003               	clrc
  1541  055A  0DF0               	rlf	??_salidas,f
  1542  055B                     u444:	
  1543  055B  3EFF               	addlw	-1
  1544  055C  1D03               	skipz
  1545  055D  2D59               	goto	u445
  1546  055E  0870               	movf	??_salidas,w
  1547  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0561  0085               	movwf	5	;volatile
  1550                           
  1551                           ;Probador1.c: 315: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1552  0562  30C3               	movlw	195
  1553  0563  00F1               	movwf	??_salidas+1
  1554  0564  30CD               	movlw	205
  1555  0565  00F0               	movwf	??_salidas
  1556  0566                     u987:	
  1557  0566  0BF0               	decfsz	??_salidas,f
  1558  0567  2D66               	goto	u987
  1559  0568  0BF1               	decfsz	??_salidas+1,f
  1560  0569  2D66               	goto	u987
  1561                           
  1562                           ;Probador1.c: 316: break;
  1563  056A  0008               	return
  1564  056B                     l928:	
  1565                           ;Probador1.c: 317: case 1:
  1566                           
  1567                           
  1568                           ;Probador1.c: 318: PORTB = (1 << i);
  1569  056B  3001               	movlw	1
  1570  056C  00F0               	movwf	??_salidas
  1571  056D  0A72               	incf	salidas@i,w
  1572  056E  2D71               	goto	u454
  1573  056F                     u455:	
  1574  056F  1003               	clrc
  1575  0570  0DF0               	rlf	??_salidas,f
  1576  0571                     u454:	
  1577  0571  3EFF               	addlw	-1
  1578  0572  1D03               	skipz
  1579  0573  2D6F               	goto	u455
  1580  0574  0870               	movf	??_salidas,w
  1581  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0577  0086               	movwf	6	;volatile
  1584                           
  1585                           ;Probador1.c: 319: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1586  0578  30C3               	movlw	195
  1587  0579  00F1               	movwf	??_salidas+1
  1588  057A  30CD               	movlw	205
  1589  057B  00F0               	movwf	??_salidas
  1590  057C                     u997:	
  1591  057C  0BF0               	decfsz	??_salidas,f
  1592  057D  2D7C               	goto	u997
  1593  057E  0BF1               	decfsz	??_salidas+1,f
  1594  057F  2D7C               	goto	u997
  1595                           
  1596                           ;Probador1.c: 320: break;
  1597  0580  0008               	return
  1598  0581                     l932:	
  1599                           ;Probador1.c: 321: case 2:
  1600                           
  1601                           
  1602                           ;Probador1.c: 322: PORTC = (1 << i);
  1603  0581  3001               	movlw	1
  1604  0582  00F0               	movwf	??_salidas
  1605  0583  0A72               	incf	salidas@i,w
  1606  0584  2D87               	goto	u464
  1607  0585                     u465:	
  1608  0585  1003               	clrc
  1609  0586  0DF0               	rlf	??_salidas,f
  1610  0587                     u464:	
  1611  0587  3EFF               	addlw	-1
  1612  0588  1D03               	skipz
  1613  0589  2D85               	goto	u465
  1614  058A  0870               	movf	??_salidas,w
  1615  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1616  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1617  058D  0087               	movwf	7	;volatile
  1618                           
  1619                           ;Probador1.c: 323: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1620  058E  30C3               	movlw	195
  1621  058F  00F1               	movwf	??_salidas+1
  1622  0590  30CD               	movlw	205
  1623  0591  00F0               	movwf	??_salidas
  1624  0592                     u1007:	
  1625  0592  0BF0               	decfsz	??_salidas,f
  1626  0593  2D92               	goto	u1007
  1627  0594  0BF1               	decfsz	??_salidas+1,f
  1628  0595  2D92               	goto	u1007
  1629                           
  1630                           ;Probador1.c: 324: break;
  1631  0596  0008               	return
  1632  0597                     l936:	
  1633                           ;Probador1.c: 325: case 3:
  1634                           
  1635                           
  1636                           ;Probador1.c: 326: PORTD = (1 << i);
  1637  0597  3001               	movlw	1
  1638  0598  00F0               	movwf	??_salidas
  1639  0599  0A72               	incf	salidas@i,w
  1640  059A  2D9D               	goto	u474
  1641  059B                     u475:	
  1642  059B  1003               	clrc
  1643  059C  0DF0               	rlf	??_salidas,f
  1644  059D                     u474:	
  1645  059D  3EFF               	addlw	-1
  1646  059E  1D03               	skipz
  1647  059F  2D9B               	goto	u475
  1648  05A0  0870               	movf	??_salidas,w
  1649  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1650  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1651  05A3  0088               	movwf	8	;volatile
  1652                           
  1653                           ;Probador1.c: 327: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1654  05A4  30C3               	movlw	195
  1655  05A5  00F1               	movwf	??_salidas+1
  1656  05A6  30CD               	movlw	205
  1657  05A7  00F0               	movwf	??_salidas
  1658  05A8                     u1017:	
  1659  05A8  0BF0               	decfsz	??_salidas,f
  1660  05A9  2DA8               	goto	u1017
  1661  05AA  0BF1               	decfsz	??_salidas+1,f
  1662  05AB  2DA8               	goto	u1017
  1663                           
  1664                           ;Probador1.c: 328: break;
  1665  05AC  0008               	return
  1666  05AD                     l940:	
  1667                           ;Probador1.c: 329: case 4:
  1668                           
  1669                           
  1670                           ;Probador1.c: 330: PORTE = (1 << i);
  1671  05AD  3001               	movlw	1
  1672  05AE  00F0               	movwf	??_salidas
  1673  05AF  0A72               	incf	salidas@i,w
  1674  05B0  2DB3               	goto	u484
  1675  05B1                     u485:	
  1676  05B1  1003               	clrc
  1677  05B2  0DF0               	rlf	??_salidas,f
  1678  05B3                     u484:	
  1679  05B3  3EFF               	addlw	-1
  1680  05B4  1D03               	skipz
  1681  05B5  2DB1               	goto	u485
  1682  05B6  0870               	movf	??_salidas,w
  1683  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1684  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1685  05B9  0089               	movwf	9	;volatile
  1686                           
  1687                           ;Probador1.c: 331: _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1688  05BA  30C3               	movlw	195
  1689  05BB  00F1               	movwf	??_salidas+1
  1690  05BC  30CD               	movlw	205
  1691  05BD  00F0               	movwf	??_salidas
  1692  05BE                     u1027:	
  1693  05BE  0BF0               	decfsz	??_salidas,f
  1694  05BF  2DBE               	goto	u1027
  1695  05C0  0BF1               	decfsz	??_salidas+1,f
  1696  05C1  2DBE               	goto	u1027
  1697                           
  1698                           ;Probador1.c: 333: }
  1699                           
  1700                           ;Probador1.c: 332: break;
  1701  05C2  0008               	return
  1702  05C3                     l946:	
  1703  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1704  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1705  05C5  0823               	movf	_puerto,w
  1706                           
  1707                           ; Switch size 1, requested type "space"
  1708                           ; Number of cases is 5, Range of values is 0 to 4
  1709                           ; switch strategies available:
  1710                           ; Name         Instructions Cycles
  1711                           ; simple_byte           16     9 (average)
  1712                           ; direct_byte           23     8 (fixed)
  1713                           ; jumptable            260     6 (fixed)
  1714                           ;	Chosen strategy is simple_byte
  1715  05C6  3A00               	xorlw	0	; case 0
  1716  05C7  1903               	skipnz
  1717  05C8  2D55               	goto	l924
  1718  05C9  3A01               	xorlw	1	; case 1
  1719  05CA  1903               	skipnz
  1720  05CB  2D6B               	goto	l928
  1721  05CC  3A03               	xorlw	3	; case 2
  1722  05CD  1903               	skipnz
  1723  05CE  2D81               	goto	l932
  1724  05CF  3A01               	xorlw	1	; case 3
  1725  05D0  1903               	skipnz
  1726  05D1  2D97               	goto	l936
  1727  05D2  3A07               	xorlw	7	; case 4
  1728  05D3  1903               	skipnz
  1729  05D4  2DAD               	goto	l940
  1730  05D5  2DD6               	goto	l178
  1731  05D6                     l178:	
  1732  05D6  0008               	return
  1733  05D7                     __end_of_salidas:	
  1734  007E                     btemp	set	126	;btemp
  1735  007E                     wtemp	set	126
  1736  007E                     wtemp0	set	126
  1737  0080                     wtemp1	set	128
  1738  0082                     wtemp2	set	130
  1739  0084                     wtemp3	set	132
  1740  0086                     wtemp4	set	134
  1741  0088                     wtemp5	set	136
  1742  007F                     wtemp6	set	127
  1743  007E                     ttemp	set	126
  1744  007E                     ttemp0	set	126
  1745  0081                     ttemp1	set	129
  1746  0084                     ttemp2	set	132
  1747  0087                     ttemp3	set	135
  1748  007F                     ttemp4	set	127
  1749  007E                     ltemp	set	126
  1750  007E                     ltemp0	set	126
  1751  0082                     ltemp1	set	130
  1752  0086                     ltemp2	set	134
  1753  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Prueba_sal
    _Prueba_sal->_salidas

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     276
                                              5 COMMON     8     8      0
                         _Prueba_sal
                       _port_conf_r1
                       _port_conf_r2
                          _porte_ent
                          _porte_sal
 ---------------------------------------------------------------------------------
 (1) _porte_sal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _porte_ent                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Prueba_sal                                           2     2      0     156
                                              3 COMMON     2     2      0
                            _salidas
 ---------------------------------------------------------------------------------
 (2) _salidas                                              3     3      0     110
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Prueba_sal
     _salidas
   _port_conf_r1
   _port_conf_r2
   _porte_ent
   _porte_sal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Apr 11 15:59:31 2025

            __CFG_CP$OFF 0000                       l70 060A                       l62 05EB  
                     l65 05EF                       l92 066D                       l85 0664  
                     l87 0661                       _xx 0024                      l101 06BB  
                    l103 06B8                      l140 0796                      l124 072B  
                    l108 06C4                      l133 078D                      l117 0722  
                    l135 0785                      l119 0712                      l178 05D6  
                    l940 05AD                      l932 0581                      l924 0555  
                    l936 0597                      l928 056B                      l946 05C3  
                    l982 05E8                      l968 0542                      l992 0604  
                    l994 0608                      l986 05F2                      _RE0 0048  
                    _RE1 0049                      _RE2 004A             __CFG_CPD$OFF 0000  
                    u444 055B                      u445 0559                      u454 0571  
                    u455 056F                      u464 0587                      u704 06E7  
                    u465 0585                      u705 06E5                      u474 059D  
                    u634 0690                      u475 059B                      u635 068E  
                    u484 05B3                      u564 063F                      u485 05B1  
                    u565 063D                      u907 0685                      u844 07B9  
                    u845 07B7                      u917 06D1                      u774 074E  
                    u775 074C                      u927 06DC                      u937 0738  
                    u947 0743                      u957 07A3                      u877 0629  
                    u967 07AE                      u887 0634                      u977 07E8  
                    u897 067A                      u987 0566                      u997 057C  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     l1010 0620  
                   l1002 0610                     l1100 0701                     l1022 064C  
                   l1120 072F                     l1104 0709                     l1032 065A  
                   l1106 070D                     l1132 075B                     l1028 0652  
                   l1070 06B6                     l1046 0671                     l1144 0777  
                   l1064 06AA                     l1162 079A                     l1138 0768  
                   l1082 06C8                     l1058 069D                     l1068 06B2  
                   l1180 07D0                     l1174 07C6                     l1094 06F4  
                   u1007 0592                     u1017 05A8                     u1027 05BE  
           __CFG_WRT$OFF 0000                     _caso 0020                     _main 05D7  
                   _mask 0021                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089            __CFG_PWRTE$ON 0000          __end_of_salidas 05D7  
                  main@i 0078                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F2             __end_of_main 07F2                   ??_main 0075  
                 _ADCON1 009F                   _prueba 0022                   _puerto 0023  
             _Prueba_sal 0541                ??_salidas 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 051A               __pbssBANK0 0020  
             __pmaintext 05D7              ?_Prueba_sal 0070       __size_of_porte_ent 0005  
     __size_of_porte_sal 0004               _incremento 007D                  __ptext1 051B  
                __ptext2 051F                  __ptext3 0524                  __ptext4 0532  
                __ptext5 0541                  __ptext6 0553                  _salidas 0553  
                _nro_pin 0026     end_of_initialization 07FC      __size_of_Prueba_sal 0012  
      __end_of_porte_ent 0524        __end_of_porte_sal 051F              Prueba_sal@i 0074  
          ?_port_conf_r1 0070            ?_port_conf_r2 0070      start_initialization 07F2  
         ??_port_conf_r1 0070           ??_port_conf_r2 0070              __pdataBANK0 0026  
           ??_Prueba_sal 0073              __pbssCOMMON 007D                ___latbits 0002  
              __pnvBANK0 0025       __end_of_Prueba_sal 0553                 ?_salidas 0070  
   __end_of_port_conf_r1 0541     __end_of_port_conf_r2 0532                _porte_ent 051F  
              _porte_sal 051B               ?_porte_ent 0070               ?_porte_sal 0070  
       __size_of_salidas 0084            __size_of_main 021B                 _port_act 0025  
               main@i_74 0079                 main@i_75 007A                 main@i_76 007B  
               main@i_77 007C                 salidas@i 0072    __size_of_port_conf_r1 000F  
  __size_of_port_conf_r2 000E              ??_porte_ent 0070              ??_porte_sal 0070  
           _port_conf_r1 0532             _port_conf_r2 0524  
