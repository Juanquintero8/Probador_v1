

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 24 23:33:59 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  0497                     __pidataBANK0:
   180                           
   181                           ;initializer for _nro_pin
   182  0497  3407               	retlw	7
   183                           
   184                           	psect	nvBANK0
   185  0025                     __pnvBANK0:
   186  0025                     _port_act:
   187  0025                     	ds	1
   188  0009                     _PORTE	set	9
   189  0008                     _PORTD	set	8
   190  0007                     _PORTC	set	7
   191  0006                     _PORTB	set	6
   192  0005                     _PORTA	set	5
   193  004A                     _RE2	set	74
   194  0049                     _RE1	set	73
   195  0048                     _RE0	set	72
   196  0089                     _TRISE	set	137
   197  009F                     _ADCON1	set	159
   198  0088                     _TRISD	set	136
   199  0087                     _TRISC	set	135
   200  0086                     _TRISB	set	134
   201  0085                     _TRISA	set	133
   202                           
   203                           	psect	cinit
   204  07F0                     start_initialization:	
   205                           ; #config settings
   206                           
   207  07F0                     __initialization:
   208                           
   209                           ; Initialize objects allocated to BANK0
   210  07F0  120A  118A  2497  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   211  07F5  00A6               	movwf	__pdataBANK0& (0+127)
   212                           
   213                           ; Clear objects allocated to BANK0
   214  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   215  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   216  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   217  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   218  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   219                           
   220                           ; Clear objects allocated to COMMON
   221  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2D35   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  007D                     __pbssCOMMON:
   231  007D                     _incremento:
   232  007D                     	ds	1
   233                           
   234                           	psect	bssBANK0
   235  0020                     __pbssBANK0:
   236  0020                     _caso:
   237  0020                     	ds	1
   238  0021                     _xx:
   239  0021                     	ds	1
   240  0022                     _prueba:
   241  0022                     	ds	1
   242  0023                     _mask:
   243  0023                     	ds	1
   244  0024                     _puerto:
   245  0024                     	ds	1
   246                           
   247                           	psect	dataBANK0
   248  0026                     __pdataBANK0:
   249  0026                     _nro_pin:
   250  0026                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_port_conf_r1:
   255  0070                     ??_port_conf_r1:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_porte_ent:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_porte_ent:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_Prueba_sal:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_port_conf_r2:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_port_conf_r2:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_porte_sal:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_porte_sal:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_salidas:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_salidas:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0070                     	ds	2
   291  0072                     salidas@i:
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     ??_Prueba_sal:
   296                           
   297                           ; 1 bytes @ 0x3
   298  0073                     	ds	1
   299  0074                     Prueba_sal@i:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	1
   303  0075                     ??_main:
   304                           
   305                           ; 1 bytes @ 0x5
   306  0075                     	ds	3
   307  0078                     main@i_81:
   308                           
   309                           ; 1 bytes @ 0x8
   310  0078                     	ds	1
   311  0079                     main@i_82:
   312                           
   313                           ; 1 bytes @ 0x9
   314  0079                     	ds	1
   315  007A                     main@i_83:
   316                           
   317                           ; 1 bytes @ 0xA
   318  007A                     	ds	1
   319  007B                     main@i_84:
   320                           
   321                           ; 1 bytes @ 0xB
   322  007B                     	ds	1
   323  007C                     main@i_85:
   324                           
   325                           ; 1 bytes @ 0xC
   326  007C                     	ds	1
   327                           
   328                           	psect	maintext
   329  0535                     __pmaintext:	
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 42 in file "Probador1.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  i               1   11[COMMON] unsigned char 
   340 ;;  i               1   10[COMMON] unsigned char 
   341 ;;  i               1    9[COMMON] unsigned char 
   342 ;;  i               1    8[COMMON] unsigned char 
   343 ;;  i               1    0        unsigned char 
   344 ;;  i               1   12[COMMON] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         5       0       0       0       0
   356 ;;      Temps:          3       0       0       0       0
   357 ;;      Totals:         8       0       0       0       0
   358 ;;Total ram usage:        8 bytes
   359 ;; Hardware stack levels required when called: 2
   360 ;; This function calls:
   361 ;;		_Prueba_sal
   362 ;;		_port_conf_r1
   363 ;;		_port_conf_r2
   364 ;;		_porte_ent
   365 ;;		_porte_sal
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371  0535                     _main:	
   372                           ;psect for function _main
   373                           
   374  0535                     l1193:	
   375                           ;incstack = 0
   376                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   377                           
   378                           
   379                           ;Probador1.c: 43:     port_conf_r1();
   380  0535  120A  118A  24AF  120A  118A  	fcall	_port_conf_r1
   381                           
   382                           ;Probador1.c: 44:     porte_ent();
   383  053A  120A  118A  249C  120A  118A  	fcall	_porte_ent
   384  053F                     l1195:
   385                           
   386                           ;Probador1.c: 45:     port_act = PORTA;
   387  053F  1283               	bcf	3,5	;RP0=0, select bank0
   388  0540  1303               	bcf	3,6	;RP1=0, select bank0
   389  0541  0805               	movf	5,w	;volatile
   390  0542  00F5               	movwf	??_main
   391  0543  0875               	movf	??_main,w
   392  0544  00A5               	movwf	_port_act
   393  0545                     l1197:
   394                           
   395                           ;Probador1.c: 46:     puerto = 0;
   396  0545  01A4               	clrf	_puerto
   397  0546  2D4D               	goto	l64
   398  0547                     l1199:
   399                           
   400                           ;Probador1.c: 52:             if (xx == 1) {
   401  0547  0321               	decf	_xx,w
   402  0548  1D03               	btfss	3,2
   403  0549  2D4B               	goto	u531
   404  054A  2D4C               	goto	u530
   405  054B                     u531:
   406  054B  2D4D               	goto	l64
   407  054C                     u530:
   408  054C  2D51               	goto	l67
   409  054D                     l64:	
   410                           ;Probador1.c: 56:         }
   411                           
   412                           
   413                           ;Probador1.c: 51:         while (RE0 == 0) {
   414  054D  1C09               	btfss	9,0	;volatile
   415  054E  2D50               	goto	u541
   416  054F  2D51               	goto	u540
   417  0550                     u541:
   418  0550  2D47               	goto	l1199
   419  0551                     u540:
   420  0551                     l67:
   421                           
   422                           ;Probador1.c: 57:         xx = 1;
   423  0551  01A1               	clrf	_xx
   424  0552  0AA1               	incf	_xx,f
   425                           
   426                           ;Probador1.c: 59:         switch (puerto) {
   427  0553  2F8B               	goto	l1403
   428  0554                     l1203:
   429                           
   430                           ;Probador1.c: 61:                 if (prueba == 0) {
   431  0554  0822               	movf	_prueba,w
   432  0555  1D03               	btfss	3,2
   433  0556  2D58               	goto	u551
   434  0557  2D59               	goto	u550
   435  0558                     u551:
   436  0558  2D7B               	goto	l1219
   437  0559                     u550:
   438  0559                     l1205:
   439                           
   440                           ;Probador1.c: 62:                     port_conf_r1();
   441  0559  120A  118A  24AF  120A  118A  	fcall	_port_conf_r1
   442                           
   443                           ;Probador1.c: 63:                     porte_ent();
   444  055E  120A  118A  249C  120A  118A  	fcall	_porte_ent
   445  0563                     l1207:
   446                           
   447                           ;Probador1.c: 64:                     Prueba_sal();
   448  0563  120A  118A  24BE  120A  118A  	fcall	_Prueba_sal
   449  0568                     l1209:
   450                           
   451                           ;Probador1.c: 66:                         if (RE1 == 1) {
   452  0568  1283               	bcf	3,5	;RP0=0, select bank0
   453  0569  1303               	bcf	3,6	;RP1=0, select bank0
   454  056A  1C89               	btfss	9,1	;volatile
   455  056B  2D6D               	goto	u561
   456  056C  2D6E               	goto	u560
   457  056D                     u561:
   458  056D  2D70               	goto	l72
   459  056E                     u560:
   460  056E                     l1211:
   461                           
   462                           ;Probador1.c: 67:                             puerto = 0;
   463  056E  01A4               	clrf	_puerto
   464                           
   465                           ;Probador1.c: 68:                             break;
   466  056F  2FA4               	goto	l1405
   467  0570                     l72:	
   468                           ;Probador1.c: 69:                         }
   469                           
   470                           
   471                           ;Probador1.c: 70:                         if (RE0 == 1) {
   472  0570  1C09               	btfss	9,0	;volatile
   473  0571  2D73               	goto	u571
   474  0572  2D74               	goto	u570
   475  0573                     u571:
   476  0573  2D68               	goto	l1209
   477  0574                     u570:
   478  0574                     l1213:
   479                           
   480                           ;Probador1.c: 71:                             puerto = 1;
   481  0574  01A4               	clrf	_puerto
   482  0575  0AA4               	incf	_puerto,f
   483  0576                     l1215:
   484                           
   485                           ;Probador1.c: 72:                             nro_pin = 9;
   486  0576  3009               	movlw	9
   487  0577  00F5               	movwf	??_main
   488  0578  0875               	movf	??_main,w
   489  0579  00A6               	movwf	_nro_pin
   490                           
   491                           ;Probador1.c: 73:                             break;
   492  057A  2FA4               	goto	l1405
   493  057B                     l1219:
   494                           
   495                           ;Probador1.c: 78:                     port_conf_r2();
   496  057B  120A  118A  24A1  120A  118A  	fcall	_port_conf_r2
   497  0580                     l1221:
   498                           
   499                           ;Probador1.c: 79:                     mask = 1;
   500  0580  1283               	bcf	3,5	;RP0=0, select bank0
   501  0581  1303               	bcf	3,6	;RP1=0, select bank0
   502  0582  01A3               	clrf	_mask
   503  0583  0AA3               	incf	_mask,f
   504  0584                     l1223:
   505                           
   506                           ;Probador1.c: 80:                     incremento = 1;
   507  0584  01FD               	clrf	_incremento
   508  0585  0AFD               	incf	_incremento,f
   509  0586                     l1225:
   510  0586  2DC2               	goto	l78
   511  0587                     l1227:
   512                           
   513                           ;Probador1.c: 83:                             if (PORTA & mask) {
   514  0587  0805               	movf	5,w	;volatile
   515  0588  0523               	andwf	_mask,w
   516  0589  1903               	btfsc	3,2
   517  058A  2D8C               	goto	u581
   518  058B  2D8D               	goto	u580
   519  058C                     u581:
   520  058C  2DB9               	goto	l1239
   521  058D                     u580:
   522  058D                     l1229:
   523                           
   524                           ;Probador1.c: 84:                                 RE2 = 1;
   525  058D  1509               	bsf	9,2	;volatile
   526  058E                     l1231:
   527                           
   528                           ;Probador1.c: 85:                                 _delay((unsigned long)((300)*(4000000U
      +                          L/4000.0)));
   529  058E  3002               	movlw	2
   530  058F  00F7               	movwf	??_main+2
   531  0590  3086               	movlw	134
   532  0591  00F6               	movwf	??_main+1
   533  0592  3099               	movlw	153
   534  0593  00F5               	movwf	??_main
   535  0594                     u937:
   536  0594  0BF5               	decfsz	??_main,f
   537  0595  2D94               	goto	u937
   538  0596  0BF6               	decfsz	??_main+1,f
   539  0597  2D94               	goto	u937
   540  0598  0BF7               	decfsz	??_main+2,f
   541  0599  2D94               	goto	u937
   542  059A                     l1233:
   543                           
   544                           ;Probador1.c: 86:                                 RE2 = 0;
   545  059A  1283               	bcf	3,5	;RP0=0, select bank0
   546  059B  1303               	bcf	3,6	;RP1=0, select bank0
   547  059C  1109               	bcf	9,2	;volatile
   548                           
   549                           ;Probador1.c: 87:                                 _delay((unsigned long)((50)*(4000000UL
      +                          /4000.0)));
   550  059D  3041               	movlw	65
   551  059E  00F6               	movwf	??_main+1
   552  059F  30EE               	movlw	238
   553  05A0  00F5               	movwf	??_main
   554  05A1                     u947:
   555  05A1  0BF5               	decfsz	??_main,f
   556  05A2  2DA1               	goto	u947
   557  05A3  0BF6               	decfsz	??_main+1,f
   558  05A4  2DA1               	goto	u947
   559  05A5  0000               	nop
   560  05A6                     l1235:
   561                           
   562                           ;Probador1.c: 88:                                 mask = (1 << incremento);
   563  05A6  3001               	movlw	1
   564  05A7  00F5               	movwf	??_main
   565  05A8  0A7D               	incf	_incremento,w
   566  05A9  2DAC               	goto	u594
   567  05AA                     u595:
   568  05AA  1003               	clrc
   569  05AB  0DF5               	rlf	??_main,f
   570  05AC                     u594:
   571  05AC  3EFF               	addlw	-1
   572  05AD  1D03               	skipz
   573  05AE  2DAA               	goto	u595
   574  05AF  0875               	movf	??_main,w
   575  05B0  00F6               	movwf	??_main+1
   576  05B1  0876               	movf	??_main+1,w
   577  05B2  1283               	bcf	3,5	;RP0=0, select bank0
   578  05B3  1303               	bcf	3,6	;RP1=0, select bank0
   579  05B4  00A3               	movwf	_mask
   580  05B5                     l1237:
   581                           
   582                           ;Probador1.c: 89:                                 incremento++;
   583  05B5  3001               	movlw	1
   584  05B6  00F5               	movwf	??_main
   585  05B7  0875               	movf	??_main,w
   586  05B8  07FD               	addwf	_incremento,f
   587  05B9                     l1239:
   588                           
   589                           ;Probador1.c: 91:                             if (incremento == 7) {
   590  05B9  3007               	movlw	7
   591  05BA  067D               	xorwf	_incremento,w
   592  05BB  1D03               	btfss	3,2
   593  05BC  2DBE               	goto	u601
   594  05BD  2DBF               	goto	u600
   595  05BE                     u601:
   596  05BE  2D87               	goto	l1227
   597  05BF                     u600:
   598  05BF                     l1241:
   599                           
   600                           ;Probador1.c: 92:                                 puerto = 1;
   601  05BF  01A4               	clrf	_puerto
   602  05C0  0AA4               	incf	_puerto,f
   603                           
   604                           ;Probador1.c: 93:                                 break;
   605  05C1  2FA4               	goto	l1405
   606  05C2                     l78:
   607  05C2  0826               	movf	_nro_pin,w
   608  05C3  1D03               	btfss	3,2
   609  05C4  2DC6               	goto	u611
   610  05C5  2DC7               	goto	u610
   611  05C6                     u611:
   612  05C6  2D87               	goto	l1227
   613  05C7                     u610:
   614  05C7  2FA4               	goto	l1405
   615  05C8                     l1245:
   616                           
   617                           ;Probador1.c: 104:                 if (prueba == 0) {
   618  05C8  0822               	movf	_prueba,w
   619  05C9  1D03               	btfss	3,2
   620  05CA  2DCC               	goto	u621
   621  05CB  2DCD               	goto	u620
   622  05CC                     u621:
   623  05CC  2DE2               	goto	l87
   624  05CD                     u620:
   625  05CD                     l1247:
   626                           
   627                           ;Probador1.c: 105:                     Prueba_sal();
   628  05CD  120A  118A  24BE  120A  118A  	fcall	_Prueba_sal
   629  05D2                     l1249:
   630                           
   631                           ;Probador1.c: 107:                         if (RE1 == 1) {
   632  05D2  1283               	bcf	3,5	;RP0=0, select bank0
   633  05D3  1303               	bcf	3,6	;RP1=0, select bank0
   634  05D4  1C89               	btfss	9,1	;volatile
   635  05D5  2DD7               	goto	u631
   636  05D6  2DD8               	goto	u630
   637  05D7                     u631:
   638  05D7  2DD9               	goto	l89
   639  05D8                     u630:
   640  05D8  2DBF               	goto	l1241
   641  05D9                     l89:	
   642                           ;Probador1.c: 110:                         }
   643                           
   644                           
   645                           ;Probador1.c: 111:                         if (RE0 == 1) {
   646  05D9  1C09               	btfss	9,0	;volatile
   647  05DA  2DDC               	goto	u641
   648  05DB  2DDD               	goto	u640
   649  05DC                     u641:
   650  05DC  2DD2               	goto	l1249
   651  05DD                     u640:
   652  05DD                     l1253:
   653                           
   654                           ;Probador1.c: 112:                             puerto = 2;
   655  05DD  3002               	movlw	2
   656  05DE  00F5               	movwf	??_main
   657  05DF  0875               	movf	??_main,w
   658  05E0  00A4               	movwf	_puerto
   659                           
   660                           ;Probador1.c: 113:                             break;
   661  05E1  2FA4               	goto	l1405
   662  05E2                     l87:
   663                           
   664                           ;Probador1.c: 118:                     incremento = 1;
   665  05E2  01FD               	clrf	_incremento
   666  05E3  0AFD               	incf	_incremento,f
   667  05E4                     l1257:
   668                           
   669                           ;Probador1.c: 119:                     nro_pin = 9;
   670  05E4  3009               	movlw	9
   671  05E5  00F5               	movwf	??_main
   672  05E6  0875               	movf	??_main,w
   673  05E7  00A6               	movwf	_nro_pin
   674  05E8                     l1259:
   675                           
   676                           ;Probador1.c: 120:                     mask = 1;
   677  05E8  01A3               	clrf	_mask
   678  05E9  0AA3               	incf	_mask,f
   679  05EA                     l1261:
   680                           
   681                           ;Probador1.c: 121:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
   682  05EA  01F8               	clrf	main@i_81
   683  05EB  2E2C               	goto	l94
   684  05EC                     l1263:
   685                           
   686                           ;Probador1.c: 123:                             if (PORTB & mask) {
   687  05EC  0806               	movf	6,w	;volatile
   688  05ED  0523               	andwf	_mask,w
   689  05EE  1903               	btfsc	3,2
   690  05EF  2DF1               	goto	u651
   691  05F0  2DF2               	goto	u650
   692  05F1                     u651:
   693  05F1  2E1E               	goto	l1275
   694  05F2                     u650:
   695  05F2                     l1265:
   696                           
   697                           ;Probador1.c: 124:                                 RE2 = 1;
   698  05F2  1509               	bsf	9,2	;volatile
   699  05F3                     l1267:
   700                           
   701                           ;Probador1.c: 125:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
   702  05F3  3002               	movlw	2
   703  05F4  00F7               	movwf	??_main+2
   704  05F5  3086               	movlw	134
   705  05F6  00F6               	movwf	??_main+1
   706  05F7  3099               	movlw	153
   707  05F8  00F5               	movwf	??_main
   708  05F9                     u957:
   709  05F9  0BF5               	decfsz	??_main,f
   710  05FA  2DF9               	goto	u957
   711  05FB  0BF6               	decfsz	??_main+1,f
   712  05FC  2DF9               	goto	u957
   713  05FD  0BF7               	decfsz	??_main+2,f
   714  05FE  2DF9               	goto	u957
   715  05FF                     l1269:
   716                           
   717                           ;Probador1.c: 126:                                 RE2 = 0;
   718  05FF  1283               	bcf	3,5	;RP0=0, select bank0
   719  0600  1303               	bcf	3,6	;RP1=0, select bank0
   720  0601  1109               	bcf	9,2	;volatile
   721                           
   722                           ;Probador1.c: 127:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
   723  0602  3041               	movlw	65
   724  0603  00F6               	movwf	??_main+1
   725  0604  30EE               	movlw	238
   726  0605  00F5               	movwf	??_main
   727  0606                     u967:
   728  0606  0BF5               	decfsz	??_main,f
   729  0607  2E06               	goto	u967
   730  0608  0BF6               	decfsz	??_main+1,f
   731  0609  2E06               	goto	u967
   732  060A  0000               	nop
   733  060B                     l1271:
   734                           
   735                           ;Probador1.c: 128:                                 mask = (1 << incremento);
   736  060B  3001               	movlw	1
   737  060C  00F5               	movwf	??_main
   738  060D  0A7D               	incf	_incremento,w
   739  060E  2E11               	goto	u664
   740  060F                     u665:
   741  060F  1003               	clrc
   742  0610  0DF5               	rlf	??_main,f
   743  0611                     u664:
   744  0611  3EFF               	addlw	-1
   745  0612  1D03               	skipz
   746  0613  2E0F               	goto	u665
   747  0614  0875               	movf	??_main,w
   748  0615  00F6               	movwf	??_main+1
   749  0616  0876               	movf	??_main+1,w
   750  0617  1283               	bcf	3,5	;RP0=0, select bank0
   751  0618  1303               	bcf	3,6	;RP1=0, select bank0
   752  0619  00A3               	movwf	_mask
   753  061A                     l1273:
   754                           
   755                           ;Probador1.c: 129:                                 incremento++;
   756  061A  3001               	movlw	1
   757  061B  00F5               	movwf	??_main
   758  061C  0875               	movf	??_main,w
   759  061D  07FD               	addwf	_incremento,f
   760  061E                     l1275:
   761                           
   762                           ;Probador1.c: 131:                             if (incremento == 9) {
   763  061E  3009               	movlw	9
   764  061F  067D               	xorwf	_incremento,w
   765  0620  1D03               	btfss	3,2
   766  0621  2E23               	goto	u671
   767  0622  2E24               	goto	u670
   768  0623                     u671:
   769  0623  2DEC               	goto	l1263
   770  0624                     u670:
   771  0624                     l1277:
   772                           
   773                           ;Probador1.c: 132:                                 puerto = 2;
   774  0624  3002               	movlw	2
   775  0625  00F5               	movwf	??_main
   776  0626  0875               	movf	??_main,w
   777  0627  00A4               	movwf	_puerto
   778  0628                     l1279:	
   779                           ;Probador1.c: 133:                                 break;
   780                           
   781                           
   782                           ;Probador1.c: 137:                     }
   783  0628  087D               	movf	_incremento,w
   784  0629  00F5               	movwf	??_main
   785  062A  0875               	movf	??_main,w
   786  062B  00F8               	movwf	main@i_81
   787  062C                     l94:
   788  062C  0826               	movf	_nro_pin,w
   789  062D  0278               	subwf	main@i_81,w
   790  062E  1C03               	skipc
   791  062F  2E31               	goto	u681
   792  0630  2E32               	goto	u680
   793  0631                     u681:
   794  0631  2DEC               	goto	l1263
   795  0632                     u680:
   796  0632  2FA4               	goto	l1405
   797  0633                     l1281:
   798                           
   799                           ;Probador1.c: 143:                 if (prueba == 0) {
   800  0633  0822               	movf	_prueba,w
   801  0634  1D03               	btfss	3,2
   802  0635  2E37               	goto	u691
   803  0636  2E38               	goto	u690
   804  0637                     u691:
   805  0637  2E4D               	goto	l103
   806  0638                     u690:
   807  0638                     l1283:
   808                           
   809                           ;Probador1.c: 144:                     Prueba_sal();
   810  0638  120A  118A  24BE  120A  118A  	fcall	_Prueba_sal
   811  063D                     l1285:
   812                           
   813                           ;Probador1.c: 146:                         if (RE1 == 1) {
   814  063D  1283               	bcf	3,5	;RP0=0, select bank0
   815  063E  1303               	bcf	3,6	;RP1=0, select bank0
   816  063F  1C89               	btfss	9,1	;volatile
   817  0640  2E42               	goto	u701
   818  0641  2E43               	goto	u700
   819  0642                     u701:
   820  0642  2E44               	goto	l105
   821  0643                     u700:
   822  0643  2DDD               	goto	l1253
   823  0644                     l105:	
   824                           ;Probador1.c: 149:                         }
   825                           
   826                           
   827                           ;Probador1.c: 150:                         if (RE0 == 1) {
   828  0644  1C09               	btfss	9,0	;volatile
   829  0645  2E47               	goto	u711
   830  0646  2E48               	goto	u710
   831  0647                     u711:
   832  0647  2E3D               	goto	l1285
   833  0648                     u710:
   834  0648                     l1289:
   835                           
   836                           ;Probador1.c: 151:                             puerto = 3;
   837  0648  3003               	movlw	3
   838  0649  00F5               	movwf	??_main
   839  064A  0875               	movf	??_main,w
   840  064B  00A4               	movwf	_puerto
   841                           
   842                           ;Probador1.c: 152:                             break;
   843  064C  2FA4               	goto	l1405
   844  064D                     l103:
   845                           
   846                           ;Probador1.c: 157:                     incremento = 1;
   847  064D  01FD               	clrf	_incremento
   848  064E  0AFD               	incf	_incremento,f
   849  064F                     l1293:
   850                           
   851                           ;Probador1.c: 158:                     nro_pin = 9;
   852  064F  3009               	movlw	9
   853  0650  00F5               	movwf	??_main
   854  0651  0875               	movf	??_main,w
   855  0652  00A6               	movwf	_nro_pin
   856  0653                     l1295:
   857                           
   858                           ;Probador1.c: 159:                     mask = 1;
   859  0653  01A3               	clrf	_mask
   860  0654  0AA3               	incf	_mask,f
   861  0655                     l1297:
   862                           
   863                           ;Probador1.c: 160:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
   864  0655  01F9               	clrf	main@i_82
   865  0656  2E97               	goto	l110
   866  0657                     l1299:
   867                           
   868                           ;Probador1.c: 162:                             if (PORTC & mask) {
   869  0657  0807               	movf	7,w	;volatile
   870  0658  0523               	andwf	_mask,w
   871  0659  1903               	btfsc	3,2
   872  065A  2E5C               	goto	u721
   873  065B  2E5D               	goto	u720
   874  065C                     u721:
   875  065C  2E89               	goto	l1311
   876  065D                     u720:
   877  065D                     l1301:
   878                           
   879                           ;Probador1.c: 163:                                 RE2 = 1;
   880  065D  1509               	bsf	9,2	;volatile
   881  065E                     l1303:
   882                           
   883                           ;Probador1.c: 164:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
   884  065E  3002               	movlw	2
   885  065F  00F7               	movwf	??_main+2
   886  0660  3086               	movlw	134
   887  0661  00F6               	movwf	??_main+1
   888  0662  3099               	movlw	153
   889  0663  00F5               	movwf	??_main
   890  0664                     u977:
   891  0664  0BF5               	decfsz	??_main,f
   892  0665  2E64               	goto	u977
   893  0666  0BF6               	decfsz	??_main+1,f
   894  0667  2E64               	goto	u977
   895  0668  0BF7               	decfsz	??_main+2,f
   896  0669  2E64               	goto	u977
   897  066A                     l1305:
   898                           
   899                           ;Probador1.c: 165:                                 RE2 = 0;
   900  066A  1283               	bcf	3,5	;RP0=0, select bank0
   901  066B  1303               	bcf	3,6	;RP1=0, select bank0
   902  066C  1109               	bcf	9,2	;volatile
   903                           
   904                           ;Probador1.c: 166:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
   905  066D  3041               	movlw	65
   906  066E  00F6               	movwf	??_main+1
   907  066F  30EE               	movlw	238
   908  0670  00F5               	movwf	??_main
   909  0671                     u987:
   910  0671  0BF5               	decfsz	??_main,f
   911  0672  2E71               	goto	u987
   912  0673  0BF6               	decfsz	??_main+1,f
   913  0674  2E71               	goto	u987
   914  0675  0000               	nop
   915  0676                     l1307:
   916                           
   917                           ;Probador1.c: 167:                                 mask = (1 << incremento);
   918  0676  3001               	movlw	1
   919  0677  00F5               	movwf	??_main
   920  0678  0A7D               	incf	_incremento,w
   921  0679  2E7C               	goto	u734
   922  067A                     u735:
   923  067A  1003               	clrc
   924  067B  0DF5               	rlf	??_main,f
   925  067C                     u734:
   926  067C  3EFF               	addlw	-1
   927  067D  1D03               	skipz
   928  067E  2E7A               	goto	u735
   929  067F  0875               	movf	??_main,w
   930  0680  00F6               	movwf	??_main+1
   931  0681  0876               	movf	??_main+1,w
   932  0682  1283               	bcf	3,5	;RP0=0, select bank0
   933  0683  1303               	bcf	3,6	;RP1=0, select bank0
   934  0684  00A3               	movwf	_mask
   935  0685                     l1309:
   936                           
   937                           ;Probador1.c: 168:                                 incremento++;
   938  0685  3001               	movlw	1
   939  0686  00F5               	movwf	??_main
   940  0687  0875               	movf	??_main,w
   941  0688  07FD               	addwf	_incremento,f
   942  0689                     l1311:
   943                           
   944                           ;Probador1.c: 170:                             if (incremento == 9) {
   945  0689  3009               	movlw	9
   946  068A  067D               	xorwf	_incremento,w
   947  068B  1D03               	btfss	3,2
   948  068C  2E8E               	goto	u741
   949  068D  2E8F               	goto	u740
   950  068E                     u741:
   951  068E  2E57               	goto	l1299
   952  068F                     u740:
   953  068F                     l1313:
   954                           
   955                           ;Probador1.c: 171:                                 puerto = 3;
   956  068F  3003               	movlw	3
   957  0690  00F5               	movwf	??_main
   958  0691  0875               	movf	??_main,w
   959  0692  00A4               	movwf	_puerto
   960  0693                     l1315:	
   961                           ;Probador1.c: 172:                                 break;
   962                           
   963                           
   964                           ;Probador1.c: 176:                     }
   965  0693  087D               	movf	_incremento,w
   966  0694  00F5               	movwf	??_main
   967  0695  0875               	movf	??_main,w
   968  0696  00F9               	movwf	main@i_82
   969  0697                     l110:
   970  0697  0826               	movf	_nro_pin,w
   971  0698  0279               	subwf	main@i_82,w
   972  0699  1C03               	skipc
   973  069A  2E9C               	goto	u751
   974  069B  2E9D               	goto	u750
   975  069C                     u751:
   976  069C  2E57               	goto	l1299
   977  069D                     u750:
   978  069D  2FA4               	goto	l1405
   979  069E                     l1317:
   980                           
   981                           ;Probador1.c: 181:                 if (prueba == 0) {
   982  069E  0822               	movf	_prueba,w
   983  069F  1D03               	btfss	3,2
   984  06A0  2EA2               	goto	u761
   985  06A1  2EA3               	goto	u760
   986  06A2                     u761:
   987  06A2  2EC1               	goto	l119
   988  06A3                     u760:
   989  06A3                     l1319:
   990                           
   991                           ;Probador1.c: 182:                     Prueba_sal();
   992  06A3  120A  118A  24BE  120A  118A  	fcall	_Prueba_sal
   993  06A8                     l1321:
   994                           
   995                           ;Probador1.c: 184:                         if (RE1 == 1) {
   996  06A8  1283               	bcf	3,5	;RP0=0, select bank0
   997  06A9  1303               	bcf	3,6	;RP1=0, select bank0
   998  06AA  1C89               	btfss	9,1	;volatile
   999  06AB  2EAD               	goto	u771
  1000  06AC  2EAE               	goto	u770
  1001  06AD                     u771:
  1002  06AD  2EAF               	goto	l121
  1003  06AE                     u770:
  1004  06AE  2E48               	goto	l1289
  1005  06AF                     l121:	
  1006                           ;Probador1.c: 187:                         }
  1007                           
  1008                           
  1009                           ;Probador1.c: 188:                         if (RE0 == 1) {
  1010  06AF  1C09               	btfss	9,0	;volatile
  1011  06B0  2EB2               	goto	u781
  1012  06B1  2EB3               	goto	u780
  1013  06B2                     u781:
  1014  06B2  2EA8               	goto	l1321
  1015  06B3                     u780:
  1016  06B3                     l1325:
  1017                           
  1018                           ;Probador1.c: 189:                             puerto = 4;
  1019  06B3  3004               	movlw	4
  1020  06B4  00F5               	movwf	??_main
  1021  06B5  0875               	movf	??_main,w
  1022  06B6  00A4               	movwf	_puerto
  1023                           
  1024                           ;Probador1.c: 190:                             nro_pin = 4;
  1025  06B7  3004               	movlw	4
  1026  06B8  00F5               	movwf	??_main
  1027  06B9  0875               	movf	??_main,w
  1028  06BA  00A6               	movwf	_nro_pin
  1029  06BB                     l1327:
  1030                           
  1031                           ;Probador1.c: 191:                             porte_sal();
  1032  06BB  120A  118A  2498  120A  118A  	fcall	_porte_sal
  1033                           
  1034                           ;Probador1.c: 192:                             break;
  1035  06C0  2FA4               	goto	l1405
  1036  06C1                     l119:
  1037                           
  1038                           ;Probador1.c: 197:                     incremento = 1;
  1039  06C1  01FD               	clrf	_incremento
  1040  06C2  0AFD               	incf	_incremento,f
  1041  06C3                     l1331:
  1042                           
  1043                           ;Probador1.c: 198:                     nro_pin = 9;
  1044  06C3  3009               	movlw	9
  1045  06C4  00F5               	movwf	??_main
  1046  06C5  0875               	movf	??_main,w
  1047  06C6  00A6               	movwf	_nro_pin
  1048  06C7                     l1333:
  1049                           
  1050                           ;Probador1.c: 199:                     mask = 1;
  1051  06C7  01A3               	clrf	_mask
  1052  06C8  0AA3               	incf	_mask,f
  1053  06C9                     l1335:
  1054                           
  1055                           ;Probador1.c: 200:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
  1056  06C9  01FA               	clrf	main@i_83
  1057  06CA  2F0B               	goto	l126
  1058  06CB                     l1337:
  1059                           
  1060                           ;Probador1.c: 202:                             if (PORTD & mask) {
  1061  06CB  0808               	movf	8,w	;volatile
  1062  06CC  0523               	andwf	_mask,w
  1063  06CD  1903               	btfsc	3,2
  1064  06CE  2ED0               	goto	u791
  1065  06CF  2ED1               	goto	u790
  1066  06D0                     u791:
  1067  06D0  2EFD               	goto	l1349
  1068  06D1                     u790:
  1069  06D1                     l1339:
  1070                           
  1071                           ;Probador1.c: 203:                                 RE2 = 1;
  1072  06D1  1509               	bsf	9,2	;volatile
  1073  06D2                     l1341:
  1074                           
  1075                           ;Probador1.c: 204:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
  1076  06D2  3002               	movlw	2
  1077  06D3  00F7               	movwf	??_main+2
  1078  06D4  3086               	movlw	134
  1079  06D5  00F6               	movwf	??_main+1
  1080  06D6  3099               	movlw	153
  1081  06D7  00F5               	movwf	??_main
  1082  06D8                     u997:
  1083  06D8  0BF5               	decfsz	??_main,f
  1084  06D9  2ED8               	goto	u997
  1085  06DA  0BF6               	decfsz	??_main+1,f
  1086  06DB  2ED8               	goto	u997
  1087  06DC  0BF7               	decfsz	??_main+2,f
  1088  06DD  2ED8               	goto	u997
  1089  06DE                     l1343:
  1090                           
  1091                           ;Probador1.c: 205:                                 RE2 = 0;
  1092  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1093  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1094  06E0  1109               	bcf	9,2	;volatile
  1095                           
  1096                           ;Probador1.c: 206:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
  1097  06E1  3041               	movlw	65
  1098  06E2  00F6               	movwf	??_main+1
  1099  06E3  30EE               	movlw	238
  1100  06E4  00F5               	movwf	??_main
  1101  06E5                     u1007:
  1102  06E5  0BF5               	decfsz	??_main,f
  1103  06E6  2EE5               	goto	u1007
  1104  06E7  0BF6               	decfsz	??_main+1,f
  1105  06E8  2EE5               	goto	u1007
  1106  06E9  0000               	nop
  1107  06EA                     l1345:
  1108                           
  1109                           ;Probador1.c: 207:                                 mask = (1 << incremento);
  1110  06EA  3001               	movlw	1
  1111  06EB  00F5               	movwf	??_main
  1112  06EC  0A7D               	incf	_incremento,w
  1113  06ED  2EF0               	goto	u804
  1114  06EE                     u805:
  1115  06EE  1003               	clrc
  1116  06EF  0DF5               	rlf	??_main,f
  1117  06F0                     u804:
  1118  06F0  3EFF               	addlw	-1
  1119  06F1  1D03               	skipz
  1120  06F2  2EEE               	goto	u805
  1121  06F3  0875               	movf	??_main,w
  1122  06F4  00F6               	movwf	??_main+1
  1123  06F5  0876               	movf	??_main+1,w
  1124  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1125  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1126  06F8  00A3               	movwf	_mask
  1127  06F9                     l1347:
  1128                           
  1129                           ;Probador1.c: 208:                                 incremento++;
  1130  06F9  3001               	movlw	1
  1131  06FA  00F5               	movwf	??_main
  1132  06FB  0875               	movf	??_main,w
  1133  06FC  07FD               	addwf	_incremento,f
  1134  06FD                     l1349:
  1135                           
  1136                           ;Probador1.c: 210:                             if (incremento == 9) {
  1137  06FD  3009               	movlw	9
  1138  06FE  067D               	xorwf	_incremento,w
  1139  06FF  1D03               	btfss	3,2
  1140  0700  2F02               	goto	u811
  1141  0701  2F03               	goto	u810
  1142  0702                     u811:
  1143  0702  2ECB               	goto	l1337
  1144  0703                     u810:
  1145  0703                     l1351:
  1146                           
  1147                           ;Probador1.c: 211:                                 puerto = 4;
  1148  0703  3004               	movlw	4
  1149  0704  00F5               	movwf	??_main
  1150  0705  0875               	movf	??_main,w
  1151  0706  00A4               	movwf	_puerto
  1152  0707                     l1353:	
  1153                           ;Probador1.c: 212:                                 break;
  1154                           
  1155                           
  1156                           ;Probador1.c: 216:                     }
  1157  0707  087D               	movf	_incremento,w
  1158  0708  00F5               	movwf	??_main
  1159  0709  0875               	movf	??_main,w
  1160  070A  00FA               	movwf	main@i_83
  1161  070B                     l126:
  1162  070B  0826               	movf	_nro_pin,w
  1163  070C  027A               	subwf	main@i_83,w
  1164  070D  1C03               	skipc
  1165  070E  2F10               	goto	u821
  1166  070F  2F11               	goto	u820
  1167  0710                     u821:
  1168  0710  2ECB               	goto	l1337
  1169  0711                     u820:
  1170  0711  2FA4               	goto	l1405
  1171  0712                     l1355:
  1172                           
  1173                           ;Probador1.c: 221:                 if (prueba == 0) {
  1174  0712  0822               	movf	_prueba,w
  1175  0713  1D03               	btfss	3,2
  1176  0714  2F16               	goto	u831
  1177  0715  2F17               	goto	u830
  1178  0716                     u831:
  1179  0716  2F38               	goto	l135
  1180  0717                     u830:
  1181  0717                     l1357:
  1182                           
  1183                           ;Probador1.c: 222:                     Prueba_sal();
  1184  0717  120A  118A  24BE  120A  118A  	fcall	_Prueba_sal
  1185  071C                     l1359:
  1186                           
  1187                           ;Probador1.c: 223:                     porte_ent();
  1188  071C  120A  118A  249C  120A  118A  	fcall	_porte_ent
  1189  0721                     l1361:
  1190                           
  1191                           ;Probador1.c: 225:                         if (RE1 == 1) {
  1192  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0723  1C89               	btfss	9,1	;volatile
  1195  0724  2F26               	goto	u841
  1196  0725  2F27               	goto	u840
  1197  0726                     u841:
  1198  0726  2F2C               	goto	l137
  1199  0727                     u840:
  1200  0727                     l1363:
  1201                           
  1202                           ;Probador1.c: 226:                             puerto = 4;
  1203  0727  3004               	movlw	4
  1204  0728  00F5               	movwf	??_main
  1205  0729  0875               	movf	??_main,w
  1206  072A  00A4               	movwf	_puerto
  1207  072B  2EBB               	goto	l1327
  1208  072C                     l137:	
  1209                           ;Probador1.c: 229:                         }
  1210                           
  1211                           
  1212                           ;Probador1.c: 230:                         if (RE0 == 1) {
  1213  072C  1C09               	btfss	9,0	;volatile
  1214  072D  2F2F               	goto	u851
  1215  072E  2F30               	goto	u850
  1216  072F                     u851:
  1217  072F  2F21               	goto	l1361
  1218  0730                     u850:
  1219  0730                     l1367:
  1220                           
  1221                           ;Probador1.c: 231:                             puerto = 0;
  1222  0730  01A4               	clrf	_puerto
  1223  0731                     l1369:
  1224                           
  1225                           ;Probador1.c: 232:                             prueba = 1;
  1226  0731  01A2               	clrf	_prueba
  1227  0732  0AA2               	incf	_prueba,f
  1228  0733                     l1371:
  1229                           
  1230                           ;Probador1.c: 233:                             nro_pin = 7;
  1231  0733  3007               	movlw	7
  1232  0734  00F5               	movwf	??_main
  1233  0735  0875               	movf	??_main,w
  1234  0736  00A6               	movwf	_nro_pin
  1235                           
  1236                           ;Probador1.c: 234:                             break;
  1237  0737  2FA4               	goto	l1405
  1238  0738                     l135:
  1239                           
  1240                           ;Probador1.c: 239:                     incremento = 1;
  1241  0738  01FD               	clrf	_incremento
  1242  0739  0AFD               	incf	_incremento,f
  1243  073A                     l1375:
  1244                           
  1245                           ;Probador1.c: 240:                     nro_pin = 3;
  1246  073A  3003               	movlw	3
  1247  073B  00F5               	movwf	??_main
  1248  073C  0875               	movf	??_main,w
  1249  073D  00A6               	movwf	_nro_pin
  1250  073E                     l1377:
  1251                           
  1252                           ;Probador1.c: 241:                     mask = 1;
  1253  073E  01A3               	clrf	_mask
  1254  073F  0AA3               	incf	_mask,f
  1255  0740                     l1379:
  1256                           
  1257                           ;Probador1.c: 242:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
  1258  0740  01FB               	clrf	main@i_84
  1259  0741  2F84               	goto	l142
  1260  0742                     l1381:
  1261                           
  1262                           ;Probador1.c: 244:                             if (PORTE & mask) {
  1263  0742  0809               	movf	9,w	;volatile
  1264  0743  0523               	andwf	_mask,w
  1265  0744  1903               	btfsc	3,2
  1266  0745  2F47               	goto	u861
  1267  0746  2F48               	goto	u860
  1268  0747                     u861:
  1269  0747  2F74               	goto	l1393
  1270  0748                     u860:
  1271  0748                     l1383:
  1272                           
  1273                           ;Probador1.c: 245:                                 RE2 = 1;
  1274  0748  1509               	bsf	9,2	;volatile
  1275  0749                     l1385:
  1276                           
  1277                           ;Probador1.c: 246:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
  1278  0749  3002               	movlw	2
  1279  074A  00F7               	movwf	??_main+2
  1280  074B  3086               	movlw	134
  1281  074C  00F6               	movwf	??_main+1
  1282  074D  3099               	movlw	153
  1283  074E  00F5               	movwf	??_main
  1284  074F                     u1017:
  1285  074F  0BF5               	decfsz	??_main,f
  1286  0750  2F4F               	goto	u1017
  1287  0751  0BF6               	decfsz	??_main+1,f
  1288  0752  2F4F               	goto	u1017
  1289  0753  0BF7               	decfsz	??_main+2,f
  1290  0754  2F4F               	goto	u1017
  1291  0755                     l1387:
  1292                           
  1293                           ;Probador1.c: 247:                                 RE2 = 0;
  1294  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0757  1109               	bcf	9,2	;volatile
  1297                           
  1298                           ;Probador1.c: 248:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
  1299  0758  3041               	movlw	65
  1300  0759  00F6               	movwf	??_main+1
  1301  075A  30EE               	movlw	238
  1302  075B  00F5               	movwf	??_main
  1303  075C                     u1027:
  1304  075C  0BF5               	decfsz	??_main,f
  1305  075D  2F5C               	goto	u1027
  1306  075E  0BF6               	decfsz	??_main+1,f
  1307  075F  2F5C               	goto	u1027
  1308  0760  0000               	nop
  1309  0761                     l1389:
  1310                           
  1311                           ;Probador1.c: 249:                                 mask = (1 << incremento);
  1312  0761  3001               	movlw	1
  1313  0762  00F5               	movwf	??_main
  1314  0763  0A7D               	incf	_incremento,w
  1315  0764  2F67               	goto	u874
  1316  0765                     u875:
  1317  0765  1003               	clrc
  1318  0766  0DF5               	rlf	??_main,f
  1319  0767                     u874:
  1320  0767  3EFF               	addlw	-1
  1321  0768  1D03               	skipz
  1322  0769  2F65               	goto	u875
  1323  076A  0875               	movf	??_main,w
  1324  076B  00F6               	movwf	??_main+1
  1325  076C  0876               	movf	??_main+1,w
  1326  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1327  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1328  076F  00A3               	movwf	_mask
  1329  0770                     l1391:
  1330                           
  1331                           ;Probador1.c: 250:                                 incremento++;
  1332  0770  3001               	movlw	1
  1333  0771  00F5               	movwf	??_main
  1334  0772  0875               	movf	??_main,w
  1335  0773  07FD               	addwf	_incremento,f
  1336  0774                     l1393:
  1337                           
  1338                           ;Probador1.c: 252:                             if (incremento == 4) {
  1339  0774  3004               	movlw	4
  1340  0775  067D               	xorwf	_incremento,w
  1341  0776  1D03               	btfss	3,2
  1342  0777  2F79               	goto	u881
  1343  0778  2F7A               	goto	u880
  1344  0779                     u881:
  1345  0779  2F42               	goto	l1381
  1346  077A                     u880:
  1347  077A                     l1395:
  1348                           
  1349                           ;Probador1.c: 253:                                 puerto = 0;
  1350  077A  01A4               	clrf	_puerto
  1351  077B                     l1397:
  1352                           
  1353                           ;Probador1.c: 254:                                 nro_pin = 7;
  1354  077B  3007               	movlw	7
  1355  077C  00F5               	movwf	??_main
  1356  077D  0875               	movf	??_main,w
  1357  077E  00A6               	movwf	_nro_pin
  1358  077F                     l1399:
  1359                           
  1360                           ;Probador1.c: 255:                                 prueba = 2;
  1361  077F  3002               	movlw	2
  1362  0780  00F5               	movwf	??_main
  1363  0781  0875               	movf	??_main,w
  1364  0782  00A2               	movwf	_prueba
  1365                           
  1366                           ;Probador1.c: 256:                                 break;
  1367  0783  2FA4               	goto	l1405
  1368  0784                     l142:
  1369  0784  0826               	movf	_nro_pin,w
  1370  0785  027B               	subwf	main@i_84,w
  1371  0786  1C03               	skipc
  1372  0787  2F89               	goto	u891
  1373  0788  2F8A               	goto	u890
  1374  0789                     u891:
  1375  0789  2F42               	goto	l1381
  1376  078A                     u890:
  1377  078A  2FA4               	goto	l1405
  1378  078B                     l1403:
  1379  078B  0824               	movf	_puerto,w
  1380  078C  00F5               	movwf	??_main
  1381  078D  01F6               	clrf	??_main+1
  1382                           
  1383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 1, Range of values is 0 to 0
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte            4     3 (average)
  1389                           ; direct_byte           11     8 (fixed)
  1390                           ; jumptable            260     6 (fixed)
  1391                           ;	Chosen strategy is simple_byte
  1392  078E  0876               	movf	??_main+1,w
  1393  078F  3A00               	xorlw	0	; case 0
  1394  0790  1903               	skipnz
  1395  0791  2F93               	goto	l1471
  1396  0792  2FA4               	goto	l1405
  1397  0793                     l1471:
  1398                           
  1399                           ; Switch size 1, requested type "simple"
  1400                           ; Number of cases is 5, Range of values is 0 to 4
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte           16     9 (average)
  1404                           ; direct_byte           23     8 (fixed)
  1405                           ; jumptable            260     6 (fixed)
  1406                           ;	Chosen strategy is simple_byte
  1407  0793  0875               	movf	??_main,w
  1408  0794  3A00               	xorlw	0	; case 0
  1409  0795  1903               	skipnz
  1410  0796  2D54               	goto	l1203
  1411  0797  3A01               	xorlw	1	; case 1
  1412  0798  1903               	skipnz
  1413  0799  2DC8               	goto	l1245
  1414  079A  3A03               	xorlw	3	; case 2
  1415  079B  1903               	skipnz
  1416  079C  2E33               	goto	l1281
  1417  079D  3A01               	xorlw	1	; case 3
  1418  079E  1903               	skipnz
  1419  079F  2E9E               	goto	l1317
  1420  07A0  3A07               	xorlw	7	; case 4
  1421  07A1  1903               	skipnz
  1422  07A2  2F12               	goto	l1355
  1423  07A3  2FA4               	goto	l1405
  1424  07A4                     l1405:
  1425                           
  1426                           ;Probador1.c: 264:         if (prueba == 2) {
  1427  07A4  3002               	movlw	2
  1428  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1429  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1430  07A7  0622               	xorwf	_prueba,w
  1431  07A8  1D03               	btfss	3,2
  1432  07A9  2FAB               	goto	u901
  1433  07AA  2FAC               	goto	u900
  1434  07AB                     u901:
  1435  07AB  2D4D               	goto	l64
  1436  07AC                     u900:
  1437  07AC                     l1407:
  1438                           
  1439                           ;Probador1.c: 265:             port_conf_r1();
  1440  07AC  120A  118A  24AF  120A  118A  	fcall	_port_conf_r1
  1441  07B1                     l1409:
  1442                           
  1443                           ;Probador1.c: 266:             porte_sal();
  1444  07B1  120A  118A  2498  120A  118A  	fcall	_porte_sal
  1445                           
  1446                           ;Probador1.c: 267:             for (unsigned char i; i < 3; i++) {
  1447  07B6  3003               	movlw	3
  1448  07B7  027C               	subwf	main@i_85,w
  1449  07B8  1C03               	skipc
  1450  07B9  2FBB               	goto	u911
  1451  07BA  2FBC               	goto	u910
  1452  07BB                     u911:
  1453  07BB  2FBD               	goto	l1413
  1454  07BC                     u910:
  1455  07BC  2FE8               	goto	l1423
  1456  07BD                     l1413:
  1457                           
  1458                           ;Probador1.c: 268:                 PORTE = 0xFF;
  1459  07BD  30FF               	movlw	255
  1460  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1461  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1462  07C0  0089               	movwf	9	;volatile
  1463                           
  1464                           ;Probador1.c: 269:                 _delay((unsigned long)((1000)*(4000000UL/4000.0)));
  1465  07C1  3006               	movlw	6
  1466  07C2  00F7               	movwf	??_main+2
  1467  07C3  3013               	movlw	19
  1468  07C4  00F6               	movwf	??_main+1
  1469  07C5  30AD               	movlw	173
  1470  07C6  00F5               	movwf	??_main
  1471  07C7                     u1037:
  1472  07C7  0BF5               	decfsz	??_main,f
  1473  07C8  2FC7               	goto	u1037
  1474  07C9  0BF6               	decfsz	??_main+1,f
  1475  07CA  2FC7               	goto	u1037
  1476  07CB  0BF7               	decfsz	??_main+2,f
  1477  07CC  2FC7               	goto	u1037
  1478  07CD  2FCE               	nop2
  1479  07CE                     l1415:
  1480                           
  1481                           ;Probador1.c: 270:                 PORTE = 0;
  1482  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1483  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1484  07D0  0189               	clrf	9	;volatile
  1485  07D1                     l1417:
  1486                           
  1487                           ;Probador1.c: 271:                 _delay((unsigned long)((1000)*(4000000UL/4000.0)));
  1488  07D1  3006               	movlw	6
  1489  07D2  00F7               	movwf	??_main+2
  1490  07D3  3013               	movlw	19
  1491  07D4  00F6               	movwf	??_main+1
  1492  07D5  30AD               	movlw	173
  1493  07D6  00F5               	movwf	??_main
  1494  07D7                     u1047:
  1495  07D7  0BF5               	decfsz	??_main,f
  1496  07D8  2FD7               	goto	u1047
  1497  07D9  0BF6               	decfsz	??_main+1,f
  1498  07DA  2FD7               	goto	u1047
  1499  07DB  0BF7               	decfsz	??_main+2,f
  1500  07DC  2FD7               	goto	u1047
  1501  07DD  2FDE               	nop2
  1502  07DE                     l1419:
  1503                           
  1504                           ;Probador1.c: 273:             }
  1505  07DE  3001               	movlw	1
  1506  07DF  00F5               	movwf	??_main
  1507  07E0  0875               	movf	??_main,w
  1508  07E1  07FC               	addwf	main@i_85,f
  1509  07E2                     l1421:
  1510  07E2  3003               	movlw	3
  1511  07E3  027C               	subwf	main@i_85,w
  1512  07E4  1C03               	skipc
  1513  07E5  2FE7               	goto	u921
  1514  07E6  2FE8               	goto	u920
  1515  07E7                     u921:
  1516  07E7  2FBD               	goto	l1413
  1517  07E8                     u920:
  1518  07E8                     l1423:
  1519                           
  1520                           ;Probador1.c: 274:             prueba = 0;
  1521  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1522  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1523  07EA  01A2               	clrf	_prueba
  1524                           
  1525                           ;Probador1.c: 275:             xx = 0;
  1526  07EB  01A1               	clrf	_xx
  1527  07EC  2D4D               	goto	l64
  1528  07ED  120A  118A  2800   	ljmp	start
  1529  07F0                     __end_of_main:
  1530                           
  1531                           	psect	text1
  1532  0498                     __ptext1:	
  1533 ;; *************** function _porte_sal *****************
  1534 ;; Defined at:
  1535 ;;		line 321 in file "Probador1.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562  0498                     _porte_sal:	
  1563                           ;psect for function _porte_sal
  1564                           
  1565  0498                     l1191:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _porte_sal: [status,2]
  1568                           
  1569                           
  1570                           ;Probador1.c: 322:     TRISE = 0b00000000;
  1571  0498  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0499  1303               	bcf	3,6	;RP1=0, select bank1
  1573  049A  0189               	clrf	9	;volatile
  1574  049B                     l167:
  1575  049B  0008               	return
  1576  049C                     __end_of_porte_sal:
  1577                           
  1578                           	psect	text2
  1579  049C                     __ptext2:	
  1580 ;; *************** function _porte_ent *****************
  1581 ;; Defined at:
  1582 ;;		line 317 in file "Probador1.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609  049C                     _porte_ent:	
  1610                           ;psect for function _porte_ent
  1611                           
  1612  049C                     l1177:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _porte_ent: [wreg]
  1615                           
  1616                           
  1617                           ;Probador1.c: 318:     TRISE = 0b00000011;
  1618  049C  3003               	movlw	3
  1619  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1620  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1621  049F  0089               	movwf	9	;volatile
  1622  04A0                     l164:
  1623  04A0  0008               	return
  1624  04A1                     __end_of_porte_ent:
  1625                           
  1626                           	psect	text3
  1627  04A1                     __ptext3:	
  1628 ;; *************** function _port_conf_r2 *****************
  1629 ;; Defined at:
  1630 ;;		line 297 in file "Probador1.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657  04A1                     _port_conf_r2:	
  1658                           ;psect for function _port_conf_r2
  1659                           
  1660  04A1                     l1187:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _port_conf_r2: [wreg+status,2]
  1663                           
  1664                           
  1665                           ;Probador1.c: 298:     TRISA = 0xFF;
  1666  04A1  30FF               	movlw	255
  1667  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  1668  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  1669  04A4  0085               	movwf	5	;volatile
  1670                           
  1671                           ;Probador1.c: 299:     TRISB = 0xFF;
  1672  04A5  30FF               	movlw	255
  1673  04A6  0086               	movwf	6	;volatile
  1674                           
  1675                           ;Probador1.c: 300:     TRISC = 0xFF;
  1676  04A7  30FF               	movlw	255
  1677  04A8  0087               	movwf	7	;volatile
  1678                           
  1679                           ;Probador1.c: 301:     TRISD = 0xFF;
  1680  04A9  30FF               	movlw	255
  1681  04AA  0088               	movwf	8	;volatile
  1682  04AB                     l1189:
  1683                           
  1684                           ;Probador1.c: 302:     PORTE = 0x00;
  1685  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1686  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1687  04AD  0189               	clrf	9	;volatile
  1688  04AE                     l158:
  1689  04AE  0008               	return
  1690  04AF                     __end_of_port_conf_r2:
  1691                           
  1692                           	psect	text4
  1693  04AF                     __ptext4:	
  1694 ;; *************** function _port_conf_r1 *****************
  1695 ;; Defined at:
  1696 ;;		line 305 in file "Probador1.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723  04AF                     _port_conf_r1:	
  1724                           ;psect for function _port_conf_r1
  1725                           
  1726  04AF                     l1165:	
  1727                           ;incstack = 0
  1728                           ; Regs used in _port_conf_r1: [wreg+status,2]
  1729                           
  1730                           
  1731                           ;Probador1.c: 306:     TRISA = 0b00000000;
  1732  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1733  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1734  04B1  0185               	clrf	5	;volatile
  1735                           
  1736                           ;Probador1.c: 307:     TRISB = 0b00000000;
  1737  04B2  0186               	clrf	6	;volatile
  1738                           
  1739                           ;Probador1.c: 308:     TRISC = 0b00000000;
  1740  04B3  0187               	clrf	7	;volatile
  1741                           
  1742                           ;Probador1.c: 309:     TRISD = 0b00000000;
  1743  04B4  0188               	clrf	8	;volatile
  1744  04B5                     l1167:
  1745                           
  1746                           ;Probador1.c: 310:     ADCON1 = 0b00000111;
  1747  04B5  3007               	movlw	7
  1748  04B6  009F               	movwf	31	;volatile
  1749  04B7                     l1169:
  1750                           
  1751                           ;Probador1.c: 311:     PORTB = 0;
  1752  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1753  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1754  04B9  0186               	clrf	6	;volatile
  1755  04BA                     l1171:
  1756                           
  1757                           ;Probador1.c: 312:     PORTC = 0;
  1758  04BA  0187               	clrf	7	;volatile
  1759  04BB                     l1173:
  1760                           
  1761                           ;Probador1.c: 313:     PORTD = 0;
  1762  04BB  0188               	clrf	8	;volatile
  1763  04BC                     l1175:
  1764                           
  1765                           ;Probador1.c: 314:     PORTE = 0;
  1766  04BC  0189               	clrf	9	;volatile
  1767  04BD                     l161:
  1768  04BD  0008               	return
  1769  04BE                     __end_of_port_conf_r1:
  1770                           
  1771                           	psect	text5
  1772  04BE                     __ptext5:	
  1773 ;; *************** function _Prueba_sal *****************
  1774 ;; Defined at:
  1775 ;;		line 325 in file "Probador1.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  i               1    4[COMMON] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         1       0       0       0       0
  1791 ;;      Temps:          1       0       0       0       0
  1792 ;;      Totals:         2       0       0       0       0
  1793 ;;Total ram usage:        2 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 1
  1796 ;; This function calls:
  1797 ;;		_salidas
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803  04BE                     _Prueba_sal:	
  1804                           ;psect for function _Prueba_sal
  1805                           
  1806  04BE                     l1179:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _Prueba_sal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1809                           
  1810                           
  1811                           ;Probador1.c: 326:     for (unsigned char i = 0; i < nro_pin; i++) {
  1812  04BE  01F4               	clrf	Prueba_sal@i
  1813  04BF  2CCA               	goto	l1185
  1814  04C0                     l1181:
  1815                           
  1816                           ;Probador1.c: 327:         salidas(i);
  1817  04C0  0874               	movf	Prueba_sal@i,w
  1818  04C1  120A  118A  24D3  120A  118A  	fcall	_salidas
  1819  04C6                     l1183:
  1820                           
  1821                           ;Probador1.c: 328:     }
  1822  04C6  3001               	movlw	1
  1823  04C7  00F3               	movwf	??_Prueba_sal
  1824  04C8  0873               	movf	??_Prueba_sal,w
  1825  04C9  07F4               	addwf	Prueba_sal@i,f
  1826  04CA                     l1185:
  1827  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1828  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1829  04CC  0826               	movf	_nro_pin,w
  1830  04CD  0274               	subwf	Prueba_sal@i,w
  1831  04CE  1C03               	skipc
  1832  04CF  2CD1               	goto	u521
  1833  04D0  2CD2               	goto	u520
  1834  04D1                     u521:
  1835  04D1  2CC0               	goto	l1181
  1836  04D2                     u520:
  1837  04D2                     l173:
  1838  04D2  0008               	return
  1839  04D3                     __end_of_Prueba_sal:
  1840                           
  1841                           	psect	text6
  1842  04D3                     __ptext6:	
  1843 ;; *************** function _salidas *****************
  1844 ;; Defined at:
  1845 ;;		line 331 in file "Probador1.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  i               1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  i               1    2[COMMON] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         1       0       0       0       0
  1861 ;;      Temps:          2       0       0       0       0
  1862 ;;      Totals:         3       0       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_Prueba_sal
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872  04D3                     _salidas:	
  1873                           ;psect for function _salidas
  1874                           
  1875                           
  1876                           ;incstack = 0
  1877                           ; Regs used in _salidas: [wreg-fsr0h+status,2+status,0]
  1878                           ;salidas@i stored from wreg
  1879  04D3  00F2               	movwf	salidas@i
  1880  04D4                     l1135:
  1881                           
  1882                           ;Probador1.c: 332:     switch (puerto) {
  1883  04D4  2D19               	goto	l1159
  1884  04D5                     l1137:
  1885                           
  1886                           ;Probador1.c: 334:             PORTA = (1 << i);
  1887  04D5  3001               	movlw	1
  1888  04D6  00F0               	movwf	??_salidas
  1889  04D7  0A72               	incf	salidas@i,w
  1890  04D8  2CDB               	goto	u474
  1891  04D9                     u475:
  1892  04D9  1003               	clrc
  1893  04DA  0DF0               	rlf	??_salidas,f
  1894  04DB                     u474:
  1895  04DB  3EFF               	addlw	-1
  1896  04DC  1D03               	skipz
  1897  04DD  2CD9               	goto	u475
  1898  04DE  0870               	movf	??_salidas,w
  1899  04DF  0085               	movwf	5	;volatile
  1900  04E0                     l1139:
  1901                           
  1902                           ;Probador1.c: 335:             _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1903  04E0  30C3               	movlw	195
  1904  04E1  00F1               	movwf	??_salidas+1
  1905  04E2  30CD               	movlw	205
  1906  04E3  00F0               	movwf	??_salidas
  1907  04E4                     u1057:
  1908  04E4  0BF0               	decfsz	??_salidas,f
  1909  04E5  2CE4               	goto	u1057
  1910  04E6  0BF1               	decfsz	??_salidas+1,f
  1911  04E7  2CE4               	goto	u1057
  1912                           
  1913                           ;Probador1.c: 336:             break;
  1914  04E8  2D34               	goto	l183
  1915  04E9                     l1141:
  1916                           
  1917                           ;Probador1.c: 338:             PORTB = (1 << i);
  1918  04E9  3001               	movlw	1
  1919  04EA  00F0               	movwf	??_salidas
  1920  04EB  0A72               	incf	salidas@i,w
  1921  04EC  2CEF               	goto	u484
  1922  04ED                     u485:
  1923  04ED  1003               	clrc
  1924  04EE  0DF0               	rlf	??_salidas,f
  1925  04EF                     u484:
  1926  04EF  3EFF               	addlw	-1
  1927  04F0  1D03               	skipz
  1928  04F1  2CED               	goto	u485
  1929  04F2  0870               	movf	??_salidas,w
  1930  04F3  0086               	movwf	6	;volatile
  1931  04F4  2CE0               	goto	l1139
  1932  04F5                     l1145:
  1933                           
  1934                           ;Probador1.c: 342:             PORTC = (1 << i);
  1935  04F5  3001               	movlw	1
  1936  04F6  00F0               	movwf	??_salidas
  1937  04F7  0A72               	incf	salidas@i,w
  1938  04F8  2CFB               	goto	u494
  1939  04F9                     u495:
  1940  04F9  1003               	clrc
  1941  04FA  0DF0               	rlf	??_salidas,f
  1942  04FB                     u494:
  1943  04FB  3EFF               	addlw	-1
  1944  04FC  1D03               	skipz
  1945  04FD  2CF9               	goto	u495
  1946  04FE  0870               	movf	??_salidas,w
  1947  04FF  0087               	movwf	7	;volatile
  1948  0500  2CE0               	goto	l1139
  1949  0501                     l1149:
  1950                           
  1951                           ;Probador1.c: 346:             PORTD = (1 << i);
  1952  0501  3001               	movlw	1
  1953  0502  00F0               	movwf	??_salidas
  1954  0503  0A72               	incf	salidas@i,w
  1955  0504  2D07               	goto	u504
  1956  0505                     u505:
  1957  0505  1003               	clrc
  1958  0506  0DF0               	rlf	??_salidas,f
  1959  0507                     u504:
  1960  0507  3EFF               	addlw	-1
  1961  0508  1D03               	skipz
  1962  0509  2D05               	goto	u505
  1963  050A  0870               	movf	??_salidas,w
  1964  050B  0088               	movwf	8	;volatile
  1965  050C  2CE0               	goto	l1139
  1966  050D                     l1153:
  1967                           
  1968                           ;Probador1.c: 350:             PORTE = (1 << i);
  1969  050D  3001               	movlw	1
  1970  050E  00F0               	movwf	??_salidas
  1971  050F  0A72               	incf	salidas@i,w
  1972  0510  2D13               	goto	u514
  1973  0511                     u515:
  1974  0511  1003               	clrc
  1975  0512  0DF0               	rlf	??_salidas,f
  1976  0513                     u514:
  1977  0513  3EFF               	addlw	-1
  1978  0514  1D03               	skipz
  1979  0515  2D11               	goto	u515
  1980  0516  0870               	movf	??_salidas,w
  1981  0517  0089               	movwf	9	;volatile
  1982  0518  2CE0               	goto	l1139
  1983  0519                     l1159:
  1984  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1985  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1986  051B  0824               	movf	_puerto,w
  1987  051C  00F0               	movwf	??_salidas
  1988  051D  01F1               	clrf	??_salidas+1
  1989                           
  1990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 1, Range of values is 0 to 0
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte            4     3 (average)
  1996                           ; direct_byte           11     8 (fixed)
  1997                           ; jumptable            260     6 (fixed)
  1998                           ;	Chosen strategy is simple_byte
  1999  051E  0871               	movf	??_salidas+1,w
  2000  051F  3A00               	xorlw	0	; case 0
  2001  0520  1903               	skipnz
  2002  0521  2D23               	goto	l1473
  2003  0522  2D34               	goto	l183
  2004  0523                     l1473:
  2005                           
  2006                           ; Switch size 1, requested type "simple"
  2007                           ; Number of cases is 5, Range of values is 0 to 4
  2008                           ; switch strategies available:
  2009                           ; Name         Instructions Cycles
  2010                           ; simple_byte           16     9 (average)
  2011                           ; direct_byte           23     8 (fixed)
  2012                           ; jumptable            260     6 (fixed)
  2013                           ;	Chosen strategy is simple_byte
  2014  0523  0870               	movf	??_salidas,w
  2015  0524  3A00               	xorlw	0	; case 0
  2016  0525  1903               	skipnz
  2017  0526  2CD5               	goto	l1137
  2018  0527  3A01               	xorlw	1	; case 1
  2019  0528  1903               	skipnz
  2020  0529  2CE9               	goto	l1141
  2021  052A  3A03               	xorlw	3	; case 2
  2022  052B  1903               	skipnz
  2023  052C  2CF5               	goto	l1145
  2024  052D  3A01               	xorlw	1	; case 3
  2025  052E  1903               	skipnz
  2026  052F  2D01               	goto	l1149
  2027  0530  3A07               	xorlw	7	; case 4
  2028  0531  1903               	skipnz
  2029  0532  2D0D               	goto	l1153
  2030  0533  2D34               	goto	l183
  2031  0534                     l183:
  2032  0534  0008               	return
  2033  0535                     __end_of_salidas:
  2034  007E                     btemp	set	126	;btemp
  2035  007E                     wtemp0	set	126
  2036                           
  2037                           	psect	idloc
  2038                           
  2039                           ;Config register IDLOC0 @ 0x2000
  2040                           ;	unspecified, using default values
  2041  2000                     	org	8192
  2042  2000  3FFF               	dw	16383
  2043                           
  2044                           ;Config register IDLOC1 @ 0x2001
  2045                           ;	unspecified, using default values
  2046  2001                     	org	8193
  2047  2001  3FFF               	dw	16383
  2048                           
  2049                           ;Config register IDLOC2 @ 0x2002
  2050                           ;	unspecified, using default values
  2051  2002                     	org	8194
  2052  2002  3FFF               	dw	16383
  2053                           
  2054                           ;Config register IDLOC3 @ 0x2003
  2055                           ;	unspecified, using default values
  2056  2003                     	org	8195
  2057  2003  3FFF               	dw	16383
  2058                           
  2059                           	psect	config
  2060                           
  2061                           ;Config register CONFIG @ 0x2007
  2062                           ;	Oscillator Selection bits
  2063                           ;	FOSC = XT, XT oscillator
  2064                           ;	Watchdog Timer Enable bit
  2065                           ;	WDTE = OFF, WDT disabled
  2066                           ;	Power-up Timer Enable bit
  2067                           ;	PWRTE = ON, PWRT enabled
  2068                           ;	Brown-out Reset Enable bit
  2069                           ;	BOREN = ON, BOR enabled
  2070                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2071                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2072                           ;	Data EEPROM Memory Code Protection bit
  2073                           ;	CPD = OFF, Data EEPROM code protection off
  2074                           ;	Flash Program Memory Write Enable bits
  2075                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2076                           ;	In-Circuit Debugger Mode bit
  2077                           ;	DEBUG = 0x1, unprogrammed default
  2078                           ;	Flash Program Memory Code Protection bit
  2079                           ;	CP = OFF, Code protection off
  2080  2007                     	org	8199
  2081  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Prueba_sal
    _Prueba_sal->_salidas

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     321
                                              5 COMMON     8     8      0
                         _Prueba_sal
                       _port_conf_r1
                       _port_conf_r2
                          _porte_ent
                          _porte_sal
 ---------------------------------------------------------------------------------
 (1) _porte_sal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _porte_ent                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Prueba_sal                                           2     2      0     156
                                              3 COMMON     2     2      0
                            _salidas
 ---------------------------------------------------------------------------------
 (2) _salidas                                              3     3      0     110
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Prueba_sal
     _salidas
   _port_conf_r1
   _port_conf_r2
   _porte_ent
   _porte_sal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 24 23:33:59 2025

                     l72 0570                       l64 054D                       l67 0551  
                     l94 062C                       l78 05C2                       l87 05E2  
                     l89 05D9                       _xx 0021                      l110 0697  
                    l103 064D                      l121 06AF                      l105 0644  
                    l142 0784                      l126 070B                      l135 0738  
                    l119 06C1                      l161 04BD                      l137 072C  
                    l164 04A0                      l173 04D2                      l158 04AE  
                    l183 0534                      l167 049B                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      u504 0507  
                    u520 04D2                      u600 05BF                      u505 0505  
                    u521 04D1                      u601 05BE                      u514 0513  
                    u610 05C7                      u530 054C                      u515 0511  
                    u611 05C6                      u531 054B                      u700 0643  
                    u620 05CD                      u540 0551                      u701 0642  
                    u621 05CC                      u541 0550                      u710 0648  
                    u630 05D8                      u550 0559                      u711 0647  
                    u631 05D7                      u551 0558                      u720 065D  
                    u640 05DD                      u560 056E                      u721 065C  
                    u641 05DC                      u561 056D                      u474 04DB  
                    u810 0703                      u650 05F2                      u570 0574  
                    u475 04D9                      u811 0702                      u651 05F1  
                    u571 0573                      u484 04EF                      u900 07AC  
                    u820 0711                      u804 06F0                      u740 068F  
                    u580 058D                      u485 04ED                      u901 07AB  
                    u821 0710                      u805 06EE                      u741 068E  
                    u581 058C                      u494 04FB                      u910 07BC  
                    u830 0717                      u750 069D                      u734 067C  
                    u670 0624                      u495 04F9                      u911 07BB  
                    u831 0716                      u751 069C                      u735 067A  
                    u671 0623                      u920 07E8                      u840 0727  
                    u760 06A3                      u680 0632                      u664 0611  
                    u921 07E7                      u841 0726                      u761 06A2  
                    u681 0631                      u665 060F                      u850 0730  
                    u770 06AE                      u690 0638                      u594 05AC  
                    u851 072F                      u771 06AD                      u691 0637  
                    u595 05AA                      u860 0748                      u780 06B3  
                    u861 0747                      u781 06B2                      u790 06D1  
                    u791 06D0                      u880 077A                      u881 0779  
                    u937 0594                      u890 078A                      u874 0767  
                    u891 0789                      u875 0765                      u947 05A1  
                    u957 05F9                      u967 0606                      u977 0664  
                    u987 0671                      u997 06D8                     l1211 056E  
                   l1203 0554                     l1141 04E9                     l1301 065D  
                   l1221 0580                     l1213 0574                     l1205 0559  
                   l1135 04D4                     l1303 065E                     l1311 0689  
                   l1231 058E                     l1223 0584                     l1215 0576  
                   l1207 0563                     l1153 050D                     l1145 04F5  
                   l1137 04D5                     l1321 06A8                     l1313 068F  
                   l1305 066A                     l1241 05BF                     l1233 059A  
                   l1225 0586                     l1209 0568                     l1139 04E0  
                   l1171 04BA                     l1331 06C3                     l1315 0693  
                   l1307 0676                     l1235 05A6                     l1227 0587  
                   l1219 057B                     l1403 078B                     l1149 0501  
                   l1181 04C0                     l1173 04BB                     l1165 04AF  
                   l1421 07E2                     l1413 07BD                     l1341 06D2  
                   l1333 06C7                     l1325 06B3                     l1317 069E  
                   l1309 0685                     l1261 05EA                     l1253 05DD  
                   l1245 05C8                     l1237 05B5                     l1229 058D  
                   l1405 07A4                     l1159 0519                     l1183 04C6  
                   l1175 04BC                     l1167 04B5                     l1191 0498  
                   l1415 07CE                     l1423 07E8                     l1407 07AC  
                   l1351 0703                     l1343 06DE                     l1335 06C9  
                   l1327 06BB                     l1319 06A3                     l1271 060B  
                   l1263 05EC                     l1247 05CD                     l1239 05B9  
                   l1185 04CA                     l1169 04B7                     l1177 049C  
                   l1417 07D1                     l1409 07B1                     l1361 0721  
                   l1353 0707                     l1345 06EA                     l1337 06CB  
                   l1281 0633                     l1273 061A                     l1265 05F2  
                   l1257 05E4                     l1249 05D2                     l1193 0535  
                   l1179 04BE                     l1187 04A1                     l1419 07DE  
                   l1371 0733                     l1363 0727                     l1355 0712  
                   l1347 06F9                     l1339 06D1                     l1283 0638  
                   l1267 05F3                     l1275 061E                     l1259 05E8  
                   l1195 053F                     l1189 04AB                     l1381 0742  
                   l1357 0717                     l1349 06FD                     l1293 064F  
                   l1285 063D                     l1277 0624                     l1269 05FF  
                   l1197 0545                     l1471 0793                     l1391 0770  
                   l1383 0748                     l1375 073A                     l1367 0730  
                   l1359 071C                     l1295 0653                     l1279 0628  
                   l1199 0547                     l1473 0523                     l1385 0749  
                   l1393 0774                     l1377 073E                     l1369 0731  
                   l1297 0655                     l1289 0648                     l1395 077A  
                   l1387 0755                     l1379 0740                     l1299 0657  
                   l1397 077B                     l1389 0761                     l1399 077F  
                   u1007 06E5                     u1017 074F                     u1027 075C  
                   u1037 07C7                     u1047 07D7                     u1057 04E4  
                   _caso 0020                     _main 0535                     _mask 0023  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089          __end_of_salidas 0535                    status 0003  
                  wtemp0 007E          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0075                   _ADCON1 009F                   _prueba 0022  
                 _puerto 0024               _Prueba_sal 04BE                ??_salidas 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0497  
             __pbssBANK0 0020               __pmaintext 0535              ?_Prueba_sal 0070  
             _incremento 007D                  __ptext1 0498                  __ptext2 049C  
                __ptext3 04A1                  __ptext4 04AF                  __ptext5 04BE  
                __ptext6 04D3                  _salidas 04D3                  _nro_pin 0026  
   end_of_initialization 07FC        __end_of_porte_ent 04A1        __end_of_porte_sal 049C  
            Prueba_sal@i 0074            ?_port_conf_r1 0070            ?_port_conf_r2 0070  
    start_initialization 07F0           ??_port_conf_r1 0070           ??_port_conf_r2 0070  
            __pdataBANK0 0026             ??_Prueba_sal 0073              __pbssCOMMON 007D  
              ___latbits 0002                __pnvBANK0 0025       __end_of_Prueba_sal 04D3  
               ?_salidas 0070     __end_of_port_conf_r1 04BE     __end_of_port_conf_r2 04AF  
              _porte_ent 049C                _porte_sal 0498               ?_porte_ent 0070  
             ?_porte_sal 0070                 _port_act 0025                 main@i_81 0078  
               main@i_82 0079                 main@i_83 007A                 main@i_84 007B  
               main@i_85 007C                 salidas@i 0072              ??_porte_ent 0070  
            ??_porte_sal 0070             _port_conf_r1 04AF             _port_conf_r2 04A1  
