

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 23 20:28:02 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataCOMMON
   179  04E3                     __pidataCOMMON:
   180                           
   181                           ;initializer for _nro_pin
   182  04E3  3407               	retlw	7
   183                           
   184                           	psect	nvBANK0
   185  0025                     __pnvBANK0:
   186  0025                     _port_act:
   187  0025                     	ds	1
   188  0009                     _PORTE	set	9
   189  0008                     _PORTD	set	8
   190  0007                     _PORTC	set	7
   191  0006                     _PORTB	set	6
   192  0005                     _PORTA	set	5
   193  004A                     _RE2	set	74
   194  0049                     _RE1	set	73
   195  0048                     _RE0	set	72
   196  0089                     _TRISE	set	137
   197  009F                     _ADCON1	set	159
   198  0088                     _TRISD	set	136
   199  0087                     _TRISC	set	135
   200  0086                     _TRISB	set	134
   201  0085                     _TRISA	set	133
   202                           
   203                           	psect	cinit
   204  07F0                     start_initialization:	
   205                           ; #config settings
   206                           
   207  07F0                     __initialization:
   208                           
   209                           ; Initialize objects allocated to COMMON
   210  07F0  120A  118A  24E3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   211  07F5  00FD               	movwf	__pdataCOMMON& (0+127)
   212                           
   213                           ; Clear objects allocated to BANK0
   214  07F6  01A0               	clrf	__pbssBANK0& (0+127)
   215  07F7  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   216  07F8  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   217  07F9  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   218  07FA  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   219                           
   220                           ; Clear objects allocated to COMMON
   221  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2D7F   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  007C                     __pbssCOMMON:
   231  007C                     _incremento:
   232  007C                     	ds	1
   233                           
   234                           	psect	dataCOMMON
   235  007D                     __pdataCOMMON:
   236  007D                     _nro_pin:
   237  007D                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240  0020                     __pbssBANK0:
   241  0020                     _caso:
   242  0020                     	ds	1
   243  0021                     _prueba:
   244  0021                     	ds	1
   245  0022                     _xx:
   246  0022                     	ds	1
   247  0023                     _mask:
   248  0023                     	ds	1
   249  0024                     _puerto:
   250  0024                     	ds	1
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_port_conf_r1:
   255  0070                     ??_port_conf_r1:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_porte_ent:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_porte_ent:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_Prueba_sal:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_port_conf_r2:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_port_conf_r2:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_porte_sal:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_porte_sal:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_salidas:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_salidas:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0070                     	ds	2
   291  0072                     salidas@i:
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     ??_Prueba_sal:
   296                           
   297                           ; 1 bytes @ 0x3
   298  0073                     	ds	1
   299  0074                     Prueba_sal@i:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	1
   303  0075                     ??_main:
   304                           
   305                           ; 1 bytes @ 0x5
   306  0075                     	ds	3
   307  0078                     main@i_81:
   308                           
   309                           ; 1 bytes @ 0x8
   310  0078                     	ds	1
   311  0079                     main@i_82:
   312                           
   313                           ; 1 bytes @ 0x9
   314  0079                     	ds	1
   315  007A                     main@i_83:
   316                           
   317                           ; 1 bytes @ 0xA
   318  007A                     	ds	1
   319  007B                     main@i_84:
   320                           
   321                           ; 1 bytes @ 0xB
   322  007B                     	ds	1
   323                           
   324                           	psect	maintext
   325  057F                     __pmaintext:	
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 42 in file "Probador1.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  i               1   11[COMMON] unsigned char 
   336 ;;  i               1   10[COMMON] unsigned char 
   337 ;;  i               1    9[COMMON] unsigned char 
   338 ;;  i               1    8[COMMON] unsigned char 
   339 ;;  i               1    0        unsigned char 
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : B00/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   349 ;;      Params:         0       0       0       0       0
   350 ;;      Locals:         4       0       0       0       0
   351 ;;      Temps:          3       0       0       0       0
   352 ;;      Totals:         7       0       0       0       0
   353 ;;Total ram usage:        7 bytes
   354 ;; Hardware stack levels required when called: 2
   355 ;; This function calls:
   356 ;;		_Prueba_sal
   357 ;;		_port_conf_r1
   358 ;;		_port_conf_r2
   359 ;;		_porte_ent
   360 ;;		_porte_sal
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366  057F                     _main:	
   367                           ;psect for function _main
   368                           
   369  057F                     l1170:	
   370                           ;incstack = 0
   371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   372                           
   373                           
   374                           ;Probador1.c: 43:     port_conf_r1();
   375  057F  120A  118A  24FB  120A  118A  	fcall	_port_conf_r1
   376                           
   377                           ;Probador1.c: 44:     porte_ent();
   378  0584  120A  118A  24E8  120A  118A  	fcall	_porte_ent
   379  0589                     l1172:
   380                           
   381                           ;Probador1.c: 45:     port_act = PORTA;
   382  0589  1283               	bcf	3,5	;RP0=0, select bank0
   383  058A  1303               	bcf	3,6	;RP1=0, select bank0
   384  058B  0805               	movf	5,w	;volatile
   385  058C  00F5               	movwf	??_main
   386  058D  0875               	movf	??_main,w
   387  058E  00A5               	movwf	_port_act
   388  058F                     l1174:
   389                           
   390                           ;Probador1.c: 46:     puerto = 0;
   391  058F  01A4               	clrf	_puerto
   392  0590  2D97               	goto	l64
   393  0591                     l1176:
   394                           
   395                           ;Probador1.c: 51:             if (xx == 1) {
   396  0591  0322               	decf	_xx,w
   397  0592  1D03               	btfss	3,2
   398  0593  2D95               	goto	u501
   399  0594  2D96               	goto	u500
   400  0595                     u501:
   401  0595  2D97               	goto	l64
   402  0596                     u500:
   403  0596  2D9D               	goto	l67
   404  0597                     l64:	
   405                           ;Probador1.c: 55:         }
   406                           
   407                           
   408                           ;Probador1.c: 50:         while (RE0 == 0) {
   409  0597  1283               	bcf	3,5	;RP0=0, select bank0
   410  0598  1303               	bcf	3,6	;RP1=0, select bank0
   411  0599  1C09               	btfss	9,0	;volatile
   412  059A  2D9C               	goto	u511
   413  059B  2D9D               	goto	u510
   414  059C                     u511:
   415  059C  2D91               	goto	l1176
   416  059D                     u510:
   417  059D                     l67:
   418                           
   419                           ;Probador1.c: 56:         xx = 1;
   420  059D  01A2               	clrf	_xx
   421  059E  0AA2               	incf	_xx,f
   422                           
   423                           ;Probador1.c: 57:         switch (puerto) {
   424  059F  2FD4               	goto	l1380
   425  05A0                     l1180:
   426                           
   427                           ;Probador1.c: 59:                 if (prueba == 0) {
   428  05A0  0821               	movf	_prueba,w
   429  05A1  1D03               	btfss	3,2
   430  05A2  2DA4               	goto	u521
   431  05A3  2DA5               	goto	u520
   432  05A4                     u521:
   433  05A4  2DC6               	goto	l1196
   434  05A5                     u520:
   435  05A5                     l1182:
   436                           
   437                           ;Probador1.c: 60:                     port_conf_r1();
   438  05A5  120A  118A  24FB  120A  118A  	fcall	_port_conf_r1
   439                           
   440                           ;Probador1.c: 61:                     porte_ent();
   441  05AA  120A  118A  24E8  120A  118A  	fcall	_porte_ent
   442  05AF                     l1184:
   443                           
   444                           ;Probador1.c: 62:                     Prueba_sal();
   445  05AF  120A  118A  250A  120A  118A  	fcall	_Prueba_sal
   446  05B4                     l1186:
   447                           
   448                           ;Probador1.c: 64:                         if (RE1 == 1) {
   449  05B4  1283               	bcf	3,5	;RP0=0, select bank0
   450  05B5  1303               	bcf	3,6	;RP1=0, select bank0
   451  05B6  1C89               	btfss	9,1	;volatile
   452  05B7  2DB9               	goto	u531
   453  05B8  2DBA               	goto	u530
   454  05B9                     u531:
   455  05B9  2DBB               	goto	l72
   456  05BA                     u530:
   457  05BA  2D8F               	goto	l1174
   458  05BB                     l72:	
   459                           ;Probador1.c: 67:                         }
   460                           
   461                           
   462                           ;Probador1.c: 68:                         if (RE0 == 1) {
   463  05BB  1C09               	btfss	9,0	;volatile
   464  05BC  2DBE               	goto	u541
   465  05BD  2DBF               	goto	u540
   466  05BE                     u541:
   467  05BE  2DB4               	goto	l1186
   468  05BF                     u540:
   469  05BF                     l1190:
   470                           
   471                           ;Probador1.c: 69:                             puerto = 1;
   472  05BF  01A4               	clrf	_puerto
   473  05C0  0AA4               	incf	_puerto,f
   474  05C1                     l1192:
   475                           
   476                           ;Probador1.c: 70:                             nro_pin = 9;
   477  05C1  3009               	movlw	9
   478  05C2  00F5               	movwf	??_main
   479  05C3  0875               	movf	??_main,w
   480  05C4  00FD               	movwf	_nro_pin
   481                           
   482                           ;Probador1.c: 71:                             break;
   483  05C5  2D97               	goto	l64
   484  05C6                     l1196:
   485                           
   486                           ;Probador1.c: 76:                     port_conf_r2();
   487  05C6  120A  118A  24ED  120A  118A  	fcall	_port_conf_r2
   488  05CB                     l1198:
   489                           
   490                           ;Probador1.c: 77:                     mask = 1;
   491  05CB  1283               	bcf	3,5	;RP0=0, select bank0
   492  05CC  1303               	bcf	3,6	;RP1=0, select bank0
   493  05CD  01A3               	clrf	_mask
   494  05CE  0AA3               	incf	_mask,f
   495  05CF                     l1200:
   496                           
   497                           ;Probador1.c: 78:                     incremento = 1;
   498  05CF  01FC               	clrf	_incremento
   499  05D0  0AFC               	incf	_incremento,f
   500  05D1                     l1202:
   501  05D1  2E0D               	goto	l78
   502  05D2                     l1204:
   503                           
   504                           ;Probador1.c: 81:                             if (PORTA & mask) {
   505  05D2  0805               	movf	5,w	;volatile
   506  05D3  0523               	andwf	_mask,w
   507  05D4  1903               	btfsc	3,2
   508  05D5  2DD7               	goto	u551
   509  05D6  2DD8               	goto	u550
   510  05D7                     u551:
   511  05D7  2E04               	goto	l1216
   512  05D8                     u550:
   513  05D8                     l1206:
   514                           
   515                           ;Probador1.c: 82:                                 RE2 = 1;
   516  05D8  1509               	bsf	9,2	;volatile
   517  05D9                     l1208:
   518                           
   519                           ;Probador1.c: 83:                                 _delay((unsigned long)((300)*(4000000U
      +                          L/4000.0)));
   520  05D9  3002               	movlw	2
   521  05DA  00F7               	movwf	??_main+2
   522  05DB  3086               	movlw	134
   523  05DC  00F6               	movwf	??_main+1
   524  05DD  3099               	movlw	153
   525  05DE  00F5               	movwf	??_main
   526  05DF                     u877:
   527  05DF  0BF5               	decfsz	??_main,f
   528  05E0  2DDF               	goto	u877
   529  05E1  0BF6               	decfsz	??_main+1,f
   530  05E2  2DDF               	goto	u877
   531  05E3  0BF7               	decfsz	??_main+2,f
   532  05E4  2DDF               	goto	u877
   533  05E5                     l1210:
   534                           
   535                           ;Probador1.c: 84:                                 RE2 = 0;
   536  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   537  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   538  05E7  1109               	bcf	9,2	;volatile
   539                           
   540                           ;Probador1.c: 85:                                 _delay((unsigned long)((50)*(4000000UL
      +                          /4000.0)));
   541  05E8  3041               	movlw	65
   542  05E9  00F6               	movwf	??_main+1
   543  05EA  30EE               	movlw	238
   544  05EB  00F5               	movwf	??_main
   545  05EC                     u887:
   546  05EC  0BF5               	decfsz	??_main,f
   547  05ED  2DEC               	goto	u887
   548  05EE  0BF6               	decfsz	??_main+1,f
   549  05EF  2DEC               	goto	u887
   550  05F0  0000               	nop
   551  05F1                     l1212:
   552                           
   553                           ;Probador1.c: 86:                                 mask = (1 << incremento);
   554  05F1  3001               	movlw	1
   555  05F2  00F5               	movwf	??_main
   556  05F3  0A7C               	incf	_incremento,w
   557  05F4  2DF7               	goto	u564
   558  05F5                     u565:
   559  05F5  1003               	clrc
   560  05F6  0DF5               	rlf	??_main,f
   561  05F7                     u564:
   562  05F7  3EFF               	addlw	-1
   563  05F8  1D03               	skipz
   564  05F9  2DF5               	goto	u565
   565  05FA  0875               	movf	??_main,w
   566  05FB  00F6               	movwf	??_main+1
   567  05FC  0876               	movf	??_main+1,w
   568  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   569  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   570  05FF  00A3               	movwf	_mask
   571  0600                     l1214:
   572                           
   573                           ;Probador1.c: 87:                                 incremento++;
   574  0600  3001               	movlw	1
   575  0601  00F5               	movwf	??_main
   576  0602  0875               	movf	??_main,w
   577  0603  07FC               	addwf	_incremento,f
   578  0604                     l1216:
   579                           
   580                           ;Probador1.c: 89:                             if (incremento == 7) {
   581  0604  3007               	movlw	7
   582  0605  067C               	xorwf	_incremento,w
   583  0606  1D03               	btfss	3,2
   584  0607  2E09               	goto	u571
   585  0608  2E0A               	goto	u570
   586  0609                     u571:
   587  0609  2DD2               	goto	l1204
   588  060A                     u570:
   589  060A                     l1218:
   590                           
   591                           ;Probador1.c: 90:                                 puerto = 1;
   592  060A  01A4               	clrf	_puerto
   593  060B  0AA4               	incf	_puerto,f
   594                           
   595                           ;Probador1.c: 91:                                 break;
   596  060C  2E12               	goto	l1222
   597  060D                     l78:
   598  060D  087D               	movf	_nro_pin,w
   599  060E  1D03               	btfss	3,2
   600  060F  2E11               	goto	u581
   601  0610  2E12               	goto	u580
   602  0611                     u581:
   603  0611  2DD2               	goto	l1204
   604  0612                     u580:
   605  0612                     l1222:
   606                           
   607                           ;Probador1.c: 100:                 if (prueba == 0) {
   608  0612  0821               	movf	_prueba,w
   609  0613  1D03               	btfss	3,2
   610  0614  2E16               	goto	u591
   611  0615  2E17               	goto	u590
   612  0616                     u591:
   613  0616  2E2E               	goto	l87
   614  0617                     u590:
   615  0617                     l1224:
   616                           
   617                           ;Probador1.c: 101:                     Prueba_sal();
   618  0617  120A  118A  250A  120A  118A  	fcall	_Prueba_sal
   619  061C                     l1226:
   620                           
   621                           ;Probador1.c: 103:                         if (RE1 == 1) {
   622  061C  1283               	bcf	3,5	;RP0=0, select bank0
   623  061D  1303               	bcf	3,6	;RP1=0, select bank0
   624  061E  1C89               	btfss	9,1	;volatile
   625  061F  2E21               	goto	u601
   626  0620  2E22               	goto	u600
   627  0621                     u601:
   628  0621  2E25               	goto	l89
   629  0622                     u600:
   630  0622                     l1228:
   631                           
   632                           ;Probador1.c: 104:                             puerto = 1;
   633  0622  01A4               	clrf	_puerto
   634  0623  0AA4               	incf	_puerto,f
   635                           
   636                           ;Probador1.c: 105:                             break;
   637  0624  2D97               	goto	l64
   638  0625                     l89:	
   639                           ;Probador1.c: 106:                         }
   640                           
   641                           
   642                           ;Probador1.c: 107:                         if (RE0 == 1) {
   643  0625  1C09               	btfss	9,0	;volatile
   644  0626  2E28               	goto	u611
   645  0627  2E29               	goto	u610
   646  0628                     u611:
   647  0628  2E1C               	goto	l1226
   648  0629                     u610:
   649  0629                     l1230:
   650                           
   651                           ;Probador1.c: 108:                             puerto = 2;
   652  0629  3002               	movlw	2
   653  062A  00F5               	movwf	??_main
   654  062B  0875               	movf	??_main,w
   655  062C  00A4               	movwf	_puerto
   656                           
   657                           ;Probador1.c: 109:                             break;
   658  062D  2D97               	goto	l64
   659  062E                     l87:
   660                           
   661                           ;Probador1.c: 114:                     incremento = 1;
   662  062E  01FC               	clrf	_incremento
   663  062F  0AFC               	incf	_incremento,f
   664  0630                     l1234:
   665                           
   666                           ;Probador1.c: 115:                     nro_pin = 9;
   667  0630  3009               	movlw	9
   668  0631  00F5               	movwf	??_main
   669  0632  0875               	movf	??_main,w
   670  0633  00FD               	movwf	_nro_pin
   671  0634                     l1236:
   672                           
   673                           ;Probador1.c: 116:                     mask = 1;
   674  0634  01A3               	clrf	_mask
   675  0635  0AA3               	incf	_mask,f
   676  0636                     l1238:
   677                           
   678                           ;Probador1.c: 117:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
   679  0636  01F8               	clrf	main@i_81
   680  0637  2E78               	goto	l94
   681  0638                     l1240:
   682                           
   683                           ;Probador1.c: 119:                             if (PORTB & mask) {
   684  0638  0806               	movf	6,w	;volatile
   685  0639  0523               	andwf	_mask,w
   686  063A  1903               	btfsc	3,2
   687  063B  2E3D               	goto	u621
   688  063C  2E3E               	goto	u620
   689  063D                     u621:
   690  063D  2E6A               	goto	l1252
   691  063E                     u620:
   692  063E                     l1242:
   693                           
   694                           ;Probador1.c: 120:                                 RE2 = 1;
   695  063E  1509               	bsf	9,2	;volatile
   696  063F                     l1244:
   697                           
   698                           ;Probador1.c: 121:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
   699  063F  3002               	movlw	2
   700  0640  00F7               	movwf	??_main+2
   701  0641  3086               	movlw	134
   702  0642  00F6               	movwf	??_main+1
   703  0643  3099               	movlw	153
   704  0644  00F5               	movwf	??_main
   705  0645                     u897:
   706  0645  0BF5               	decfsz	??_main,f
   707  0646  2E45               	goto	u897
   708  0647  0BF6               	decfsz	??_main+1,f
   709  0648  2E45               	goto	u897
   710  0649  0BF7               	decfsz	??_main+2,f
   711  064A  2E45               	goto	u897
   712  064B                     l1246:
   713                           
   714                           ;Probador1.c: 122:                                 RE2 = 0;
   715  064B  1283               	bcf	3,5	;RP0=0, select bank0
   716  064C  1303               	bcf	3,6	;RP1=0, select bank0
   717  064D  1109               	bcf	9,2	;volatile
   718                           
   719                           ;Probador1.c: 123:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
   720  064E  3041               	movlw	65
   721  064F  00F6               	movwf	??_main+1
   722  0650  30EE               	movlw	238
   723  0651  00F5               	movwf	??_main
   724  0652                     u907:
   725  0652  0BF5               	decfsz	??_main,f
   726  0653  2E52               	goto	u907
   727  0654  0BF6               	decfsz	??_main+1,f
   728  0655  2E52               	goto	u907
   729  0656  0000               	nop
   730  0657                     l1248:
   731                           
   732                           ;Probador1.c: 124:                                 mask = (1 << incremento);
   733  0657  3001               	movlw	1
   734  0658  00F5               	movwf	??_main
   735  0659  0A7C               	incf	_incremento,w
   736  065A  2E5D               	goto	u634
   737  065B                     u635:
   738  065B  1003               	clrc
   739  065C  0DF5               	rlf	??_main,f
   740  065D                     u634:
   741  065D  3EFF               	addlw	-1
   742  065E  1D03               	skipz
   743  065F  2E5B               	goto	u635
   744  0660  0875               	movf	??_main,w
   745  0661  00F6               	movwf	??_main+1
   746  0662  0876               	movf	??_main+1,w
   747  0663  1283               	bcf	3,5	;RP0=0, select bank0
   748  0664  1303               	bcf	3,6	;RP1=0, select bank0
   749  0665  00A3               	movwf	_mask
   750  0666                     l1250:
   751                           
   752                           ;Probador1.c: 125:                                 incremento++;
   753  0666  3001               	movlw	1
   754  0667  00F5               	movwf	??_main
   755  0668  0875               	movf	??_main,w
   756  0669  07FC               	addwf	_incremento,f
   757  066A                     l1252:
   758                           
   759                           ;Probador1.c: 127:                             if (incremento == 9) {
   760  066A  3009               	movlw	9
   761  066B  067C               	xorwf	_incremento,w
   762  066C  1D03               	btfss	3,2
   763  066D  2E6F               	goto	u641
   764  066E  2E70               	goto	u640
   765  066F                     u641:
   766  066F  2E38               	goto	l1240
   767  0670                     u640:
   768  0670                     l1254:
   769                           
   770                           ;Probador1.c: 128:                                 puerto = 2;
   771  0670  3002               	movlw	2
   772  0671  00F5               	movwf	??_main
   773  0672  0875               	movf	??_main,w
   774  0673  00A4               	movwf	_puerto
   775  0674                     l1256:	
   776                           ;Probador1.c: 129:                                 break;
   777                           
   778                           
   779                           ;Probador1.c: 133:                     }
   780  0674  087C               	movf	_incremento,w
   781  0675  00F5               	movwf	??_main
   782  0676  0875               	movf	??_main,w
   783  0677  00F8               	movwf	main@i_81
   784  0678                     l94:
   785  0678  087D               	movf	_nro_pin,w
   786  0679  0278               	subwf	main@i_81,w
   787  067A  1C03               	skipc
   788  067B  2E7D               	goto	u651
   789  067C  2E7E               	goto	u650
   790  067D                     u651:
   791  067D  2E38               	goto	l1240
   792  067E                     u650:
   793  067E  2D97               	goto	l64
   794  067F                     l1258:
   795                           
   796                           ;Probador1.c: 139:                 if (prueba == 0) {
   797  067F  0821               	movf	_prueba,w
   798  0680  1D03               	btfss	3,2
   799  0681  2E83               	goto	u661
   800  0682  2E84               	goto	u660
   801  0683                     u661:
   802  0683  2E99               	goto	l103
   803  0684                     u660:
   804  0684                     l1260:
   805                           
   806                           ;Probador1.c: 140:                     Prueba_sal();
   807  0684  120A  118A  250A  120A  118A  	fcall	_Prueba_sal
   808  0689                     l1262:
   809                           
   810                           ;Probador1.c: 142:                         if (RE1 == 1) {
   811  0689  1283               	bcf	3,5	;RP0=0, select bank0
   812  068A  1303               	bcf	3,6	;RP1=0, select bank0
   813  068B  1C89               	btfss	9,1	;volatile
   814  068C  2E8E               	goto	u671
   815  068D  2E8F               	goto	u670
   816  068E                     u671:
   817  068E  2E90               	goto	l105
   818  068F                     u670:
   819  068F  2E29               	goto	l1230
   820  0690                     l105:	
   821                           ;Probador1.c: 145:                         }
   822                           
   823                           
   824                           ;Probador1.c: 146:                         if (RE0 == 1) {
   825  0690  1C09               	btfss	9,0	;volatile
   826  0691  2E93               	goto	u681
   827  0692  2E94               	goto	u680
   828  0693                     u681:
   829  0693  2E89               	goto	l1262
   830  0694                     u680:
   831  0694                     l1266:
   832                           
   833                           ;Probador1.c: 147:                             puerto = 3;
   834  0694  3003               	movlw	3
   835  0695  00F5               	movwf	??_main
   836  0696  0875               	movf	??_main,w
   837  0697  00A4               	movwf	_puerto
   838                           
   839                           ;Probador1.c: 148:                             break;
   840  0698  2D97               	goto	l64
   841  0699                     l103:
   842                           
   843                           ;Probador1.c: 153:                     incremento = 1;
   844  0699  01FC               	clrf	_incremento
   845  069A  0AFC               	incf	_incremento,f
   846  069B                     l1270:
   847                           
   848                           ;Probador1.c: 154:                     nro_pin = 9;
   849  069B  3009               	movlw	9
   850  069C  00F5               	movwf	??_main
   851  069D  0875               	movf	??_main,w
   852  069E  00FD               	movwf	_nro_pin
   853  069F                     l1272:
   854                           
   855                           ;Probador1.c: 155:                     mask = 1;
   856  069F  01A3               	clrf	_mask
   857  06A0  0AA3               	incf	_mask,f
   858  06A1                     l1274:
   859                           
   860                           ;Probador1.c: 156:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
   861  06A1  01F9               	clrf	main@i_82
   862  06A2  2EE3               	goto	l110
   863  06A3                     l1276:
   864                           
   865                           ;Probador1.c: 158:                             if (PORTC & mask) {
   866  06A3  0807               	movf	7,w	;volatile
   867  06A4  0523               	andwf	_mask,w
   868  06A5  1903               	btfsc	3,2
   869  06A6  2EA8               	goto	u691
   870  06A7  2EA9               	goto	u690
   871  06A8                     u691:
   872  06A8  2ED5               	goto	l1288
   873  06A9                     u690:
   874  06A9                     l1278:
   875                           
   876                           ;Probador1.c: 159:                                 RE2 = 1;
   877  06A9  1509               	bsf	9,2	;volatile
   878  06AA                     l1280:
   879                           
   880                           ;Probador1.c: 160:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
   881  06AA  3002               	movlw	2
   882  06AB  00F7               	movwf	??_main+2
   883  06AC  3086               	movlw	134
   884  06AD  00F6               	movwf	??_main+1
   885  06AE  3099               	movlw	153
   886  06AF  00F5               	movwf	??_main
   887  06B0                     u917:
   888  06B0  0BF5               	decfsz	??_main,f
   889  06B1  2EB0               	goto	u917
   890  06B2  0BF6               	decfsz	??_main+1,f
   891  06B3  2EB0               	goto	u917
   892  06B4  0BF7               	decfsz	??_main+2,f
   893  06B5  2EB0               	goto	u917
   894  06B6                     l1282:
   895                           
   896                           ;Probador1.c: 161:                                 RE2 = 0;
   897  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   898  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   899  06B8  1109               	bcf	9,2	;volatile
   900                           
   901                           ;Probador1.c: 162:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
   902  06B9  3041               	movlw	65
   903  06BA  00F6               	movwf	??_main+1
   904  06BB  30EE               	movlw	238
   905  06BC  00F5               	movwf	??_main
   906  06BD                     u927:
   907  06BD  0BF5               	decfsz	??_main,f
   908  06BE  2EBD               	goto	u927
   909  06BF  0BF6               	decfsz	??_main+1,f
   910  06C0  2EBD               	goto	u927
   911  06C1  0000               	nop
   912  06C2                     l1284:
   913                           
   914                           ;Probador1.c: 163:                                 mask = (1 << incremento);
   915  06C2  3001               	movlw	1
   916  06C3  00F5               	movwf	??_main
   917  06C4  0A7C               	incf	_incremento,w
   918  06C5  2EC8               	goto	u704
   919  06C6                     u705:
   920  06C6  1003               	clrc
   921  06C7  0DF5               	rlf	??_main,f
   922  06C8                     u704:
   923  06C8  3EFF               	addlw	-1
   924  06C9  1D03               	skipz
   925  06CA  2EC6               	goto	u705
   926  06CB  0875               	movf	??_main,w
   927  06CC  00F6               	movwf	??_main+1
   928  06CD  0876               	movf	??_main+1,w
   929  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   930  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   931  06D0  00A3               	movwf	_mask
   932  06D1                     l1286:
   933                           
   934                           ;Probador1.c: 164:                                 incremento++;
   935  06D1  3001               	movlw	1
   936  06D2  00F5               	movwf	??_main
   937  06D3  0875               	movf	??_main,w
   938  06D4  07FC               	addwf	_incremento,f
   939  06D5                     l1288:
   940                           
   941                           ;Probador1.c: 166:                             if (incremento == 9) {
   942  06D5  3009               	movlw	9
   943  06D6  067C               	xorwf	_incremento,w
   944  06D7  1D03               	btfss	3,2
   945  06D8  2EDA               	goto	u711
   946  06D9  2EDB               	goto	u710
   947  06DA                     u711:
   948  06DA  2EA3               	goto	l1276
   949  06DB                     u710:
   950  06DB                     l1290:
   951                           
   952                           ;Probador1.c: 167:                                 puerto = 3;
   953  06DB  3003               	movlw	3
   954  06DC  00F5               	movwf	??_main
   955  06DD  0875               	movf	??_main,w
   956  06DE  00A4               	movwf	_puerto
   957  06DF                     l1292:	
   958                           ;Probador1.c: 168:                                 break;
   959                           
   960                           
   961                           ;Probador1.c: 172:                     }
   962  06DF  087C               	movf	_incremento,w
   963  06E0  00F5               	movwf	??_main
   964  06E1  0875               	movf	??_main,w
   965  06E2  00F9               	movwf	main@i_82
   966  06E3                     l110:
   967  06E3  087D               	movf	_nro_pin,w
   968  06E4  0279               	subwf	main@i_82,w
   969  06E5  1C03               	skipc
   970  06E6  2EE8               	goto	u721
   971  06E7  2EE9               	goto	u720
   972  06E8                     u721:
   973  06E8  2EA3               	goto	l1276
   974  06E9                     u720:
   975  06E9  2D97               	goto	l64
   976  06EA                     l1294:
   977                           
   978                           ;Probador1.c: 177:                 if (prueba == 0) {
   979  06EA  0821               	movf	_prueba,w
   980  06EB  1D03               	btfss	3,2
   981  06EC  2EEE               	goto	u731
   982  06ED  2EEF               	goto	u730
   983  06EE                     u731:
   984  06EE  2F0D               	goto	l119
   985  06EF                     u730:
   986  06EF                     l1296:
   987                           
   988                           ;Probador1.c: 178:                     Prueba_sal();
   989  06EF  120A  118A  250A  120A  118A  	fcall	_Prueba_sal
   990  06F4                     l1298:
   991                           
   992                           ;Probador1.c: 180:                         if (RE1 == 1) {
   993  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   994  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   995  06F6  1C89               	btfss	9,1	;volatile
   996  06F7  2EF9               	goto	u741
   997  06F8  2EFA               	goto	u740
   998  06F9                     u741:
   999  06F9  2EFB               	goto	l121
  1000  06FA                     u740:
  1001  06FA  2E94               	goto	l1266
  1002  06FB                     l121:	
  1003                           ;Probador1.c: 183:                         }
  1004                           
  1005                           
  1006                           ;Probador1.c: 184:                         if (RE0 == 1) {
  1007  06FB  1C09               	btfss	9,0	;volatile
  1008  06FC  2EFE               	goto	u751
  1009  06FD  2EFF               	goto	u750
  1010  06FE                     u751:
  1011  06FE  2EF4               	goto	l1298
  1012  06FF                     u750:
  1013  06FF                     l1302:
  1014                           
  1015                           ;Probador1.c: 185:                             puerto = 4;
  1016  06FF  3004               	movlw	4
  1017  0700  00F5               	movwf	??_main
  1018  0701  0875               	movf	??_main,w
  1019  0702  00A4               	movwf	_puerto
  1020                           
  1021                           ;Probador1.c: 186:                             nro_pin = 4;
  1022  0703  3004               	movlw	4
  1023  0704  00F5               	movwf	??_main
  1024  0705  0875               	movf	??_main,w
  1025  0706  00FD               	movwf	_nro_pin
  1026  0707                     l1304:
  1027                           
  1028                           ;Probador1.c: 187:                             porte_sal();
  1029  0707  120A  118A  24E4  120A  118A  	fcall	_porte_sal
  1030                           
  1031                           ;Probador1.c: 188:                             break;
  1032  070C  2D97               	goto	l64
  1033  070D                     l119:
  1034                           
  1035                           ;Probador1.c: 193:                     incremento = 1;
  1036  070D  01FC               	clrf	_incremento
  1037  070E  0AFC               	incf	_incremento,f
  1038  070F                     l1308:
  1039                           
  1040                           ;Probador1.c: 194:                     nro_pin = 9;
  1041  070F  3009               	movlw	9
  1042  0710  00F5               	movwf	??_main
  1043  0711  0875               	movf	??_main,w
  1044  0712  00FD               	movwf	_nro_pin
  1045  0713                     l1310:
  1046                           
  1047                           ;Probador1.c: 195:                     mask = 1;
  1048  0713  01A3               	clrf	_mask
  1049  0714  0AA3               	incf	_mask,f
  1050  0715                     l1312:
  1051                           
  1052                           ;Probador1.c: 196:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
  1053  0715  01FA               	clrf	main@i_83
  1054  0716  2F57               	goto	l126
  1055  0717                     l1314:
  1056                           
  1057                           ;Probador1.c: 198:                             if (PORTD & mask) {
  1058  0717  0808               	movf	8,w	;volatile
  1059  0718  0523               	andwf	_mask,w
  1060  0719  1903               	btfsc	3,2
  1061  071A  2F1C               	goto	u761
  1062  071B  2F1D               	goto	u760
  1063  071C                     u761:
  1064  071C  2F49               	goto	l1326
  1065  071D                     u760:
  1066  071D                     l1316:
  1067                           
  1068                           ;Probador1.c: 199:                                 RE2 = 1;
  1069  071D  1509               	bsf	9,2	;volatile
  1070  071E                     l1318:
  1071                           
  1072                           ;Probador1.c: 200:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
  1073  071E  3002               	movlw	2
  1074  071F  00F7               	movwf	??_main+2
  1075  0720  3086               	movlw	134
  1076  0721  00F6               	movwf	??_main+1
  1077  0722  3099               	movlw	153
  1078  0723  00F5               	movwf	??_main
  1079  0724                     u937:
  1080  0724  0BF5               	decfsz	??_main,f
  1081  0725  2F24               	goto	u937
  1082  0726  0BF6               	decfsz	??_main+1,f
  1083  0727  2F24               	goto	u937
  1084  0728  0BF7               	decfsz	??_main+2,f
  1085  0729  2F24               	goto	u937
  1086  072A                     l1320:
  1087                           
  1088                           ;Probador1.c: 201:                                 RE2 = 0;
  1089  072A  1283               	bcf	3,5	;RP0=0, select bank0
  1090  072B  1303               	bcf	3,6	;RP1=0, select bank0
  1091  072C  1109               	bcf	9,2	;volatile
  1092                           
  1093                           ;Probador1.c: 202:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
  1094  072D  3041               	movlw	65
  1095  072E  00F6               	movwf	??_main+1
  1096  072F  30EE               	movlw	238
  1097  0730  00F5               	movwf	??_main
  1098  0731                     u947:
  1099  0731  0BF5               	decfsz	??_main,f
  1100  0732  2F31               	goto	u947
  1101  0733  0BF6               	decfsz	??_main+1,f
  1102  0734  2F31               	goto	u947
  1103  0735  0000               	nop
  1104  0736                     l1322:
  1105                           
  1106                           ;Probador1.c: 203:                                 mask = (1 << incremento);
  1107  0736  3001               	movlw	1
  1108  0737  00F5               	movwf	??_main
  1109  0738  0A7C               	incf	_incremento,w
  1110  0739  2F3C               	goto	u774
  1111  073A                     u775:
  1112  073A  1003               	clrc
  1113  073B  0DF5               	rlf	??_main,f
  1114  073C                     u774:
  1115  073C  3EFF               	addlw	-1
  1116  073D  1D03               	skipz
  1117  073E  2F3A               	goto	u775
  1118  073F  0875               	movf	??_main,w
  1119  0740  00F6               	movwf	??_main+1
  1120  0741  0876               	movf	??_main+1,w
  1121  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0744  00A3               	movwf	_mask
  1124  0745                     l1324:
  1125                           
  1126                           ;Probador1.c: 204:                                 incremento++;
  1127  0745  3001               	movlw	1
  1128  0746  00F5               	movwf	??_main
  1129  0747  0875               	movf	??_main,w
  1130  0748  07FC               	addwf	_incremento,f
  1131  0749                     l1326:
  1132                           
  1133                           ;Probador1.c: 206:                             if (incremento == 9) {
  1134  0749  3009               	movlw	9
  1135  074A  067C               	xorwf	_incremento,w
  1136  074B  1D03               	btfss	3,2
  1137  074C  2F4E               	goto	u781
  1138  074D  2F4F               	goto	u780
  1139  074E                     u781:
  1140  074E  2F17               	goto	l1314
  1141  074F                     u780:
  1142  074F                     l1328:
  1143                           
  1144                           ;Probador1.c: 207:                                 puerto = 4;
  1145  074F  3004               	movlw	4
  1146  0750  00F5               	movwf	??_main
  1147  0751  0875               	movf	??_main,w
  1148  0752  00A4               	movwf	_puerto
  1149  0753                     l1330:	
  1150                           ;Probador1.c: 208:                                 break;
  1151                           
  1152                           
  1153                           ;Probador1.c: 212:                     }
  1154  0753  087C               	movf	_incremento,w
  1155  0754  00F5               	movwf	??_main
  1156  0755  0875               	movf	??_main,w
  1157  0756  00FA               	movwf	main@i_83
  1158  0757                     l126:
  1159  0757  087D               	movf	_nro_pin,w
  1160  0758  027A               	subwf	main@i_83,w
  1161  0759  1C03               	skipc
  1162  075A  2F5C               	goto	u791
  1163  075B  2F5D               	goto	u790
  1164  075C                     u791:
  1165  075C  2F17               	goto	l1314
  1166  075D                     u790:
  1167  075D  2D97               	goto	l64
  1168  075E                     l1332:
  1169                           
  1170                           ;Probador1.c: 217:                 if (prueba == 0) {
  1171  075E  0821               	movf	_prueba,w
  1172  075F  1D03               	btfss	3,2
  1173  0760  2F62               	goto	u801
  1174  0761  2F63               	goto	u800
  1175  0762                     u801:
  1176  0762  2F84               	goto	l135
  1177  0763                     u800:
  1178  0763                     l1334:
  1179                           
  1180                           ;Probador1.c: 218:                     Prueba_sal();
  1181  0763  120A  118A  250A  120A  118A  	fcall	_Prueba_sal
  1182  0768                     l1336:
  1183                           
  1184                           ;Probador1.c: 219:                     porte_ent();
  1185  0768  120A  118A  24E8  120A  118A  	fcall	_porte_ent
  1186  076D                     l1338:
  1187                           
  1188                           ;Probador1.c: 221:                         if (RE1 == 1) {
  1189  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1190  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1191  076F  1C89               	btfss	9,1	;volatile
  1192  0770  2F72               	goto	u811
  1193  0771  2F73               	goto	u810
  1194  0772                     u811:
  1195  0772  2F78               	goto	l137
  1196  0773                     u810:
  1197  0773                     l1340:
  1198                           
  1199                           ;Probador1.c: 222:                             puerto = 4;
  1200  0773  3004               	movlw	4
  1201  0774  00F5               	movwf	??_main
  1202  0775  0875               	movf	??_main,w
  1203  0776  00A4               	movwf	_puerto
  1204  0777  2F07               	goto	l1304
  1205  0778                     l137:	
  1206                           ;Probador1.c: 225:                         }
  1207                           
  1208                           
  1209                           ;Probador1.c: 226:                         if (RE0 == 1) {
  1210  0778  1C09               	btfss	9,0	;volatile
  1211  0779  2F7B               	goto	u821
  1212  077A  2F7C               	goto	u820
  1213  077B                     u821:
  1214  077B  2F6D               	goto	l1338
  1215  077C                     u820:
  1216  077C                     l1344:
  1217                           
  1218                           ;Probador1.c: 227:                             puerto = 0;
  1219  077C  01A4               	clrf	_puerto
  1220  077D                     l1346:
  1221                           
  1222                           ;Probador1.c: 228:                             prueba = 1;
  1223  077D  01A1               	clrf	_prueba
  1224  077E  0AA1               	incf	_prueba,f
  1225  077F                     l1348:
  1226                           
  1227                           ;Probador1.c: 229:                             nro_pin = 7;
  1228  077F  3007               	movlw	7
  1229  0780  00F5               	movwf	??_main
  1230  0781  0875               	movf	??_main,w
  1231  0782  00FD               	movwf	_nro_pin
  1232                           
  1233                           ;Probador1.c: 230:                             break;
  1234  0783  2D97               	goto	l64
  1235  0784                     l135:
  1236                           
  1237                           ;Probador1.c: 235:                     incremento = 1;
  1238  0784  01FC               	clrf	_incremento
  1239  0785  0AFC               	incf	_incremento,f
  1240  0786                     l1352:
  1241                           
  1242                           ;Probador1.c: 236:                     nro_pin = 3;
  1243  0786  3003               	movlw	3
  1244  0787  00F5               	movwf	??_main
  1245  0788  0875               	movf	??_main,w
  1246  0789  00FD               	movwf	_nro_pin
  1247  078A                     l1354:
  1248                           
  1249                           ;Probador1.c: 237:                     mask = 1;
  1250  078A  01A3               	clrf	_mask
  1251  078B  0AA3               	incf	_mask,f
  1252  078C                     l1356:
  1253                           
  1254                           ;Probador1.c: 238:                     for (unsigned char i = 0; i < nro_pin; i = increm
      +                          ento) {
  1255  078C  01FB               	clrf	main@i_84
  1256  078D  2FCD               	goto	l142
  1257  078E                     l1358:
  1258                           
  1259                           ;Probador1.c: 240:                             if (PORTE & mask) {
  1260  078E  0809               	movf	9,w	;volatile
  1261  078F  0523               	andwf	_mask,w
  1262  0790  1903               	btfsc	3,2
  1263  0791  2F93               	goto	u831
  1264  0792  2F94               	goto	u830
  1265  0793                     u831:
  1266  0793  2FC0               	goto	l1370
  1267  0794                     u830:
  1268  0794                     l1360:
  1269                           
  1270                           ;Probador1.c: 241:                                 RE2 = 1;
  1271  0794  1509               	bsf	9,2	;volatile
  1272  0795                     l1362:
  1273                           
  1274                           ;Probador1.c: 242:                                 _delay((unsigned long)((300)*(4000000
      +                          UL/4000.0)));
  1275  0795  3002               	movlw	2
  1276  0796  00F7               	movwf	??_main+2
  1277  0797  3086               	movlw	134
  1278  0798  00F6               	movwf	??_main+1
  1279  0799  3099               	movlw	153
  1280  079A  00F5               	movwf	??_main
  1281  079B                     u957:
  1282  079B  0BF5               	decfsz	??_main,f
  1283  079C  2F9B               	goto	u957
  1284  079D  0BF6               	decfsz	??_main+1,f
  1285  079E  2F9B               	goto	u957
  1286  079F  0BF7               	decfsz	??_main+2,f
  1287  07A0  2F9B               	goto	u957
  1288  07A1                     l1364:
  1289                           
  1290                           ;Probador1.c: 243:                                 RE2 = 0;
  1291  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1292  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1293  07A3  1109               	bcf	9,2	;volatile
  1294                           
  1295                           ;Probador1.c: 244:                                 _delay((unsigned long)((50)*(4000000U
      +                          L/4000.0)));
  1296  07A4  3041               	movlw	65
  1297  07A5  00F6               	movwf	??_main+1
  1298  07A6  30EE               	movlw	238
  1299  07A7  00F5               	movwf	??_main
  1300  07A8                     u967:
  1301  07A8  0BF5               	decfsz	??_main,f
  1302  07A9  2FA8               	goto	u967
  1303  07AA  0BF6               	decfsz	??_main+1,f
  1304  07AB  2FA8               	goto	u967
  1305  07AC  0000               	nop
  1306  07AD                     l1366:
  1307                           
  1308                           ;Probador1.c: 245:                                 mask = (1 << incremento);
  1309  07AD  3001               	movlw	1
  1310  07AE  00F5               	movwf	??_main
  1311  07AF  0A7C               	incf	_incremento,w
  1312  07B0  2FB3               	goto	u844
  1313  07B1                     u845:
  1314  07B1  1003               	clrc
  1315  07B2  0DF5               	rlf	??_main,f
  1316  07B3                     u844:
  1317  07B3  3EFF               	addlw	-1
  1318  07B4  1D03               	skipz
  1319  07B5  2FB1               	goto	u845
  1320  07B6  0875               	movf	??_main,w
  1321  07B7  00F6               	movwf	??_main+1
  1322  07B8  0876               	movf	??_main+1,w
  1323  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1324  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1325  07BB  00A3               	movwf	_mask
  1326  07BC                     l1368:
  1327                           
  1328                           ;Probador1.c: 246:                                 incremento++;
  1329  07BC  3001               	movlw	1
  1330  07BD  00F5               	movwf	??_main
  1331  07BE  0875               	movf	??_main,w
  1332  07BF  07FC               	addwf	_incremento,f
  1333  07C0                     l1370:
  1334                           
  1335                           ;Probador1.c: 248:                             if (incremento == 4) {
  1336  07C0  3004               	movlw	4
  1337  07C1  067C               	xorwf	_incremento,w
  1338  07C2  1D03               	btfss	3,2
  1339  07C3  2FC5               	goto	u851
  1340  07C4  2FC6               	goto	u850
  1341  07C5                     u851:
  1342  07C5  2F8E               	goto	l1358
  1343  07C6                     u850:
  1344  07C6                     l1372:
  1345                           
  1346                           ;Probador1.c: 249:                                 puerto = 0;
  1347  07C6  01A4               	clrf	_puerto
  1348  07C7                     l1374:
  1349                           
  1350                           ;Probador1.c: 250:                                 nro_pin = 7;
  1351  07C7  3007               	movlw	7
  1352  07C8  00F5               	movwf	??_main
  1353  07C9  0875               	movf	??_main,w
  1354  07CA  00FD               	movwf	_nro_pin
  1355  07CB                     l1376:
  1356                           
  1357                           ;Probador1.c: 251:                                 prueba = 0;
  1358  07CB  01A1               	clrf	_prueba
  1359                           
  1360                           ;Probador1.c: 252:                                 break;
  1361  07CC  2D97               	goto	l64
  1362  07CD                     l142:
  1363  07CD  087D               	movf	_nro_pin,w
  1364  07CE  027B               	subwf	main@i_84,w
  1365  07CF  1C03               	skipc
  1366  07D0  2FD2               	goto	u861
  1367  07D1  2FD3               	goto	u860
  1368  07D2                     u861:
  1369  07D2  2F8E               	goto	l1358
  1370  07D3                     u860:
  1371  07D3  2D97               	goto	l64
  1372  07D4                     l1380:
  1373  07D4  0824               	movf	_puerto,w
  1374  07D5  00F5               	movwf	??_main
  1375  07D6  01F6               	clrf	??_main+1
  1376                           
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ; direct_byte           11     8 (fixed)
  1384                           ; jumptable            260     6 (fixed)
  1385                           ;	Chosen strategy is simple_byte
  1386  07D7  0876               	movf	??_main+1,w
  1387  07D8  3A00               	xorlw	0	; case 0
  1388  07D9  1903               	skipnz
  1389  07DA  2FDC               	goto	l1428
  1390  07DB  2D97               	goto	l64
  1391  07DC                     l1428:
  1392                           
  1393                           ; Switch size 1, requested type "simple"
  1394                           ; Number of cases is 5, Range of values is 0 to 4
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte           16     9 (average)
  1398                           ; direct_byte           23     8 (fixed)
  1399                           ; jumptable            260     6 (fixed)
  1400                           ;	Chosen strategy is simple_byte
  1401  07DC  0875               	movf	??_main,w
  1402  07DD  3A00               	xorlw	0	; case 0
  1403  07DE  1903               	skipnz
  1404  07DF  2DA0               	goto	l1180
  1405  07E0  3A01               	xorlw	1	; case 1
  1406  07E1  1903               	skipnz
  1407  07E2  2E12               	goto	l1222
  1408  07E3  3A03               	xorlw	3	; case 2
  1409  07E4  1903               	skipnz
  1410  07E5  2E7F               	goto	l1258
  1411  07E6  3A01               	xorlw	1	; case 3
  1412  07E7  1903               	skipnz
  1413  07E8  2EEA               	goto	l1294
  1414  07E9  3A07               	xorlw	7	; case 4
  1415  07EA  1903               	skipnz
  1416  07EB  2F5E               	goto	l1332
  1417  07EC  2D97               	goto	l64
  1418  07ED  120A  118A  2800   	ljmp	start
  1419  07F0                     __end_of_main:
  1420                           
  1421                           	psect	text1
  1422  04E4                     __ptext1:	
  1423 ;; *************** function _porte_sal *****************
  1424 ;; Defined at:
  1425 ;;		line 305 in file "Probador1.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452  04E4                     _porte_sal:	
  1453                           ;psect for function _porte_sal
  1454                           
  1455  04E4                     l1168:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _porte_sal: [status,2]
  1458                           
  1459                           
  1460                           ;Probador1.c: 306:     TRISE = 0b00000000;
  1461  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1462  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  1463  04E6  0189               	clrf	9	;volatile
  1464  04E7                     l164:
  1465  04E7  0008               	return
  1466  04E8                     __end_of_porte_sal:
  1467                           
  1468                           	psect	text2
  1469  04E8                     __ptext2:	
  1470 ;; *************** function _porte_ent *****************
  1471 ;; Defined at:
  1472 ;;		line 301 in file "Probador1.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499  04E8                     _porte_ent:	
  1500                           ;psect for function _porte_ent
  1501                           
  1502  04E8                     l1154:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _porte_ent: [wreg]
  1505                           
  1506                           
  1507                           ;Probador1.c: 302:     TRISE = 0b00000011;
  1508  04E8  3003               	movlw	3
  1509  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1510  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1511  04EB  0089               	movwf	9	;volatile
  1512  04EC                     l161:
  1513  04EC  0008               	return
  1514  04ED                     __end_of_porte_ent:
  1515                           
  1516                           	psect	text3
  1517  04ED                     __ptext3:	
  1518 ;; *************** function _port_conf_r2 *****************
  1519 ;; Defined at:
  1520 ;;		line 280 in file "Probador1.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547  04ED                     _port_conf_r2:	
  1548                           ;psect for function _port_conf_r2
  1549                           
  1550  04ED                     l1164:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _port_conf_r2: [wreg+status,2]
  1553                           
  1554                           
  1555                           ;Probador1.c: 281:     TRISA = 0xFF;
  1556  04ED  30FF               	movlw	255
  1557  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  1558  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  1559  04F0  0085               	movwf	5	;volatile
  1560                           
  1561                           ;Probador1.c: 282:     TRISB = 0xFF;
  1562  04F1  30FF               	movlw	255
  1563  04F2  0086               	movwf	6	;volatile
  1564                           
  1565                           ;Probador1.c: 283:     TRISC = 0xFF;
  1566  04F3  30FF               	movlw	255
  1567  04F4  0087               	movwf	7	;volatile
  1568                           
  1569                           ;Probador1.c: 284:     TRISD = 0xFF;
  1570  04F5  30FF               	movlw	255
  1571  04F6  0088               	movwf	8	;volatile
  1572  04F7                     l1166:
  1573                           
  1574                           ;Probador1.c: 285:     PORTE = 0x00;
  1575  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1576  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1577  04F9  0189               	clrf	9	;volatile
  1578  04FA                     l155:
  1579  04FA  0008               	return
  1580  04FB                     __end_of_port_conf_r2:
  1581                           
  1582                           	psect	text4
  1583  04FB                     __ptext4:	
  1584 ;; *************** function _port_conf_r1 *****************
  1585 ;; Defined at:
  1586 ;;		line 288 in file "Probador1.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613  04FB                     _port_conf_r1:	
  1614                           ;psect for function _port_conf_r1
  1615                           
  1616  04FB                     l1142:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _port_conf_r1: [wreg+status,2]
  1619                           
  1620                           
  1621                           ;Probador1.c: 290:     TRISA = 0b00000000;
  1622  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  1623  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  1624  04FD  0185               	clrf	5	;volatile
  1625                           
  1626                           ;Probador1.c: 291:     TRISB = 0b00000000;
  1627  04FE  0186               	clrf	6	;volatile
  1628                           
  1629                           ;Probador1.c: 292:     TRISC = 0b00000000;
  1630  04FF  0187               	clrf	7	;volatile
  1631                           
  1632                           ;Probador1.c: 293:     TRISD = 0b00000000;
  1633  0500  0188               	clrf	8	;volatile
  1634  0501                     l1144:
  1635                           
  1636                           ;Probador1.c: 294:     ADCON1 = 0b00000111;
  1637  0501  3007               	movlw	7
  1638  0502  009F               	movwf	31	;volatile
  1639  0503                     l1146:
  1640                           
  1641                           ;Probador1.c: 295:     PORTB = 0;
  1642  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0505  0186               	clrf	6	;volatile
  1645  0506                     l1148:
  1646                           
  1647                           ;Probador1.c: 296:     PORTC = 0;
  1648  0506  0187               	clrf	7	;volatile
  1649  0507                     l1150:
  1650                           
  1651                           ;Probador1.c: 297:     PORTD = 0;
  1652  0507  0188               	clrf	8	;volatile
  1653  0508                     l1152:
  1654                           
  1655                           ;Probador1.c: 298:     PORTE = 0;
  1656  0508  0189               	clrf	9	;volatile
  1657  0509                     l158:
  1658  0509  0008               	return
  1659  050A                     __end_of_port_conf_r1:
  1660                           
  1661                           	psect	text5
  1662  050A                     __ptext5:	
  1663 ;; *************** function _Prueba_sal *****************
  1664 ;; Defined at:
  1665 ;;		line 309 in file "Probador1.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  i               1    4[COMMON] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0
  1681 ;;      Temps:          1       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 1
  1686 ;; This function calls:
  1687 ;;		_salidas
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693  050A                     _Prueba_sal:	
  1694                           ;psect for function _Prueba_sal
  1695                           
  1696  050A                     l1156:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _Prueba_sal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1699                           
  1700                           
  1701                           ;Probador1.c: 310:     for (unsigned char i = 0; i < nro_pin; i++) {
  1702  050A  01F4               	clrf	Prueba_sal@i
  1703  050B  2D16               	goto	l1162
  1704  050C                     l1158:
  1705                           
  1706                           ;Probador1.c: 311:         salidas(i);
  1707  050C  0874               	movf	Prueba_sal@i,w
  1708  050D  120A  118A  251D  120A  118A  	fcall	_salidas
  1709  0512                     l1160:
  1710                           
  1711                           ;Probador1.c: 312:     }
  1712  0512  3001               	movlw	1
  1713  0513  00F3               	movwf	??_Prueba_sal
  1714  0514  0873               	movf	??_Prueba_sal,w
  1715  0515  07F4               	addwf	Prueba_sal@i,f
  1716  0516                     l1162:
  1717  0516  087D               	movf	_nro_pin,w
  1718  0517  0274               	subwf	Prueba_sal@i,w
  1719  0518  1C03               	skipc
  1720  0519  2D1B               	goto	u491
  1721  051A  2D1C               	goto	u490
  1722  051B                     u491:
  1723  051B  2D0C               	goto	l1158
  1724  051C                     u490:
  1725  051C                     l170:
  1726  051C  0008               	return
  1727  051D                     __end_of_Prueba_sal:
  1728                           
  1729                           	psect	text6
  1730  051D                     __ptext6:	
  1731 ;; *************** function _salidas *****************
  1732 ;; Defined at:
  1733 ;;		line 315 in file "Probador1.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  i               1    wreg     unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  i               1    2[COMMON] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         1       0       0       0       0
  1749 ;;      Temps:          2       0       0       0       0
  1750 ;;      Totals:         3       0       0       0       0
  1751 ;;Total ram usage:        3 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_Prueba_sal
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760  051D                     _salidas:	
  1761                           ;psect for function _salidas
  1762                           
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _salidas: [wreg-fsr0h+status,2+status,0]
  1766                           ;salidas@i stored from wreg
  1767  051D  00F2               	movwf	salidas@i
  1768  051E                     l1112:
  1769                           
  1770                           ;Probador1.c: 316:     switch (puerto) {
  1771  051E  2D63               	goto	l1136
  1772  051F                     l1114:
  1773                           
  1774                           ;Probador1.c: 318:             PORTA = (1 << i);
  1775  051F  3001               	movlw	1
  1776  0520  00F0               	movwf	??_salidas
  1777  0521  0A72               	incf	salidas@i,w
  1778  0522  2D25               	goto	u444
  1779  0523                     u445:
  1780  0523  1003               	clrc
  1781  0524  0DF0               	rlf	??_salidas,f
  1782  0525                     u444:
  1783  0525  3EFF               	addlw	-1
  1784  0526  1D03               	skipz
  1785  0527  2D23               	goto	u445
  1786  0528  0870               	movf	??_salidas,w
  1787  0529  0085               	movwf	5	;volatile
  1788  052A                     l1116:
  1789                           
  1790                           ;Probador1.c: 319:             _delay((unsigned long)((150)*(4000000UL/4000.0)));
  1791  052A  30C3               	movlw	195
  1792  052B  00F1               	movwf	??_salidas+1
  1793  052C  30CD               	movlw	205
  1794  052D  00F0               	movwf	??_salidas
  1795  052E                     u977:
  1796  052E  0BF0               	decfsz	??_salidas,f
  1797  052F  2D2E               	goto	u977
  1798  0530  0BF1               	decfsz	??_salidas+1,f
  1799  0531  2D2E               	goto	u977
  1800                           
  1801                           ;Probador1.c: 320:             break;
  1802  0532  2D7E               	goto	l180
  1803  0533                     l1118:
  1804                           
  1805                           ;Probador1.c: 322:             PORTB = (1 << i);
  1806  0533  3001               	movlw	1
  1807  0534  00F0               	movwf	??_salidas
  1808  0535  0A72               	incf	salidas@i,w
  1809  0536  2D39               	goto	u454
  1810  0537                     u455:
  1811  0537  1003               	clrc
  1812  0538  0DF0               	rlf	??_salidas,f
  1813  0539                     u454:
  1814  0539  3EFF               	addlw	-1
  1815  053A  1D03               	skipz
  1816  053B  2D37               	goto	u455
  1817  053C  0870               	movf	??_salidas,w
  1818  053D  0086               	movwf	6	;volatile
  1819  053E  2D2A               	goto	l1116
  1820  053F                     l1122:
  1821                           
  1822                           ;Probador1.c: 326:             PORTC = (1 << i);
  1823  053F  3001               	movlw	1
  1824  0540  00F0               	movwf	??_salidas
  1825  0541  0A72               	incf	salidas@i,w
  1826  0542  2D45               	goto	u464
  1827  0543                     u465:
  1828  0543  1003               	clrc
  1829  0544  0DF0               	rlf	??_salidas,f
  1830  0545                     u464:
  1831  0545  3EFF               	addlw	-1
  1832  0546  1D03               	skipz
  1833  0547  2D43               	goto	u465
  1834  0548  0870               	movf	??_salidas,w
  1835  0549  0087               	movwf	7	;volatile
  1836  054A  2D2A               	goto	l1116
  1837  054B                     l1126:
  1838                           
  1839                           ;Probador1.c: 330:             PORTD = (1 << i);
  1840  054B  3001               	movlw	1
  1841  054C  00F0               	movwf	??_salidas
  1842  054D  0A72               	incf	salidas@i,w
  1843  054E  2D51               	goto	u474
  1844  054F                     u475:
  1845  054F  1003               	clrc
  1846  0550  0DF0               	rlf	??_salidas,f
  1847  0551                     u474:
  1848  0551  3EFF               	addlw	-1
  1849  0552  1D03               	skipz
  1850  0553  2D4F               	goto	u475
  1851  0554  0870               	movf	??_salidas,w
  1852  0555  0088               	movwf	8	;volatile
  1853  0556  2D2A               	goto	l1116
  1854  0557                     l1130:
  1855                           
  1856                           ;Probador1.c: 334:             PORTE = (1 << i);
  1857  0557  3001               	movlw	1
  1858  0558  00F0               	movwf	??_salidas
  1859  0559  0A72               	incf	salidas@i,w
  1860  055A  2D5D               	goto	u484
  1861  055B                     u485:
  1862  055B  1003               	clrc
  1863  055C  0DF0               	rlf	??_salidas,f
  1864  055D                     u484:
  1865  055D  3EFF               	addlw	-1
  1866  055E  1D03               	skipz
  1867  055F  2D5B               	goto	u485
  1868  0560  0870               	movf	??_salidas,w
  1869  0561  0089               	movwf	9	;volatile
  1870  0562  2D2A               	goto	l1116
  1871  0563                     l1136:
  1872  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0565  0824               	movf	_puerto,w
  1875  0566  00F0               	movwf	??_salidas
  1876  0567  01F1               	clrf	??_salidas+1
  1877                           
  1878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1879                           ; Switch size 1, requested type "simple"
  1880                           ; Number of cases is 1, Range of values is 0 to 0
  1881                           ; switch strategies available:
  1882                           ; Name         Instructions Cycles
  1883                           ; simple_byte            4     3 (average)
  1884                           ; direct_byte           11     8 (fixed)
  1885                           ; jumptable            260     6 (fixed)
  1886                           ;	Chosen strategy is simple_byte
  1887  0568  0871               	movf	??_salidas+1,w
  1888  0569  3A00               	xorlw	0	; case 0
  1889  056A  1903               	skipnz
  1890  056B  2D6D               	goto	l1430
  1891  056C  2D7E               	goto	l180
  1892  056D                     l1430:
  1893                           
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 5, Range of values is 0 to 4
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           16     9 (average)
  1899                           ; direct_byte           23     8 (fixed)
  1900                           ; jumptable            260     6 (fixed)
  1901                           ;	Chosen strategy is simple_byte
  1902  056D  0870               	movf	??_salidas,w
  1903  056E  3A00               	xorlw	0	; case 0
  1904  056F  1903               	skipnz
  1905  0570  2D1F               	goto	l1114
  1906  0571  3A01               	xorlw	1	; case 1
  1907  0572  1903               	skipnz
  1908  0573  2D33               	goto	l1118
  1909  0574  3A03               	xorlw	3	; case 2
  1910  0575  1903               	skipnz
  1911  0576  2D3F               	goto	l1122
  1912  0577  3A01               	xorlw	1	; case 3
  1913  0578  1903               	skipnz
  1914  0579  2D4B               	goto	l1126
  1915  057A  3A07               	xorlw	7	; case 4
  1916  057B  1903               	skipnz
  1917  057C  2D57               	goto	l1130
  1918  057D  2D7E               	goto	l180
  1919  057E                     l180:
  1920  057E  0008               	return
  1921  057F                     __end_of_salidas:
  1922  007E                     btemp	set	126	;btemp
  1923  007E                     wtemp0	set	126
  1924                           
  1925                           	psect	idloc
  1926                           
  1927                           ;Config register IDLOC0 @ 0x2000
  1928                           ;	unspecified, using default values
  1929  2000                     	org	8192
  1930  2000  3FFF               	dw	16383
  1931                           
  1932                           ;Config register IDLOC1 @ 0x2001
  1933                           ;	unspecified, using default values
  1934  2001                     	org	8193
  1935  2001  3FFF               	dw	16383
  1936                           
  1937                           ;Config register IDLOC2 @ 0x2002
  1938                           ;	unspecified, using default values
  1939  2002                     	org	8194
  1940  2002  3FFF               	dw	16383
  1941                           
  1942                           ;Config register IDLOC3 @ 0x2003
  1943                           ;	unspecified, using default values
  1944  2003                     	org	8195
  1945  2003  3FFF               	dw	16383
  1946                           
  1947                           	psect	config
  1948                           
  1949                           ;Config register CONFIG @ 0x2007
  1950                           ;	Oscillator Selection bits
  1951                           ;	FOSC = XT, XT oscillator
  1952                           ;	Watchdog Timer Enable bit
  1953                           ;	WDTE = OFF, WDT disabled
  1954                           ;	Power-up Timer Enable bit
  1955                           ;	PWRTE = ON, PWRT enabled
  1956                           ;	Brown-out Reset Enable bit
  1957                           ;	BOREN = ON, BOR enabled
  1958                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1959                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1960                           ;	Data EEPROM Memory Code Protection bit
  1961                           ;	CPD = OFF, Data EEPROM code protection off
  1962                           ;	Flash Program Memory Write Enable bits
  1963                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1964                           ;	In-Circuit Debugger Mode bit
  1965                           ;	DEBUG = 0x1, unprogrammed default
  1966                           ;	Flash Program Memory Code Protection bit
  1967                           ;	CP = OFF, Code protection off
  1968  2007                     	org	8199
  1969  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Prueba_sal
    _Prueba_sal->_salidas

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     276
                                              5 COMMON     7     7      0
                         _Prueba_sal
                       _port_conf_r1
                       _port_conf_r2
                          _porte_ent
                          _porte_sal
 ---------------------------------------------------------------------------------
 (1) _porte_sal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _porte_ent                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _port_conf_r1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Prueba_sal                                           2     2      0     156
                                              3 COMMON     2     2      0
                            _salidas
 ---------------------------------------------------------------------------------
 (2) _salidas                                              3     3      0     110
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Prueba_sal
     _salidas
   _port_conf_r1
   _port_conf_r2
   _porte_ent
   _porte_sal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       6       5        7.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 23 20:28:02 2025

                     l72 05BB                       l64 0597                       l67 059D  
                     l94 0678                       l78 060D                       l87 062E  
                     l89 0625                       _xx 0022                      l110 06E3  
                    l103 0699                      l121 06FB                      l105 0690  
                    l142 07CD                      l126 0757                      l135 0784  
                    l119 070D                      l161 04EC                      l137 0778  
                    l170 051C                      l155 04FA                      l180 057E  
                    l164 04E7                      l158 0509                      _RE0 0048  
                    _RE1 0049                      _RE2 004A                      u500 0596  
                    u501 0595                      u510 059D                      u511 059C  
                    u600 0622                      u520 05A5                      u601 0621  
                    u521 05A4                      u610 0629                      u530 05BA  
                    u611 0628                      u531 05B9                      u444 0525  
                    u620 063E                      u540 05BF                      u445 0523  
                    u621 063D                      u541 05BE                      u454 0539  
                    u710 06DB                      u550 05D8                      u455 0537  
                    u711 06DA                      u551 05D7                      u464 0545  
                    u800 0763                      u720 06E9                      u704 06C8  
                    u640 0670                      u465 0543                      u801 0762  
                    u721 06E8                      u705 06C6                      u641 066F  
                    u474 0551                      u490 051C                      u810 0773  
                    u730 06EF                      u650 067E                      u634 065D  
                    u570 060A                      u475 054F                      u491 051B  
                    u811 0772                      u731 06EE                      u651 067D  
                    u635 065B                      u571 0609                      u484 055D  
                    u820 077C                      u740 06FA                      u660 0684  
                    u580 0612                      u564 05F7                      u485 055B  
                    u821 077B                      u741 06F9                      u661 0683  
                    u581 0611                      u565 05F5                      u830 0794  
                    u750 06FF                      u670 068F                      u590 0617  
                    u831 0793                      u751 06FE                      u671 068E  
                    u591 0616                      u760 071D                      u680 0694  
                    u761 071C                      u681 0693                      u850 07C6  
                    u690 06A9                      u851 07C5                      u691 06A8  
                    u907 0652                      u860 07D3                      u844 07B3  
                    u780 074F                      u861 07D2                      u845 07B1  
                    u781 074E                      u917 06B0                      u790 075D  
                    u774 073C                      u791 075C                      u775 073A  
                    u927 06BD                      u937 0724                      u947 0731  
                    u957 079B                      u877 05DF                      u967 07A8  
                    u887 05EC                      u977 052E                      u897 0645  
                   l1112 051E                     l1200 05CF                     l1130 0557  
                   l1122 053F                     l1114 051F                     l1210 05E5  
                   l1202 05D1                     l1116 052A                     l1212 05F1  
                   l1204 05D2                     l1126 054B                     l1118 0533  
                   l1150 0507                     l1142 04FB                     l1310 0713  
                   l1302 06FF                     l1230 0629                     l1222 0612  
                   l1214 0600                     l1206 05D8                     l1136 0563  
                   l1160 0512                     l1152 0508                     l1144 0501  
                   l1320 072A                     l1312 0715                     l1304 0707  
                   l1240 0638                     l1224 0617                     l1208 05D9  
                   l1216 0604                     l1162 0516                     l1146 0503  
                   l1154 04E8                     l1330 0753                     l1322 0736  
                   l1314 0717                     l1250 0666                     l1242 063E  
                   l1234 0630                     l1226 061C                     l1218 060A  
                   l1170 057F                     l1156 050A                     l1148 0506  
                   l1164 04ED                     l1340 0773                     l1332 075E  
                   l1324 0745                     l1316 071D                     l1308 070F  
                   l1260 0684                     l1244 063F                     l1252 066A  
                   l1236 0634                     l1228 0622                     l1180 05A0  
                   l1172 0589                     l1430 056D                     l1158 050C  
                   l1166 04F7                     l1334 0763                     l1318 071E  
                   l1326 0749                     l1270 069B                     l1262 0689  
                   l1254 0670                     l1246 064B                     l1238 0636  
                   l1190 05BF                     l1182 05A5                     l1174 058F  
                   l1168 04E4                     l1360 0794                     l1352 0786  
                   l1344 077C                     l1336 0768                     l1328 074F  
                   l1280 06AA                     l1272 069F                     l1256 0674  
                   l1248 0657                     l1192 05C1                     l1184 05AF  
                   l1176 0591                     l1362 0795                     l1370 07C0  
                   l1354 078A                     l1346 077D                     l1338 076D  
                   l1290 06DB                     l1282 06B6                     l1274 06A1  
                   l1266 0694                     l1258 067F                     l1186 05B4  
                   l1428 07DC                     l1372 07C6                     l1364 07A1  
                   l1356 078C                     l1348 077F                     l1292 06DF  
                   l1284 06C2                     l1276 06A3                     l1196 05C6  
                   l1380 07D4                     l1374 07C7                     l1366 07AD  
                   l1358 078E                     l1294 06EA                     l1286 06D1  
                   l1278 06A9                     l1198 05CB                     l1376 07CB  
                   l1368 07BC                     l1296 06EF                     l1288 06D5  
                   l1298 06F4                     _caso 0020                     _main 057F  
                   _mask 0023                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_salidas 057F  
                  status 0003                    wtemp0 007E          __initialization 07F0  
           __end_of_main 07F0                   ??_main 0075                   _ADCON1 009F  
                 _prueba 0021                   _puerto 0024               _Prueba_sal 050A  
           __pdataCOMMON 007D                ??_salidas 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pbssBANK0 0020               __pmaintext 057F  
            ?_Prueba_sal 0070               _incremento 007C                  __ptext1 04E4  
                __ptext2 04E8                  __ptext3 04ED                  __ptext4 04FB  
                __ptext5 050A                  __ptext6 051D                  _salidas 051D  
                _nro_pin 007D     end_of_initialization 07FC        __end_of_porte_ent 04ED  
      __end_of_porte_sal 04E8              Prueba_sal@i 0074            ?_port_conf_r1 0070  
          ?_port_conf_r2 0070            __pidataCOMMON 04E3      start_initialization 07F0  
         ??_port_conf_r1 0070           ??_port_conf_r2 0070             ??_Prueba_sal 0073  
            __pbssCOMMON 007C                ___latbits 0002                __pnvBANK0 0025  
     __end_of_Prueba_sal 051D                 ?_salidas 0070     __end_of_port_conf_r1 050A  
   __end_of_port_conf_r2 04FB                _porte_ent 04E8                _porte_sal 04E4  
             ?_porte_ent 0070               ?_porte_sal 0070                 _port_act 0025  
               main@i_81 0078                 main@i_82 0079                 main@i_83 007A  
               main@i_84 007B                 salidas@i 0072              ??_porte_ent 0070  
            ??_porte_sal 0070             _port_conf_r1 04FB             _port_conf_r2 04ED  
